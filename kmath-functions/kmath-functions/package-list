$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:space.kscience.kmath.functions////PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/index.html
$dokka.location:space.kscience.kmath.functions//Polynomial/#kotlin.Array[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial.html
$dokka.location:space.kscience.kmath.functions//asFunction/space.kscience.kmath.functions.PiecewisePolynomial[TypeParam(bounds=[kotlin.Comparable[^]])]#TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Comparable[^^]])]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/as-function.html
$dokka.location:space.kscience.kmath.functions//asFunction/space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Any])]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/as-function.html
$dokka.location:space.kscience.kmath.functions//polynomial/TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Any])], space.kscience.kmath.operations.ScaleOperations[TypeParam(bounds=[kotlin.Any])]])#kotlin.Function1[space.kscience.kmath.functions.PolynomialSpace[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Any])], space.kscience.kmath.operations.ScaleOperations[TypeParam(bounds=[kotlin.Any])]])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/polynomial.html
$dokka.location:space.kscience.kmath.functions//value/space.kscience.kmath.functions.PiecewisePolynomial[TypeParam(bounds=[kotlin.Comparable[^]])]#TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Comparable[^^]])]])#TypeParam(bounds=[kotlin.Comparable[^]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/value.html
$dokka.location:space.kscience.kmath.functions//value/space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Any])]])#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/value.html
$dokka.location:space.kscience.kmath.functions//value/space.kscience.kmath.functions.Polynomial[kotlin.Double]#/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/value.html
$dokka.location:space.kscience.kmath.functions/OrderedPiecewisePolynomial///PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-ordered-piecewise-polynomial/index.html
$dokka.location:space.kscience.kmath.functions/OrderedPiecewisePolynomial/OrderedPiecewisePolynomial/#TypeParam(bounds=[kotlin.Comparable[^]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-ordered-piecewise-polynomial/-ordered-piecewise-polynomial.html
$dokka.location:space.kscience.kmath.functions/OrderedPiecewisePolynomial/findPiece/#TypeParam(bounds=[kotlin.Comparable[^]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-ordered-piecewise-polynomial/find-piece.html
$dokka.location:space.kscience.kmath.functions/OrderedPiecewisePolynomial/putLeft/#TypeParam(bounds=[kotlin.Comparable[^]])#space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-ordered-piecewise-polynomial/put-left.html
$dokka.location:space.kscience.kmath.functions/OrderedPiecewisePolynomial/putRight/#TypeParam(bounds=[kotlin.Comparable[^]])#space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-ordered-piecewise-polynomial/put-right.html
$dokka.location:space.kscience.kmath.functions/Piecewise///PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-piecewise/index.html
$dokka.location:space.kscience.kmath.functions/Piecewise/findPiece/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-piecewise/find-piece.html
$dokka.location:space.kscience.kmath.functions/PiecewisePolynomial///PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial/index.html
$dokka.location:space.kscience.kmath.functions/Polynomial///PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial/index.html
$dokka.location:space.kscience.kmath.functions/Polynomial/Polynomial/#kotlin.collections.List[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial/-polynomial.html
$dokka.location:space.kscience.kmath.functions/Polynomial/coefficients/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial/coefficients.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace///PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/index.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/PolynomialSpace/#TypeParam(bounds=[space.kscience.kmath.operations.Ring[TypeParam(bounds=[kotlin.Any])], space.kscience.kmath.operations.ScaleOperations[TypeParam(bounds=[kotlin.Any])]])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/-polynomial-space.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/add/#space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/add.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/invoke/space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/invoke.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/scale/#space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#kotlin.Double/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/scale.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/unaryMinus/space.kscience.kmath.functions.Polynomial[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/unary-minus.html
$dokka.location:space.kscience.kmath.functions/PolynomialSpace/zero/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.functions/-polynomial-space/zero.html
$dokka.location:space.kscience.kmath.integration////PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/index.html
$dokka.location:space.kscience.kmath.integration//MultivariateIntegrand/#kotlin.Array[space.kscience.kmath.integration.IntegrandFeature]#kotlin.Function1[space.kscience.kmath.structures.Buffer[TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand.html
$dokka.location:space.kscience.kmath.integration//UnivariateIntegrand/#kotlin.Function1[kotlin.Double,TypeParam(bounds=[kotlin.Any])]#kotlin.Array[space.kscience.kmath.integration.IntegrandFeature]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand.html
$dokka.location:space.kscience.kmath.integration//build/space.kscience.kmath.integration.GaussIntegratorRuleFactory#kotlin.Int#kotlin.ranges.ClosedRange[kotlin.Double]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/build.html
$dokka.location:space.kscience.kmath.integration//calls/space.kscience.kmath.integration.Integrand#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/calls.html
$dokka.location:space.kscience.kmath.integration//getFeature/space.kscience.kmath.integration.Integrand#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/get-feature.html
$dokka.location:space.kscience.kmath.integration//integrate/space.kscience.kmath.integration.Integrator[space.kscience.kmath.integration.UnivariateIntegrand[kotlin.Double]]#kotlin.ranges.ClosedRange[kotlin.Double]#kotlin.Array[space.kscience.kmath.integration.IntegrandFeature]#kotlin.Function1[kotlin.Double,kotlin.Double]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/integrate.html
$dokka.location:space.kscience.kmath.integration//integrate/space.kscience.kmath.integration.Integrator[space.kscience.kmath.integration.UnivariateIntegrand[kotlin.Double]]#kotlin.ranges.ClosedRange[kotlin.Double]#kotlin.Function1[kotlin.Double,kotlin.Double]#kotlin.Function1[kotlin.collections.MutableList[space.kscience.kmath.integration.IntegrandFeature],kotlin.Unit]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/integrate.html
$dokka.location:space.kscience.kmath.integration//integrate/space.kscience.kmath.operations.Field[TypeParam(bounds=[kotlin.Any])]#kotlin.Array[space.kscience.kmath.integration.IntegrandFeature]#kotlin.Function1[kotlin.Double,TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/integrate.html
$dokka.location:space.kscience.kmath.integration//integrate/space.kscience.kmath.operations.Field[TypeParam(bounds=[kotlin.Any])]#kotlin.ranges.ClosedRange[kotlin.Double]#kotlin.Int#kotlin.Int#kotlin.Array[space.kscience.kmath.integration.IntegrandFeature]#kotlin.Function1[kotlin.Double,TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/integrate.html
$dokka.location:space.kscience.kmath.integration//value/space.kscience.kmath.integration.MultivariateIntegrand[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/value.html
$dokka.location:space.kscience.kmath.integration//value/space.kscience.kmath.integration.UnivariateIntegrand[TypeParam(bounds=[kotlin.Any])]#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/value.html
$dokka.location:space.kscience.kmath.integration/GaussIntegrator.Companion///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator/-companion/index.html
$dokka.location:space.kscience.kmath.integration/GaussIntegrator///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator/index.html
$dokka.location:space.kscience.kmath.integration/GaussIntegrator/GaussIntegrator/#space.kscience.kmath.operations.Field[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator/-gauss-integrator.html
$dokka.location:space.kscience.kmath.integration/GaussIntegrator/algebra/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator/algebra.html
$dokka.location:space.kscience.kmath.integration/GaussIntegrator/integrate/#space.kscience.kmath.integration.UnivariateIntegrand[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator/integrate.html
$dokka.location:space.kscience.kmath.integration/GaussIntegratorRuleFactory.Companion///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/-companion/index.html
$dokka.location:space.kscience.kmath.integration/GaussIntegratorRuleFactory.Companion/double/#kotlin.Int#kotlin.ranges.ClosedRange[kotlin.Double]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/-companion/double.html
$dokka.location:space.kscience.kmath.integration/GaussIntegratorRuleFactory///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/index.html
$dokka.location:space.kscience.kmath.integration/GaussIntegratorRuleFactory/build/#kotlin.Int/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/build.html
$dokka.location:space.kscience.kmath.integration/GaussLegendreRuleFactory///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-legendre-rule-factory/index.html
$dokka.location:space.kscience.kmath.integration/GaussLegendreRuleFactory/build/#kotlin.Int/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-gauss-legendre-rule-factory/build.html
$dokka.location:space.kscience.kmath.integration/Integrand///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand/index.html
$dokka.location:space.kscience.kmath.integration/Integrand/getFeature/#kotlin.reflect.KClass[TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand/get-feature.html
$dokka.location:space.kscience.kmath.integration/IntegrandAbsoluteAccuracy///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandAbsoluteAccuracy/IntegrandAbsoluteAccuracy/#kotlin.Double/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/-integrand-absolute-accuracy.html
$dokka.location:space.kscience.kmath.integration/IntegrandAbsoluteAccuracy/accuracy/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/accuracy.html
$dokka.location:space.kscience.kmath.integration/IntegrandCallsPerformed///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandCallsPerformed/IntegrandCallsPerformed/#kotlin.Int/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/-integrand-calls-performed.html
$dokka.location:space.kscience.kmath.integration/IntegrandCallsPerformed/calls/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/calls.html
$dokka.location:space.kscience.kmath.integration/IntegrandFeature///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-feature/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandMaxCalls///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandMaxCalls/IntegrandMaxCalls/#kotlin.Int/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/-integrand-max-calls.html
$dokka.location:space.kscience.kmath.integration/IntegrandMaxCalls/maxCalls/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/max-calls.html
$dokka.location:space.kscience.kmath.integration/IntegrandRelativeAccuracy///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandRelativeAccuracy/IntegrandRelativeAccuracy/#kotlin.Double/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/-integrand-relative-accuracy.html
$dokka.location:space.kscience.kmath.integration/IntegrandRelativeAccuracy/accuracy/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/accuracy.html
$dokka.location:space.kscience.kmath.integration/IntegrandValue///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-value/index.html
$dokka.location:space.kscience.kmath.integration/IntegrandValue/IntegrandValue/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-value/-integrand-value.html
$dokka.location:space.kscience.kmath.integration/IntegrandValue/value/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrand-value/value.html
$dokka.location:space.kscience.kmath.integration/IntegrationRange///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integration-range/index.html
$dokka.location:space.kscience.kmath.integration/IntegrationRange/IntegrationRange/#kotlin.ranges.ClosedRange[kotlin.Double]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integration-range/-integration-range.html
$dokka.location:space.kscience.kmath.integration/IntegrationRange/range/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integration-range/range.html
$dokka.location:space.kscience.kmath.integration/Integrator///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrator/index.html
$dokka.location:space.kscience.kmath.integration/Integrator/integrate/#TypeParam(bounds=[space.kscience.kmath.integration.Integrand])/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-integrator/integrate.html
$dokka.location:space.kscience.kmath.integration/MultivariateIntegrand///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/index.html
$dokka.location:space.kscience.kmath.integration/MultivariateIntegrand/function/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/function.html
$dokka.location:space.kscience.kmath.integration/MultivariateIntegrand/getFeature/#kotlin.reflect.KClass[TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/get-feature.html
$dokka.location:space.kscience.kmath.integration/MultivariateIntegrand/plus/#TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/plus.html
$dokka.location:space.kscience.kmath.integration/MultivariateIntegrand/plus/#kotlin.Pair[kotlin.reflect.KClass[TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])],TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/plus.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrand///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand/index.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrand/function/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand/function.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrand/getFeature/#kotlin.reflect.KClass[TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand/get-feature.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrand/plus/#TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand/plus.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrand/plus/#kotlin.Pair[kotlin.reflect.KClass[TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])],TypeParam(bounds=[space.kscience.kmath.integration.IntegrandFeature])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand/plus.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrandRanges///PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/index.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrandRanges/UnivariateIntegrandRanges/#kotlin.Array[kotlin.Pair[kotlin.ranges.ClosedRange[kotlin.Double],kotlin.Int]]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/-univariate-integrand-ranges.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrandRanges/UnivariateIntegrandRanges/#kotlin.collections.List[kotlin.Pair[kotlin.ranges.ClosedRange[kotlin.Double],kotlin.Int]]/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/-univariate-integrand-ranges.html
$dokka.location:space.kscience.kmath.integration/UnivariateIntegrandRanges/ranges/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/ranges.html
$dokka.location:space.kscience.kmath.interpolation////PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/index.html
$dokka.location:space.kscience.kmath.interpolation//interpolatePolynomials/space.kscience.kmath.interpolation.PolynomialInterpolator[TypeParam(bounds=[kotlin.Comparable[^]])]#kotlin.collections.List[kotlin.Pair[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html
$dokka.location:space.kscience.kmath.interpolation//interpolatePolynomials/space.kscience.kmath.interpolation.PolynomialInterpolator[TypeParam(bounds=[kotlin.Comparable[^]])]#kotlin.collections.Map[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html
$dokka.location:space.kscience.kmath.interpolation//interpolatePolynomials/space.kscience.kmath.interpolation.PolynomialInterpolator[TypeParam(bounds=[kotlin.Comparable[^]])]#space.kscience.kmath.structures.Buffer[TypeParam(bounds=[kotlin.Comparable[^]])]#space.kscience.kmath.structures.Buffer[TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html
$dokka.location:space.kscience.kmath.interpolation/Interpolator///PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-interpolator/index.html
$dokka.location:space.kscience.kmath.interpolation/Interpolator/interpolate/#space.kscience.kmath.data.XYColumnarData[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any?])]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any?])])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-interpolator/interpolate.html
$dokka.location:space.kscience.kmath.interpolation/LinearInterpolator///PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/index.html
$dokka.location:space.kscience.kmath.interpolation/LinearInterpolator/LinearInterpolator/#space.kscience.kmath.operations.Field[TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/-linear-interpolator.html
$dokka.location:space.kscience.kmath.interpolation/LinearInterpolator/algebra/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/algebra.html
$dokka.location:space.kscience.kmath.interpolation/LinearInterpolator/interpolatePolynomials/#space.kscience.kmath.data.XYColumnarData[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/interpolate-polynomials.html
$dokka.location:space.kscience.kmath.interpolation/PolynomialInterpolator///PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/index.html
$dokka.location:space.kscience.kmath.interpolation/PolynomialInterpolator/algebra/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/algebra.html
$dokka.location:space.kscience.kmath.interpolation/PolynomialInterpolator/getDefaultValue/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/get-default-value.html
$dokka.location:space.kscience.kmath.interpolation/PolynomialInterpolator/interpolate/#space.kscience.kmath.data.XYColumnarData[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/interpolate.html
$dokka.location:space.kscience.kmath.interpolation/PolynomialInterpolator/interpolatePolynomials/#space.kscience.kmath.data.XYColumnarData[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/interpolate-polynomials.html
$dokka.location:space.kscience.kmath.interpolation/SplineInterpolator///PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/index.html
$dokka.location:space.kscience.kmath.interpolation/SplineInterpolator/SplineInterpolator/#space.kscience.kmath.operations.Field[TypeParam(bounds=[kotlin.Comparable[^]])]#kotlin.Function2[kotlin.Int,kotlin.Function1[kotlin.Int,TypeParam(bounds=[kotlin.Comparable[^]])],space.kscience.kmath.structures.MutableBuffer[TypeParam(bounds=[kotlin.Comparable[^]])]]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/-spline-interpolator.html
$dokka.location:space.kscience.kmath.interpolation/SplineInterpolator/algebra/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/algebra.html
$dokka.location:space.kscience.kmath.interpolation/SplineInterpolator/bufferFactory/#/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/buffer-factory.html
$dokka.location:space.kscience.kmath.interpolation/SplineInterpolator/interpolatePolynomials/#space.kscience.kmath.data.XYColumnarData[TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]]),TypeParam(bounds=[kotlin.Comparable[^]])]/PointingToDeclaration/kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/interpolate-polynomials.html
space.kscience.kmath.functions
space.kscience.kmath.integration
space.kscience.kmath.interpolation

