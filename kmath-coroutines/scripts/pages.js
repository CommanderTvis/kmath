var pages = [{"name":"abstract class BlockingIntChain : Chain<Int> ","description":"space.kscience.kmath.chains.BlockingIntChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/index.html","searchKeys":["BlockingIntChain","abstract class BlockingIntChain : Chain<Int> "]},{"name":"fun BlockingIntChain()","description":"space.kscience.kmath.chains.BlockingIntChain.BlockingIntChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/-blocking-int-chain.html","searchKeys":["BlockingIntChain","fun BlockingIntChain()"]},{"name":"open suspend override fun next(): Int","description":"space.kscience.kmath.chains.BlockingIntChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/next.html","searchKeys":["next","open suspend override fun next(): Int"]},{"name":"open suspend override fun next(): Double","description":"space.kscience.kmath.chains.BlockingRealChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-real-chain/next.html","searchKeys":["next","open suspend override fun next(): Double"]},{"name":"abstract suspend fun next(): R","description":"space.kscience.kmath.chains.Chain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/next.html","searchKeys":["next","abstract suspend fun next(): R"]},{"name":"open suspend override fun next(): T","description":"space.kscience.kmath.chains.ConstantChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/next.html","searchKeys":["next","open suspend override fun next(): T"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.MarkovChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/next.html","searchKeys":["next","open suspend override fun next(): R"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.SimpleChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/next.html","searchKeys":["next","open suspend override fun next(): R"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.StatefulChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/next.html","searchKeys":["next","open suspend override fun next(): R"]},{"name":"fun nextBlock(size: Int): IntArray","description":"space.kscience.kmath.chains.BlockingIntChain.nextBlock","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/next-block.html","searchKeys":["nextBlock","fun nextBlock(size: Int): IntArray"]},{"name":"fun nextBlock(size: Int): DoubleArray","description":"space.kscience.kmath.chains.BlockingRealChain.nextBlock","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-real-chain/next-block.html","searchKeys":["nextBlock","fun nextBlock(size: Int): DoubleArray"]},{"name":"abstract fun nextInt(): Int","description":"space.kscience.kmath.chains.BlockingIntChain.nextInt","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/next-int.html","searchKeys":["nextInt","abstract fun nextInt(): Int"]},{"name":"abstract class BlockingRealChain : Chain<Double> ","description":"space.kscience.kmath.chains.BlockingRealChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-real-chain/index.html","searchKeys":["BlockingRealChain","abstract class BlockingRealChain : Chain<Double> "]},{"name":"fun BlockingRealChain()","description":"space.kscience.kmath.chains.BlockingRealChain.BlockingRealChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-real-chain/-blocking-real-chain.html","searchKeys":["BlockingRealChain","fun BlockingRealChain()"]},{"name":"abstract fun nextDouble(): Double","description":"space.kscience.kmath.chains.BlockingRealChain.nextDouble","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-real-chain/next-double.html","searchKeys":["nextDouble","abstract fun nextDouble(): Double"]},{"name":"interface Chain<out R> : Flow<R> ","description":"space.kscience.kmath.chains.Chain","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/index.html","searchKeys":["Chain","interface Chain<out R> : Flow<R> "]},{"name":"object Companion","description":"space.kscience.kmath.chains.Chain.Companion","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"space.kscience.kmath.streaming.RingBuffer.Companion","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"open suspend override fun collect(collector: FlowCollector<R>)","description":"space.kscience.kmath.chains.Chain.collect","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<R>)"]},{"name":"fun <T, R> Chain<T>.collect(mapper: suspend (Chain<T>) -> R): Chain<R>","description":"space.kscience.kmath.chains.collect","location":"kmath-coroutines/space.kscience.kmath.chains/collect.html","searchKeys":["collect","fun <T, R> Chain<T>.collect(mapper: suspend (Chain<T>) -> R): Chain<R>"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"space.kscience.kmath.coroutines.AsyncFlow.collect","location":"kmath-coroutines/space.kscience.kmath.coroutines/-async-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)"]},{"name":"abstract fun fork(): Chain<R>","description":"space.kscience.kmath.chains.Chain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/fork.html","searchKeys":["fork","abstract fun fork(): Chain<R>"]},{"name":"open override fun fork(): Chain<T>","description":"space.kscience.kmath.chains.ConstantChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/fork.html","searchKeys":["fork","open override fun fork(): Chain<T>"]},{"name":"open override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.MarkovChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/fork.html","searchKeys":["fork","open override fun fork(): Chain<R>"]},{"name":"open override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.SimpleChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/fork.html","searchKeys":["fork","open override fun fork(): Chain<R>"]},{"name":"open override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.StatefulChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/fork.html","searchKeys":["fork","open override fun fork(): Chain<R>"]},{"name":"class ConstantChain<out T>(value: T) : Chain<T> ","description":"space.kscience.kmath.chains.ConstantChain","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/index.html","searchKeys":["ConstantChain","class ConstantChain<out T>(value: T) : Chain<T> "]},{"name":"fun <out T> ConstantChain(value: T)","description":"space.kscience.kmath.chains.ConstantChain.ConstantChain","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/-constant-chain.html","searchKeys":["ConstantChain","fun <out T> ConstantChain(value: T)"]},{"name":"val value: T","description":"space.kscience.kmath.chains.ConstantChain.value","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/value.html","searchKeys":["value","val value: T"]},{"name":"class MarkovChain<out R : Any>(seed: suspend () -> R, gen: suspend (R) -> R) : Chain<R> ","description":"space.kscience.kmath.chains.MarkovChain","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/index.html","searchKeys":["MarkovChain","class MarkovChain<out R : Any>(seed: suspend () -> R, gen: suspend (R) -> R) : Chain<R> "]},{"name":"fun <out R : Any> MarkovChain(seed: suspend () -> R, gen: suspend (R) -> R)","description":"space.kscience.kmath.chains.MarkovChain.MarkovChain","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/-markov-chain.html","searchKeys":["MarkovChain","fun <out R : Any> MarkovChain(seed: suspend () -> R, gen: suspend (R) -> R)"]},{"name":"val gen: suspend (R) -> R","description":"space.kscience.kmath.chains.MarkovChain.gen","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/gen.html","searchKeys":["gen","val gen: suspend (R) -> R"]},{"name":"val gen: suspend S.(R) -> R","description":"space.kscience.kmath.chains.StatefulChain.gen","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/gen.html","searchKeys":["gen","val gen: suspend S.(R) -> R"]},{"name":"class SimpleChain<out R>(gen: suspend () -> R) : Chain<R> ","description":"space.kscience.kmath.chains.SimpleChain","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/index.html","searchKeys":["SimpleChain","class SimpleChain<out R>(gen: suspend () -> R) : Chain<R> "]},{"name":"fun <out R> SimpleChain(gen: suspend () -> R)","description":"space.kscience.kmath.chains.SimpleChain.SimpleChain","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/-simple-chain.html","searchKeys":["SimpleChain","fun <out R> SimpleChain(gen: suspend () -> R)"]},{"name":"class StatefulChain<S, out R>(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R) : Chain<R> ","description":"space.kscience.kmath.chains.StatefulChain","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/index.html","searchKeys":["StatefulChain","class StatefulChain<S, out R>(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R) : Chain<R> "]},{"name":"fun <S, out R> StatefulChain(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R)","description":"space.kscience.kmath.chains.StatefulChain.StatefulChain","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/-stateful-chain.html","searchKeys":["StatefulChain","fun <S, out R> StatefulChain(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R)"]},{"name":"fun <R> Chain<R>.asSequence(): Sequence<R>","description":"space.kscience.kmath.chains.asSequence","location":"kmath-coroutines/space.kscience.kmath.chains/as-sequence.html","searchKeys":["asSequence","fun <R> Chain<R>.asSequence(): Sequence<R>"]},{"name":"fun <T, S, R> Chain<T>.collectWithState(state: S, stateFork: (S) -> S, mapper: suspend S.(Chain<T>) -> R): Chain<R>","description":"space.kscience.kmath.chains.collectWithState","location":"kmath-coroutines/space.kscience.kmath.chains/collect-with-state.html","searchKeys":["collectWithState","fun <T, S, R> Chain<T>.collectWithState(state: S, stateFork: (S) -> S, mapper: suspend S.(Chain<T>) -> R): Chain<R>"]},{"name":"fun <T> Flow<T>.cumulativeSum(space: SpaceOperations<T>): Flow<T>","description":"space.kscience.kmath.chains.cumulativeSum","location":"kmath-coroutines/space.kscience.kmath.chains/cumulative-sum.html","searchKeys":["cumulativeSum","fun <T> Flow<T>.cumulativeSum(space: SpaceOperations<T>): Flow<T>"]},{"name":"fun <T> Chain<T>.filter(block: (T) -> Boolean): Chain<T>","description":"space.kscience.kmath.chains.filter","location":"kmath-coroutines/space.kscience.kmath.chains/filter.html","searchKeys":["filter","fun <T> Chain<T>.filter(block: (T) -> Boolean): Chain<T>"]},{"name":"operator fun <R> Chain<R>.iterator(): Iterator<R>","description":"space.kscience.kmath.chains.iterator","location":"kmath-coroutines/space.kscience.kmath.chains/iterator.html","searchKeys":["iterator","operator fun <R> Chain<R>.iterator(): Iterator<R>"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.streaming.RingBuffer.iterator","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>"]},{"name":"fun <T, R> Chain<T>.map(func: suspend (T) -> R): Chain<R>","description":"space.kscience.kmath.chains.map","location":"kmath-coroutines/space.kscience.kmath.chains/map.html","searchKeys":["map","fun <T, R> Chain<T>.map(func: suspend (T) -> R): Chain<R>"]},{"name":"fun <T, R> AsyncFlow<T>.map(action: (T) -> R): AsyncFlow<R>","description":"space.kscience.kmath.coroutines.map","location":"kmath-coroutines/space.kscience.kmath.coroutines/map.html","searchKeys":["map","fun <T, R> AsyncFlow<T>.map(action: (T) -> R): AsyncFlow<R>"]},{"name":"fun <T> Flow<T>.mean(space: Space<T>): Flow<T>","description":"space.kscience.kmath.chains.mean","location":"kmath-coroutines/space.kscience.kmath.chains/mean.html","searchKeys":["mean","fun <T> Flow<T>.mean(space: Space<T>): Flow<T>"]},{"name":"fun <T, U, R> Chain<T>.zip(other: Chain<U>, block: suspend (T, U) -> R): Chain<R>","description":"space.kscience.kmath.chains.zip","location":"kmath-coroutines/space.kscience.kmath.chains/zip.html","searchKeys":["zip","fun <T, U, R> Chain<T>.zip(other: Chain<U>, block: suspend (T, U) -> R): Chain<R>"]},{"name":"class AsyncFlow<T> : Flow<T> ","description":"space.kscience.kmath.coroutines.AsyncFlow","location":"kmath-coroutines/space.kscience.kmath.coroutines/-async-flow/index.html","searchKeys":["AsyncFlow","class AsyncFlow<T> : Flow<T> "]},{"name":"val Dispatchers.Math: CoroutineDispatcher","description":"space.kscience.kmath.coroutines.Math","location":"kmath-coroutines/space.kscience.kmath.coroutines/-math.html","searchKeys":["Math","val Dispatchers.Math: CoroutineDispatcher"]},{"name":"fun <T, R> Flow<T>.async(dispatcher: CoroutineDispatcher = Dispatchers.Default, block: suspend CoroutineScope.(T) -> R): AsyncFlow<R>","description":"space.kscience.kmath.coroutines.async","location":"kmath-coroutines/space.kscience.kmath.coroutines/async.html","searchKeys":["async","fun <T, R> Flow<T>.async(dispatcher: CoroutineDispatcher = Dispatchers.Default, block: suspend CoroutineScope.(T) -> R): AsyncFlow<R>"]},{"name":"inline fun <T, R> Flow<T>.mapParallel(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline transform: suspend (T) -> R): Flow<R>","description":"space.kscience.kmath.coroutines.mapParallel","location":"kmath-coroutines/space.kscience.kmath.coroutines/map-parallel.html","searchKeys":["mapParallel","inline fun <T, R> Flow<T>.mapParallel(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline transform: suspend (T) -> R): Flow<R>"]},{"name":"class RingBuffer<T>(buffer: MutableBuffer<T?>, startIndex: Int, size: Int) : Buffer<T> ","description":"space.kscience.kmath.streaming.RingBuffer","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/index.html","searchKeys":["RingBuffer","class RingBuffer<T>(buffer: MutableBuffer<T?>, startIndex: Int, size: Int) : Buffer<T> "]},{"name":"fun <T> RingBuffer(buffer: MutableBuffer<T?>, startIndex: Int = 0, size: Int = 0)","description":"space.kscience.kmath.streaming.RingBuffer.RingBuffer","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-ring-buffer.html","searchKeys":["RingBuffer","fun <T> RingBuffer(buffer: MutableBuffer<T?>, startIndex: Int = 0, size: Int = 0)"]},{"name":"fun <T> boxing(size: Int): RingBuffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.Companion.boxing","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/boxing.html","searchKeys":["boxing","fun <T> boxing(size: Int): RingBuffer<T>"]},{"name":"inline fun <T : Any> build(size: Int, empty: T): RingBuffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.Companion.build","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/build.html","searchKeys":["build","inline fun <T : Any> build(size: Int, empty: T): RingBuffer<T>"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.streaming.RingBuffer.get","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.structures.LazyNDStructure.get","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T"]},{"name":"fun isFull(): Boolean","description":"space.kscience.kmath.streaming.RingBuffer.isFull","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/is-full.html","searchKeys":["isFull","fun isFull(): Boolean"]},{"name":"suspend fun push(element: T)","description":"space.kscience.kmath.streaming.RingBuffer.push","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/push.html","searchKeys":["push","suspend fun push(element: T)"]},{"name":"open override var size: Int","description":"space.kscience.kmath.streaming.RingBuffer.size","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/size.html","searchKeys":["size","open override var size: Int"]},{"name":"suspend fun snapshot(): Buffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.snapshot","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/snapshot.html","searchKeys":["snapshot","suspend fun snapshot(): Buffer<T>"]},{"name":"fun <T> Buffer<T>.asFlow(): Flow<T>","description":"space.kscience.kmath.streaming.asFlow","location":"kmath-coroutines/space.kscience.kmath.streaming/as-flow.html","searchKeys":["asFlow","fun <T> Buffer<T>.asFlow(): Flow<T>"]},{"name":"fun <T> Flow<Buffer<T>>.spread(): Flow<T>","description":"space.kscience.kmath.streaming.spread","location":"kmath-coroutines/space.kscience.kmath.streaming/spread.html","searchKeys":["spread","fun <T> Flow<Buffer<T>>.spread(): Flow<T>"]},{"name":"fun <T> Flow<T>.windowed(window: Int): Flow<Buffer<T>>","description":"space.kscience.kmath.streaming.windowed","location":"kmath-coroutines/space.kscience.kmath.streaming/windowed.html","searchKeys":["windowed","fun <T> Flow<T>.windowed(window: Int): Flow<Buffer<T>>"]},{"name":"class LazyNDStructure<T>(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T) : NDStructure<T> ","description":"space.kscience.kmath.structures.LazyNDStructure","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/index.html","searchKeys":["LazyNDStructure","class LazyNDStructure<T>(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T) : NDStructure<T> "]},{"name":"fun <T> LazyNDStructure(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T)","description":"space.kscience.kmath.structures.LazyNDStructure.LazyNDStructure","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/-lazy-n-d-structure.html","searchKeys":["LazyNDStructure","fun <T> LazyNDStructure(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T)"]},{"name":"suspend fun await(index: IntArray): T","description":"space.kscience.kmath.structures.LazyNDStructure.await","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/await.html","searchKeys":["await","suspend fun await(index: IntArray): T"]},{"name":"suspend fun <T> NDStructure<T>.await(index: IntArray): T","description":"space.kscience.kmath.structures.await","location":"kmath-coroutines/space.kscience.kmath.structures/await.html","searchKeys":["await","suspend fun <T> NDStructure<T>.await(index: IntArray): T"]},{"name":"fun deferred(index: IntArray): Deferred<T>","description":"space.kscience.kmath.structures.LazyNDStructure.deferred","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/deferred.html","searchKeys":["deferred","fun deferred(index: IntArray): Deferred<T>"]},{"name":"fun <T> NDStructure<T>.deferred(index: IntArray): Deferred<T>","description":"space.kscience.kmath.structures.deferred","location":"kmath-coroutines/space.kscience.kmath.structures/deferred.html","searchKeys":["deferred","fun <T> NDStructure<T>.deferred(index: IntArray): Deferred<T>"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.structures.LazyNDStructure.elements","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.kmath.structures.LazyNDStructure.equals","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean"]},{"name":"val function: suspend (IntArray) -> T","description":"space.kscience.kmath.structures.LazyNDStructure.function","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/function.html","searchKeys":["function","val function: suspend (IntArray) -> T"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.kmath.structures.LazyNDStructure.hashCode","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int"]},{"name":"val scope: CoroutineScope","description":"space.kscience.kmath.structures.LazyNDStructure.scope","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/scope.html","searchKeys":["scope","val scope: CoroutineScope"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.structures.LazyNDStructure.shape","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-n-d-structure/shape.html","searchKeys":["shape","open override val shape: IntArray"]},{"name":"inline fun <T, R> NDStructure<T>.mapAsync(scope: CoroutineScope, crossinline function: suspend (T) -> R): LazyNDStructure<R>","description":"space.kscience.kmath.structures.mapAsync","location":"kmath-coroutines/space.kscience.kmath.structures/map-async.html","searchKeys":["mapAsync","inline fun <T, R> NDStructure<T>.mapAsync(scope: CoroutineScope, crossinline function: suspend (T) -> R): LazyNDStructure<R>"]},{"name":"inline fun <T, R> NDStructure<T>.mapAsyncIndexed(scope: CoroutineScope, crossinline function: suspend (T, index: IntArray) -> R): LazyNDStructure<R>","description":"space.kscience.kmath.structures.mapAsyncIndexed","location":"kmath-coroutines/space.kscience.kmath.structures/map-async-indexed.html","searchKeys":["mapAsyncIndexed","inline fun <T, R> NDStructure<T>.mapAsyncIndexed(scope: CoroutineScope, crossinline function: suspend (T, index: IntArray) -> R): LazyNDStructure<R>"]}]
