[{"name":"abstract class EjmlLinearSpace<T : Any, out A : Ring<T>, out M : Matrix> : LinearSpace<T, A> ","description":"space.kscience.kmath.ejml.EjmlLinearSpace","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/index.html","searchKeys":["EjmlLinearSpace","abstract class EjmlLinearSpace<T : Any, out A : Ring<T>, out M : Matrix> : LinearSpace<T, A> ","space.kscience.kmath.ejml.EjmlLinearSpace"]},{"name":"abstract class EjmlMatrix<out T, out M : Matrix>(origin: M) : Structure2D<T> ","description":"space.kscience.kmath.ejml.EjmlMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-matrix/index.html","searchKeys":["EjmlMatrix","abstract class EjmlMatrix<out T, out M : Matrix>(origin: M) : Structure2D<T> ","space.kscience.kmath.ejml.EjmlMatrix"]},{"name":"abstract class EjmlVector<out T, out M : Matrix>(origin: M) : Buffer<T> ","description":"space.kscience.kmath.ejml.EjmlVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/index.html","searchKeys":["EjmlVector","abstract class EjmlVector<out T, out M : Matrix>(origin: M) : Buffer<T> ","space.kscience.kmath.ejml.EjmlVector"]},{"name":"abstract fun Matrix<T>.toEjml(): EjmlMatrix<T, M>","description":"space.kscience.kmath.ejml.EjmlLinearSpace.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/to-ejml.html","searchKeys":["toEjml","abstract fun Matrix<T>.toEjml(): EjmlMatrix<T, M>","space.kscience.kmath.ejml.EjmlLinearSpace.toEjml"]},{"name":"abstract fun Point<T>.toEjml(): EjmlVector<T, M>","description":"space.kscience.kmath.ejml.EjmlLinearSpace.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/to-ejml.html","searchKeys":["toEjml","abstract fun Point<T>.toEjml(): EjmlVector<T, M>","space.kscience.kmath.ejml.EjmlLinearSpace.toEjml"]},{"name":"abstract override fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): EjmlMatrix<T, M>","description":"space.kscience.kmath.ejml.EjmlLinearSpace.buildMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/build-matrix.html","searchKeys":["buildMatrix","abstract override fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): EjmlMatrix<T, M>","space.kscience.kmath.ejml.EjmlLinearSpace.buildMatrix"]},{"name":"abstract override fun buildVector(size: Int, initializer: A.(Int) -> T): EjmlVector<T, M>","description":"space.kscience.kmath.ejml.EjmlLinearSpace.buildVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/build-vector.html","searchKeys":["buildVector","abstract override fun buildVector(size: Int, initializer: A.(Int) -> T): EjmlVector<T, M>","space.kscience.kmath.ejml.EjmlLinearSpace.buildVector"]},{"name":"class EjmlDoubleMatrix<out M : DMatrix>(origin: M) : EjmlMatrix<Double, M> ","description":"space.kscience.kmath.ejml.EjmlDoubleMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-matrix/index.html","searchKeys":["EjmlDoubleMatrix","class EjmlDoubleMatrix<out M : DMatrix>(origin: M) : EjmlMatrix<Double, M> ","space.kscience.kmath.ejml.EjmlDoubleMatrix"]},{"name":"class EjmlDoubleVector<out M : DMatrix>(origin: M) : EjmlVector<Double, M> ","description":"space.kscience.kmath.ejml.EjmlDoubleVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-vector/index.html","searchKeys":["EjmlDoubleVector","class EjmlDoubleVector<out M : DMatrix>(origin: M) : EjmlVector<Double, M> ","space.kscience.kmath.ejml.EjmlDoubleVector"]},{"name":"class EjmlFloatMatrix<out M : FMatrix>(origin: M) : EjmlMatrix<Float, M> ","description":"space.kscience.kmath.ejml.EjmlFloatMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-matrix/index.html","searchKeys":["EjmlFloatMatrix","class EjmlFloatMatrix<out M : FMatrix>(origin: M) : EjmlMatrix<Float, M> ","space.kscience.kmath.ejml.EjmlFloatMatrix"]},{"name":"class EjmlFloatVector<out M : FMatrix>(origin: M) : EjmlVector<Float, M> ","description":"space.kscience.kmath.ejml.EjmlFloatVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-vector/index.html","searchKeys":["EjmlFloatVector","class EjmlFloatVector<out M : FMatrix>(origin: M) : EjmlVector<Float, M> ","space.kscience.kmath.ejml.EjmlFloatVector"]},{"name":"fun <out M : DMatrix> EjmlDoubleMatrix(origin: M)","description":"space.kscience.kmath.ejml.EjmlDoubleMatrix.EjmlDoubleMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-matrix/-ejml-double-matrix.html","searchKeys":["EjmlDoubleMatrix","fun <out M : DMatrix> EjmlDoubleMatrix(origin: M)","space.kscience.kmath.ejml.EjmlDoubleMatrix.EjmlDoubleMatrix"]},{"name":"fun <out M : DMatrix> EjmlDoubleVector(origin: M)","description":"space.kscience.kmath.ejml.EjmlDoubleVector.EjmlDoubleVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-vector/-ejml-double-vector.html","searchKeys":["EjmlDoubleVector","fun <out M : DMatrix> EjmlDoubleVector(origin: M)","space.kscience.kmath.ejml.EjmlDoubleVector.EjmlDoubleVector"]},{"name":"fun <out M : FMatrix> EjmlFloatMatrix(origin: M)","description":"space.kscience.kmath.ejml.EjmlFloatMatrix.EjmlFloatMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-matrix/-ejml-float-matrix.html","searchKeys":["EjmlFloatMatrix","fun <out M : FMatrix> EjmlFloatMatrix(origin: M)","space.kscience.kmath.ejml.EjmlFloatMatrix.EjmlFloatMatrix"]},{"name":"fun <out M : FMatrix> EjmlFloatVector(origin: M)","description":"space.kscience.kmath.ejml.EjmlFloatVector.EjmlFloatVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-vector/-ejml-float-vector.html","searchKeys":["EjmlFloatVector","fun <out M : FMatrix> EjmlFloatVector(origin: M)","space.kscience.kmath.ejml.EjmlFloatVector.EjmlFloatVector"]},{"name":"fun <out M : Matrix> EjmlMatrix(origin: M)","description":"space.kscience.kmath.ejml.EjmlMatrix.EjmlMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-matrix/-ejml-matrix.html","searchKeys":["EjmlMatrix","fun <out M : Matrix> EjmlMatrix(origin: M)","space.kscience.kmath.ejml.EjmlMatrix.EjmlMatrix"]},{"name":"fun <out M : Matrix> EjmlVector(origin: M)","description":"space.kscience.kmath.ejml.EjmlVector.EjmlVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/-ejml-vector.html","searchKeys":["EjmlVector","fun <out M : Matrix> EjmlVector(origin: M)","space.kscience.kmath.ejml.EjmlVector.EjmlVector"]},{"name":"fun EjmlLinearSpace()","description":"space.kscience.kmath.ejml.EjmlLinearSpace.EjmlLinearSpace","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/-ejml-linear-space.html","searchKeys":["EjmlLinearSpace","fun EjmlLinearSpace()","space.kscience.kmath.ejml.EjmlLinearSpace.EjmlLinearSpace"]},{"name":"fun EjmlMatrix<T, *>.inverse(): Structure2D<Double>","description":"space.kscience.kmath.ejml.EjmlLinearSpace.inverse","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space/inverse.html","searchKeys":["inverse","fun EjmlMatrix<T, *>.inverse(): Structure2D<Double>","space.kscience.kmath.ejml.EjmlLinearSpace.inverse"]},{"name":"fun solve(a: Matrix<Double>, b: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/solve.html","searchKeys":["solve","fun solve(a: Matrix<Double>, b: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.solve"]},{"name":"fun solve(a: Matrix<Double>, b: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/solve.html","searchKeys":["solve","fun solve(a: Matrix<Double>, b: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.solve"]},{"name":"fun solve(a: Matrix<Double>, b: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/solve.html","searchKeys":["solve","fun solve(a: Matrix<Double>, b: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.solve"]},{"name":"fun solve(a: Matrix<Double>, b: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/solve.html","searchKeys":["solve","fun solve(a: Matrix<Double>, b: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.solve"]},{"name":"fun solve(a: Matrix<Float>, b: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/solve.html","searchKeys":["solve","fun solve(a: Matrix<Float>, b: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.solve"]},{"name":"fun solve(a: Matrix<Float>, b: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/solve.html","searchKeys":["solve","fun solve(a: Matrix<Float>, b: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.solve"]},{"name":"fun solve(a: Matrix<Float>, b: Point<Float>): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/solve.html","searchKeys":["solve","fun solve(a: Matrix<Float>, b: Point<Float>): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.solve"]},{"name":"fun solve(a: Matrix<Float>, b: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.solve","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/solve.html","searchKeys":["solve","fun solve(a: Matrix<Float>, b: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.solve"]},{"name":"object EjmlLinearSpaceDDRM : EjmlLinearSpace<Double, DoubleField, DMatrixRMaj> ","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/index.html","searchKeys":["EjmlLinearSpaceDDRM","object EjmlLinearSpaceDDRM : EjmlLinearSpace<Double, DoubleField, DMatrixRMaj> ","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM"]},{"name":"object EjmlLinearSpaceDSCC : EjmlLinearSpace<Double, DoubleField, DMatrixSparseCSC> ","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/index.html","searchKeys":["EjmlLinearSpaceDSCC","object EjmlLinearSpaceDSCC : EjmlLinearSpace<Double, DoubleField, DMatrixSparseCSC> ","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC"]},{"name":"object EjmlLinearSpaceFDRM : EjmlLinearSpace<Float, FloatField, FMatrixRMaj> ","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/index.html","searchKeys":["EjmlLinearSpaceFDRM","object EjmlLinearSpaceFDRM : EjmlLinearSpace<Float, FloatField, FMatrixRMaj> ","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM"]},{"name":"object EjmlLinearSpaceFSCC : EjmlLinearSpace<Float, FloatField, FMatrixSparseCSC> ","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/index.html","searchKeys":["EjmlLinearSpaceFSCC","object EjmlLinearSpaceFSCC : EjmlLinearSpace<Float, FloatField, FMatrixSparseCSC> ","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC"]},{"name":"open infix override fun Matrix<Double>.dot(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.dot"]},{"name":"open infix override fun Matrix<Double>.dot(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.dot"]},{"name":"open infix override fun Matrix<Double>.dot(vector: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(vector: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.dot"]},{"name":"open infix override fun Matrix<Double>.dot(vector: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(vector: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.dot"]},{"name":"open infix override fun Matrix<Float>.dot(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/dot.html","searchKeys":["dot","open infix override fun Matrix<Float>.dot(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.dot"]},{"name":"open infix override fun Matrix<Float>.dot(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/dot.html","searchKeys":["dot","open infix override fun Matrix<Float>.dot(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.dot"]},{"name":"open infix override fun Matrix<Float>.dot(vector: Point<Float>): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/dot.html","searchKeys":["dot","open infix override fun Matrix<Float>.dot(vector: Point<Float>): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.dot"]},{"name":"open infix override fun Matrix<Float>.dot(vector: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.dot","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/dot.html","searchKeys":["dot","open infix override fun Matrix<Float>.dot(vector: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.dot"]},{"name":"open operator override fun Double.times(m: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/times.html","searchKeys":["times","open operator override fun Double.times(m: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times"]},{"name":"open operator override fun Double.times(m: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/times.html","searchKeys":["times","open operator override fun Double.times(m: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times"]},{"name":"open operator override fun Double.times(v: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/times.html","searchKeys":["times","open operator override fun Double.times(v: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times"]},{"name":"open operator override fun Double.times(v: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/times.html","searchKeys":["times","open operator override fun Double.times(v: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times"]},{"name":"open operator override fun Float.times(m: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/times.html","searchKeys":["times","open operator override fun Float.times(m: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times"]},{"name":"open operator override fun Float.times(m: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/times.html","searchKeys":["times","open operator override fun Float.times(m: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times"]},{"name":"open operator override fun Float.times(v: Point<Float>): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/times.html","searchKeys":["times","open operator override fun Float.times(v: Point<Float>): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times"]},{"name":"open operator override fun Float.times(v: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/times.html","searchKeys":["times","open operator override fun Float.times(v: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times"]},{"name":"open operator override fun Matrix<Double>.minus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/minus.html","searchKeys":["minus","open operator override fun Matrix<Double>.minus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.minus"]},{"name":"open operator override fun Matrix<Double>.minus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/minus.html","searchKeys":["minus","open operator override fun Matrix<Double>.minus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.minus"]},{"name":"open operator override fun Matrix<Double>.plus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/plus.html","searchKeys":["plus","open operator override fun Matrix<Double>.plus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.plus"]},{"name":"open operator override fun Matrix<Double>.plus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/plus.html","searchKeys":["plus","open operator override fun Matrix<Double>.plus(other: Matrix<Double>): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.plus"]},{"name":"open operator override fun Matrix<Double>.times(value: Double): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/times.html","searchKeys":["times","open operator override fun Matrix<Double>.times(value: Double): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times"]},{"name":"open operator override fun Matrix<Double>.times(value: Double): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/times.html","searchKeys":["times","open operator override fun Matrix<Double>.times(value: Double): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times"]},{"name":"open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.unaryMinus"]},{"name":"open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.unaryMinus"]},{"name":"open operator override fun Matrix<Float>.minus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/minus.html","searchKeys":["minus","open operator override fun Matrix<Float>.minus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.minus"]},{"name":"open operator override fun Matrix<Float>.minus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/minus.html","searchKeys":["minus","open operator override fun Matrix<Float>.minus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.minus"]},{"name":"open operator override fun Matrix<Float>.plus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/plus.html","searchKeys":["plus","open operator override fun Matrix<Float>.plus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.plus"]},{"name":"open operator override fun Matrix<Float>.plus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/plus.html","searchKeys":["plus","open operator override fun Matrix<Float>.plus(other: Matrix<Float>): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.plus"]},{"name":"open operator override fun Matrix<Float>.times(value: Float): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/times.html","searchKeys":["times","open operator override fun Matrix<Float>.times(value: Float): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times"]},{"name":"open operator override fun Matrix<Float>.times(value: Float): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/times.html","searchKeys":["times","open operator override fun Matrix<Float>.times(value: Float): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times"]},{"name":"open operator override fun Matrix<Float>.unaryMinus(): Matrix<Float>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<Float>.unaryMinus(): Matrix<Float>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.unaryMinus"]},{"name":"open operator override fun Matrix<Float>.unaryMinus(): Matrix<Float>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<Float>.unaryMinus(): Matrix<Float>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.unaryMinus"]},{"name":"open operator override fun Point<Double>.minus(other: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/minus.html","searchKeys":["minus","open operator override fun Point<Double>.minus(other: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.minus"]},{"name":"open operator override fun Point<Double>.minus(other: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/minus.html","searchKeys":["minus","open operator override fun Point<Double>.minus(other: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.minus"]},{"name":"open operator override fun Point<Double>.plus(other: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/plus.html","searchKeys":["plus","open operator override fun Point<Double>.plus(other: Point<Double>): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.plus"]},{"name":"open operator override fun Point<Double>.plus(other: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/plus.html","searchKeys":["plus","open operator override fun Point<Double>.plus(other: Point<Double>): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.plus"]},{"name":"open operator override fun Point<Double>.times(value: Double): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/times.html","searchKeys":["times","open operator override fun Point<Double>.times(value: Double): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.times"]},{"name":"open operator override fun Point<Double>.times(value: Double): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/times.html","searchKeys":["times","open operator override fun Point<Double>.times(value: Double): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.times"]},{"name":"open operator override fun Point<Double>.unaryMinus(): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Point<Double>.unaryMinus(): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.unaryMinus"]},{"name":"open operator override fun Point<Double>.unaryMinus(): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Point<Double>.unaryMinus(): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.unaryMinus"]},{"name":"open operator override fun Point<Float>.minus(other: Point<Float>): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/minus.html","searchKeys":["minus","open operator override fun Point<Float>.minus(other: Point<Float>): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.minus"]},{"name":"open operator override fun Point<Float>.minus(other: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.minus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/minus.html","searchKeys":["minus","open operator override fun Point<Float>.minus(other: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.minus"]},{"name":"open operator override fun Point<Float>.plus(other: Point<Float>): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/plus.html","searchKeys":["plus","open operator override fun Point<Float>.plus(other: Point<Float>): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.plus"]},{"name":"open operator override fun Point<Float>.plus(other: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.plus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/plus.html","searchKeys":["plus","open operator override fun Point<Float>.plus(other: Point<Float>): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.plus"]},{"name":"open operator override fun Point<Float>.times(value: Float): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/times.html","searchKeys":["times","open operator override fun Point<Float>.times(value: Float): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.times"]},{"name":"open operator override fun Point<Float>.times(value: Float): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/times.html","searchKeys":["times","open operator override fun Point<Float>.times(value: Float): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.times"]},{"name":"open operator override fun Point<Float>.unaryMinus(): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Point<Float>.unaryMinus(): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.unaryMinus"]},{"name":"open operator override fun Point<Float>.unaryMinus(): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.unaryMinus","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Point<Float>.unaryMinus(): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.unaryMinus"]},{"name":"open operator override fun get(i: Int, j: Int): Double","description":"space.kscience.kmath.ejml.EjmlDoubleMatrix.get","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-matrix/get.html","searchKeys":["get","open operator override fun get(i: Int, j: Int): Double","space.kscience.kmath.ejml.EjmlDoubleMatrix.get"]},{"name":"open operator override fun get(i: Int, j: Int): Float","description":"space.kscience.kmath.ejml.EjmlFloatMatrix.get","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-matrix/get.html","searchKeys":["get","open operator override fun get(i: Int, j: Int): Float","space.kscience.kmath.ejml.EjmlFloatMatrix.get"]},{"name":"open operator override fun get(index: Int): Double","description":"space.kscience.kmath.ejml.EjmlDoubleVector.get","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-vector/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","space.kscience.kmath.ejml.EjmlDoubleVector.get"]},{"name":"open operator override fun get(index: Int): Float","description":"space.kscience.kmath.ejml.EjmlFloatVector.get","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-vector/get.html","searchKeys":["get","open operator override fun get(index: Int): Float","space.kscience.kmath.ejml.EjmlFloatVector.get"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.ejml.EjmlVector.iterator","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.ejml.EjmlVector.iterator"]},{"name":"open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.computeFeature","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/compute-feature.html","searchKeys":["computeFeature","open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.computeFeature"]},{"name":"open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.computeFeature","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/compute-feature.html","searchKeys":["computeFeature","open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.computeFeature"]},{"name":"open override fun <F : StructureFeature> computeFeature(structure: Matrix<Float>, type: KClass<out F>): F?","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.computeFeature","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/compute-feature.html","searchKeys":["computeFeature","open override fun <F : StructureFeature> computeFeature(structure: Matrix<Float>, type: KClass<out F>): F?","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.computeFeature"]},{"name":"open override fun <F : StructureFeature> computeFeature(structure: Matrix<Float>, type: KClass<out F>): F?","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.computeFeature","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/compute-feature.html","searchKeys":["computeFeature","open override fun <F : StructureFeature> computeFeature(structure: Matrix<Float>, type: KClass<out F>): F?","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.computeFeature"]},{"name":"open override fun Matrix<Double>.toEjml(): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/to-ejml.html","searchKeys":["toEjml","open override fun Matrix<Double>.toEjml(): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.toEjml"]},{"name":"open override fun Matrix<Double>.toEjml(): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/to-ejml.html","searchKeys":["toEjml","open override fun Matrix<Double>.toEjml(): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.toEjml"]},{"name":"open override fun Matrix<Float>.toEjml(): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/to-ejml.html","searchKeys":["toEjml","open override fun Matrix<Float>.toEjml(): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.toEjml"]},{"name":"open override fun Matrix<Float>.toEjml(): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/to-ejml.html","searchKeys":["toEjml","open override fun Matrix<Float>.toEjml(): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.toEjml"]},{"name":"open override fun Point<Double>.toEjml(): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/to-ejml.html","searchKeys":["toEjml","open override fun Point<Double>.toEjml(): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.toEjml"]},{"name":"open override fun Point<Double>.toEjml(): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/to-ejml.html","searchKeys":["toEjml","open override fun Point<Double>.toEjml(): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.toEjml"]},{"name":"open override fun Point<Float>.toEjml(): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/to-ejml.html","searchKeys":["toEjml","open override fun Point<Float>.toEjml(): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.toEjml"]},{"name":"open override fun Point<Float>.toEjml(): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.toEjml","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/to-ejml.html","searchKeys":["toEjml","open override fun Point<Float>.toEjml(): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.toEjml"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): EjmlDoubleMatrix<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.buildMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): EjmlDoubleMatrix<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.buildMatrix"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): EjmlDoubleMatrix<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.buildMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): EjmlDoubleMatrix<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.buildMatrix"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: FloatField.(i: Int, j: Int) -> Float): EjmlFloatMatrix<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.buildMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: FloatField.(i: Int, j: Int) -> Float): EjmlFloatMatrix<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.buildMatrix"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: FloatField.(i: Int, j: Int) -> Float): EjmlFloatMatrix<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.buildMatrix","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: FloatField.(i: Int, j: Int) -> Float): EjmlFloatMatrix<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.buildMatrix"]},{"name":"open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): EjmlDoubleVector<DMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.buildVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): EjmlDoubleVector<DMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.buildVector"]},{"name":"open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): EjmlDoubleVector<DMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.buildVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): EjmlDoubleVector<DMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.buildVector"]},{"name":"open override fun buildVector(size: Int, initializer: FloatField.(Int) -> Float): EjmlFloatVector<FMatrixRMaj>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.buildVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: FloatField.(Int) -> Float): EjmlFloatVector<FMatrixRMaj>","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.buildVector"]},{"name":"open override fun buildVector(size: Int, initializer: FloatField.(Int) -> Float): EjmlFloatVector<FMatrixSparseCSC>","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.buildVector","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: FloatField.(Int) -> Float): EjmlFloatVector<FMatrixSparseCSC>","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.buildVector"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.ejml.EjmlVector.toString","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.ejml.EjmlVector.toString"]},{"name":"open override val colNum: Int","description":"space.kscience.kmath.ejml.EjmlMatrix.colNum","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-matrix/col-num.html","searchKeys":["colNum","open override val colNum: Int","space.kscience.kmath.ejml.EjmlMatrix.colNum"]},{"name":"open override val elementAlgebra: DoubleField","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.elementAlgebra","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-d-r-m/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: DoubleField","space.kscience.kmath.ejml.EjmlLinearSpaceDDRM.elementAlgebra"]},{"name":"open override val elementAlgebra: DoubleField","description":"space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.elementAlgebra","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-d-s-c-c/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: DoubleField","space.kscience.kmath.ejml.EjmlLinearSpaceDSCC.elementAlgebra"]},{"name":"open override val elementAlgebra: FloatField","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.elementAlgebra","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-d-r-m/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: FloatField","space.kscience.kmath.ejml.EjmlLinearSpaceFDRM.elementAlgebra"]},{"name":"open override val elementAlgebra: FloatField","description":"space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.elementAlgebra","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-linear-space-f-s-c-c/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: FloatField","space.kscience.kmath.ejml.EjmlLinearSpaceFSCC.elementAlgebra"]},{"name":"open override val origin: M","description":"space.kscience.kmath.ejml.EjmlDoubleMatrix.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-matrix/origin.html","searchKeys":["origin","open override val origin: M","space.kscience.kmath.ejml.EjmlDoubleMatrix.origin"]},{"name":"open override val origin: M","description":"space.kscience.kmath.ejml.EjmlDoubleVector.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-double-vector/origin.html","searchKeys":["origin","open override val origin: M","space.kscience.kmath.ejml.EjmlDoubleVector.origin"]},{"name":"open override val origin: M","description":"space.kscience.kmath.ejml.EjmlFloatMatrix.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-matrix/origin.html","searchKeys":["origin","open override val origin: M","space.kscience.kmath.ejml.EjmlFloatMatrix.origin"]},{"name":"open override val origin: M","description":"space.kscience.kmath.ejml.EjmlFloatVector.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-float-vector/origin.html","searchKeys":["origin","open override val origin: M","space.kscience.kmath.ejml.EjmlFloatVector.origin"]},{"name":"open override val rowNum: Int","description":"space.kscience.kmath.ejml.EjmlMatrix.rowNum","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-matrix/row-num.html","searchKeys":["rowNum","open override val rowNum: Int","space.kscience.kmath.ejml.EjmlMatrix.rowNum"]},{"name":"open override val size: Int","description":"space.kscience.kmath.ejml.EjmlVector.size","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.ejml.EjmlVector.size"]},{"name":"open val origin: M","description":"space.kscience.kmath.ejml.EjmlMatrix.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-matrix/origin.html","searchKeys":["origin","open val origin: M","space.kscience.kmath.ejml.EjmlMatrix.origin"]},{"name":"open val origin: M","description":"space.kscience.kmath.ejml.EjmlVector.origin","location":"kmath-ejml/space.kscience.kmath.ejml/-ejml-vector/origin.html","searchKeys":["origin","open val origin: M","space.kscience.kmath.ejml.EjmlVector.origin"]},{"name":"MISSING(0b0000_0010)","description":"space.kscience.kmath.structures.ValueFlag.MISSING","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-m-i-s-s-i-n-g/index.html","searchKeys":["MISSING","MISSING(0b0000_0010)","space.kscience.kmath.structures.ValueFlag.MISSING"]},{"name":"NAN(0b0000_0001)","description":"space.kscience.kmath.structures.ValueFlag.NAN","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-a-n/index.html","searchKeys":["NAN","NAN(0b0000_0001)","space.kscience.kmath.structures.ValueFlag.NAN"]},{"name":"NEGATIVE_INFINITY(0b0000_0100)","description":"space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-e-g-a-t-i-v-e_-i-n-f-i-n-i-t-y/index.html","searchKeys":["NEGATIVE_INFINITY","NEGATIVE_INFINITY(0b0000_0100)","space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY"]},{"name":"POSITIVE_INFINITY(0b0000_1000)","description":"space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-p-o-s-i-t-i-v-e_-i-n-f-i-n-i-t-y/index.html","searchKeys":["POSITIVE_INFINITY","POSITIVE_INFINITY(0b0000_1000)","space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY"]},{"name":"abstract class DoubleBufferOperations : ExtendedFieldOperations<Buffer<Double>> , Norm<Buffer<Double>, Double> ","description":"space.kscience.kmath.operations.DoubleBufferOperations","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/index.html","searchKeys":["DoubleBufferOperations","abstract class DoubleBufferOperations : ExtendedFieldOperations<Buffer<Double>> , Norm<Buffer<Double>, Double> ","space.kscience.kmath.operations.DoubleBufferOperations"]},{"name":"abstract class FirstDerivativeExpression<T> : DifferentiableExpression<T> ","description":"space.kscience.kmath.expressions.FirstDerivativeExpression","location":"kmath-core/space.kscience.kmath.expressions/-first-derivative-expression/index.html","searchKeys":["FirstDerivativeExpression","abstract class FirstDerivativeExpression<T> : DifferentiableExpression<T> ","space.kscience.kmath.expressions.FirstDerivativeExpression"]},{"name":"abstract class FunctionalExpressionAlgebra<T, out A : Algebra<T>>(algebra: A) : ExpressionAlgebra<T, Expression<T>> ","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/index.html","searchKeys":["FunctionalExpressionAlgebra","abstract class FunctionalExpressionAlgebra<T, out A : Algebra<T>>(algebra: A) : ExpressionAlgebra<T, Expression<T>> ","space.kscience.kmath.expressions.FunctionalExpressionAlgebra"]},{"name":"abstract class JBigDecimalFieldBase : Field<BigDecimal> , PowerOperations<BigDecimal> , NumericAlgebra<BigDecimal> , ScaleOperations<BigDecimal> ","description":"space.kscience.kmath.operations.JBigDecimalFieldBase","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/index.html","searchKeys":["JBigDecimalFieldBase","abstract class JBigDecimalFieldBase : Field<BigDecimal> , PowerOperations<BigDecimal> , NumericAlgebra<BigDecimal> , ScaleOperations<BigDecimal> ","space.kscience.kmath.operations.JBigDecimalFieldBase"]},{"name":"abstract fun <T : F> getFeature(type: FeatureKey<T>): T?","description":"space.kscience.kmath.misc.Featured.getFeature","location":"kmath-core/space.kscience.kmath.misc/-featured/get-feature.html","searchKeys":["getFeature","abstract fun <T : F> getFeature(type: FeatureKey<T>): T?","space.kscience.kmath.misc.Featured.getFeature"]},{"name":"abstract fun StructureND<T>.map(transform: C.(T) -> T): StructureND<T>","description":"space.kscience.kmath.nd.AlgebraND.map","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/map.html","searchKeys":["map","abstract fun StructureND<T>.map(transform: C.(T) -> T): StructureND<T>","space.kscience.kmath.nd.AlgebraND.map"]},{"name":"abstract fun StructureND<T>.mapIndexed(transform: C.(index: IntArray, T) -> T): StructureND<T>","description":"space.kscience.kmath.nd.AlgebraND.mapIndexed","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/map-indexed.html","searchKeys":["mapIndexed","abstract fun StructureND<T>.mapIndexed(transform: C.(index: IntArray, T) -> T): StructureND<T>","space.kscience.kmath.nd.AlgebraND.mapIndexed"]},{"name":"abstract fun acos(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.acos","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/acos.html","searchKeys":["acos","abstract fun acos(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.acos"]},{"name":"abstract fun acosh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.acosh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/acosh.html","searchKeys":["acosh","abstract fun acosh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.acosh"]},{"name":"abstract fun add(a: T, b: T): T","description":"space.kscience.kmath.operations.GroupOperations.add","location":"kmath-core/space.kscience.kmath.operations/-group-operations/add.html","searchKeys":["add","abstract fun add(a: T, b: T): T","space.kscience.kmath.operations.GroupOperations.add"]},{"name":"abstract fun asin(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.asin","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/asin.html","searchKeys":["asin","abstract fun asin(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.asin"]},{"name":"abstract fun asinh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.asinh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/asinh.html","searchKeys":["asinh","abstract fun asinh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.asinh"]},{"name":"abstract fun atan(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.atan","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/atan.html","searchKeys":["atan","abstract fun atan(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.atan"]},{"name":"abstract fun atanh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.atanh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/atanh.html","searchKeys":["atanh","abstract fun atanh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.atanh"]},{"name":"abstract fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.buildMatrix","location":"kmath-core/space.kscience.kmath.linear/-linear-space/build-matrix.html","searchKeys":["buildMatrix","abstract fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): Matrix<T>","space.kscience.kmath.linear.LinearSpace.buildMatrix"]},{"name":"abstract fun buildVector(size: Int, initializer: A.(Int) -> T): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.buildVector","location":"kmath-core/space.kscience.kmath.linear/-linear-space/build-vector.html","searchKeys":["buildVector","abstract fun buildVector(size: Int, initializer: A.(Int) -> T): Point<T>","space.kscience.kmath.linear.LinearSpace.buildVector"]},{"name":"abstract fun combine(a: StructureND<T>, b: StructureND<T>, transform: C.(T, T) -> T): StructureND<T>","description":"space.kscience.kmath.nd.AlgebraND.combine","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/combine.html","searchKeys":["combine","abstract fun combine(a: StructureND<T>, b: StructureND<T>, transform: C.(T, T) -> T): StructureND<T>","space.kscience.kmath.nd.AlgebraND.combine"]},{"name":"abstract fun const(boolean: Boolean): T","description":"space.kscience.kmath.operations.LogicAlgebra.const","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/const.html","searchKeys":["const","abstract fun const(boolean: Boolean): T","space.kscience.kmath.operations.LogicAlgebra.const"]},{"name":"abstract fun const(value: T): E","description":"space.kscience.kmath.expressions.ExpressionAlgebra.const","location":"kmath-core/space.kscience.kmath.expressions/-expression-algebra/const.html","searchKeys":["const","abstract fun const(value: T): E","space.kscience.kmath.expressions.ExpressionAlgebra.const"]},{"name":"abstract fun copy(): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/copy.html","searchKeys":["copy","abstract fun copy(): MutableBuffer<T>","space.kscience.kmath.structures.MutableBuffer.copy"]},{"name":"abstract fun cos(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.cos","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/cos.html","searchKeys":["cos","abstract fun cos(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.cos"]},{"name":"abstract fun cosh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.cosh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/cosh.html","searchKeys":["cosh","abstract fun cosh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.cosh"]},{"name":"abstract fun derivativeOrNull(symbol: Symbol): Expression<T>?","description":"space.kscience.kmath.expressions.FirstDerivativeExpression.derivativeOrNull","location":"kmath-core/space.kscience.kmath.expressions/-first-derivative-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","abstract fun derivativeOrNull(symbol: Symbol): Expression<T>?","space.kscience.kmath.expressions.FirstDerivativeExpression.derivativeOrNull"]},{"name":"abstract fun derivativeOrNull(symbols: List<Symbol>): Expression<T>?","description":"space.kscience.kmath.expressions.DifferentiableExpression.derivativeOrNull","location":"kmath-core/space.kscience.kmath.expressions/-differentiable-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","abstract fun derivativeOrNull(symbols: List<Symbol>): Expression<T>?","space.kscience.kmath.expressions.DifferentiableExpression.derivativeOrNull"]},{"name":"abstract fun differentiate(function: A.() -> I): DifferentiableExpression<T>","description":"space.kscience.kmath.expressions.AutoDiffProcessor.differentiate","location":"kmath-core/space.kscience.kmath.expressions/-auto-diff-processor/differentiate.html","searchKeys":["differentiate","abstract fun differentiate(function: A.() -> I): DifferentiableExpression<T>","space.kscience.kmath.expressions.AutoDiffProcessor.differentiate"]},{"name":"abstract fun divide(a: T, b: T): T","description":"space.kscience.kmath.operations.FieldOperations.divide","location":"kmath-core/space.kscience.kmath.operations/-field-operations/divide.html","searchKeys":["divide","abstract fun divide(a: T, b: T): T","space.kscience.kmath.operations.FieldOperations.divide"]},{"name":"abstract fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.nd.StructureND.elements","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/elements.html","searchKeys":["elements","abstract fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.nd.StructureND.elements"]},{"name":"abstract fun exp(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.exp","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/exp.html","searchKeys":["exp","abstract fun exp(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.exp"]},{"name":"abstract fun getFlag(index: Int): Byte","description":"space.kscience.kmath.structures.FlaggedBuffer.getFlag","location":"kmath-core/space.kscience.kmath.structures/-flagged-buffer/get-flag.html","searchKeys":["getFlag","abstract fun getFlag(index: Int): Byte","space.kscience.kmath.structures.FlaggedBuffer.getFlag"]},{"name":"abstract fun getLowerBound(num: Int): Double","description":"space.kscience.kmath.domains.DoubleDomain.getLowerBound","location":"kmath-core/space.kscience.kmath.domains/-double-domain/get-lower-bound.html","searchKeys":["getLowerBound","abstract fun getLowerBound(num: Int): Double","space.kscience.kmath.domains.DoubleDomain.getLowerBound"]},{"name":"abstract fun getUpperBound(num: Int): Double","description":"space.kscience.kmath.domains.DoubleDomain.getUpperBound","location":"kmath-core/space.kscience.kmath.domains/-double-domain/get-upper-bound.html","searchKeys":["getUpperBound","abstract fun getUpperBound(num: Int): Double","space.kscience.kmath.domains.DoubleDomain.getUpperBound"]},{"name":"abstract fun index(offset: Int): IntArray","description":"space.kscience.kmath.nd.Strides.index","location":"kmath-core/space.kscience.kmath.nd/-strides/--index--.html","searchKeys":["index","abstract fun index(offset: Int): IntArray","space.kscience.kmath.nd.Strides.index"]},{"name":"abstract fun inverse(matrix: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSolver.inverse","location":"kmath-core/space.kscience.kmath.linear/-linear-solver/inverse.html","searchKeys":["inverse","abstract fun inverse(matrix: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSolver.inverse"]},{"name":"abstract fun ln(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.ln","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/ln.html","searchKeys":["ln","abstract fun ln(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.ln"]},{"name":"abstract fun log(tag: String, block: () -> String)","description":"space.kscience.kmath.misc.Loggable.log","location":"kmath-core/space.kscience.kmath.misc/-loggable/log.html","searchKeys":["log","abstract fun log(tag: String, block: () -> String)","space.kscience.kmath.misc.Loggable.log"]},{"name":"abstract fun multiply(a: T, b: T): T","description":"space.kscience.kmath.operations.RingOperations.multiply","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/multiply.html","searchKeys":["multiply","abstract fun multiply(a: T, b: T): T","space.kscience.kmath.operations.RingOperations.multiply"]},{"name":"abstract fun norm(arg: T): R","description":"space.kscience.kmath.operations.Norm.norm","location":"kmath-core/space.kscience.kmath.operations/-norm/norm.html","searchKeys":["norm","abstract fun norm(arg: T): R","space.kscience.kmath.operations.Norm.norm"]},{"name":"abstract fun number(value: Number): T","description":"space.kscience.kmath.operations.NumericAlgebra.number","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/number.html","searchKeys":["number","abstract fun number(value: Number): T","space.kscience.kmath.operations.NumericAlgebra.number"]},{"name":"abstract fun power(arg: T, pow: Number): T","description":"space.kscience.kmath.operations.PowerOperations.power","location":"kmath-core/space.kscience.kmath.operations/-power-operations/power.html","searchKeys":["power","abstract fun power(arg: T, pow: Number): T","space.kscience.kmath.operations.PowerOperations.power"]},{"name":"abstract fun produce(initializer: C.(IntArray) -> T): StructureND<T>","description":"space.kscience.kmath.nd.AlgebraND.produce","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/produce.html","searchKeys":["produce","abstract fun produce(initializer: C.(IntArray) -> T): StructureND<T>","space.kscience.kmath.nd.AlgebraND.produce"]},{"name":"abstract fun scale(a: T, value: Double): T","description":"space.kscience.kmath.operations.ScaleOperations.scale","location":"kmath-core/space.kscience.kmath.operations/-scale-operations/scale.html","searchKeys":["scale","abstract fun scale(a: T, value: Double): T","space.kscience.kmath.operations.ScaleOperations.scale"]},{"name":"abstract fun sin(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.sin","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/sin.html","searchKeys":["sin","abstract fun sin(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.sin"]},{"name":"abstract fun sinh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.sinh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/sinh.html","searchKeys":["sinh","abstract fun sinh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.sinh"]},{"name":"abstract fun solve(a: Matrix<T>, b: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSolver.solve","location":"kmath-core/space.kscience.kmath.linear/-linear-solver/solve.html","searchKeys":["solve","abstract fun solve(a: Matrix<T>, b: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSolver.solve"]},{"name":"abstract fun tan(arg: T): T","description":"space.kscience.kmath.operations.TrigonometricOperations.tan","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/tan.html","searchKeys":["tan","abstract fun tan(arg: T): T","space.kscience.kmath.operations.TrigonometricOperations.tan"]},{"name":"abstract fun tanh(arg: T): T","description":"space.kscience.kmath.operations.ExponentialOperations.tanh","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/tanh.html","searchKeys":["tanh","abstract fun tanh(arg: T): T","space.kscience.kmath.operations.ExponentialOperations.tanh"]},{"name":"abstract fun volume(): Double","description":"space.kscience.kmath.domains.DoubleDomain.volume","location":"kmath-core/space.kscience.kmath.domains/-double-domain/volume.html","searchKeys":["volume","abstract fun volume(): Double","space.kscience.kmath.domains.DoubleDomain.volume"]},{"name":"abstract infix fun T.and(other: T): T","description":"space.kscience.kmath.operations.LogicAlgebra.and","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/and.html","searchKeys":["and","abstract infix fun T.and(other: T): T","space.kscience.kmath.operations.LogicAlgebra.and"]},{"name":"abstract infix fun T.or(other: T): T","description":"space.kscience.kmath.operations.LogicAlgebra.or","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/or.html","searchKeys":["or","abstract infix fun T.or(other: T): T","space.kscience.kmath.operations.LogicAlgebra.or"]},{"name":"abstract infix fun T.xor(other: T): T","description":"space.kscience.kmath.operations.LogicAlgebra.xor","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/xor.html","searchKeys":["xor","abstract infix fun T.xor(other: T): T","space.kscience.kmath.operations.LogicAlgebra.xor"]},{"name":"abstract operator fun T.not(): T","description":"space.kscience.kmath.operations.LogicAlgebra.not","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/not.html","searchKeys":["not","abstract operator fun T.not(): T","space.kscience.kmath.operations.LogicAlgebra.not"]},{"name":"abstract operator fun T.unaryMinus(): T","description":"space.kscience.kmath.operations.GroupOperations.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-group-operations/unary-minus.html","searchKeys":["unaryMinus","abstract operator fun T.unaryMinus(): T","space.kscience.kmath.operations.GroupOperations.unaryMinus"]},{"name":"abstract operator fun contains(point: Point<T>): Boolean","description":"space.kscience.kmath.domains.Domain.contains","location":"kmath-core/space.kscience.kmath.domains/-domain/contains.html","searchKeys":["contains","abstract operator fun contains(point: Point<T>): Boolean","space.kscience.kmath.domains.Domain.contains"]},{"name":"abstract operator fun get(i: Int, j: Int): T","description":"space.kscience.kmath.nd.Structure2D.get","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/get.html","searchKeys":["get","abstract operator fun get(i: Int, j: Int): T","space.kscience.kmath.nd.Structure2D.get"]},{"name":"abstract operator fun get(index: Int): T","description":"space.kscience.kmath.structures.Buffer.get","location":"kmath-core/space.kscience.kmath.structures/-buffer/get.html","searchKeys":["get","abstract operator fun get(index: Int): T","space.kscience.kmath.structures.Buffer.get"]},{"name":"abstract operator fun get(index: IntArray): T","description":"space.kscience.kmath.nd.StructureND.get","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/get.html","searchKeys":["get","abstract operator fun get(index: IntArray): T","space.kscience.kmath.nd.StructureND.get"]},{"name":"abstract operator fun get(symbol: Symbol): Buffer<T>?","description":"space.kscience.kmath.data.ColumnarData.get","location":"kmath-core/space.kscience.kmath.data/-columnar-data/get.html","searchKeys":["get","abstract operator fun get(symbol: Symbol): Buffer<T>?","space.kscience.kmath.data.ColumnarData.get"]},{"name":"abstract operator fun invoke(arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.expressions.Expression.invoke","location":"kmath-core/space.kscience.kmath.expressions/-expression/invoke.html","searchKeys":["invoke","abstract operator fun invoke(arguments: Map<Symbol, T>): T","space.kscience.kmath.expressions.Expression.invoke"]},{"name":"abstract operator fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.Buffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-buffer/iterator.html","searchKeys":["iterator","abstract operator fun iterator(): Iterator<T>","space.kscience.kmath.structures.Buffer.iterator"]},{"name":"abstract operator fun set(i: Int, j: Int, value: T)","description":"space.kscience.kmath.nd.MutableStructure2D.set","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure2-d/set.html","searchKeys":["set","abstract operator fun set(i: Int, j: Int, value: T)","space.kscience.kmath.nd.MutableStructure2D.set"]},{"name":"abstract operator fun set(index: Int, value: T)","description":"space.kscience.kmath.structures.MutableBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: T)","space.kscience.kmath.structures.MutableBuffer.set"]},{"name":"abstract operator fun set(index: IntArray, value: T)","description":"space.kscience.kmath.nd.MutableStructureND.set","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure-n-d/set.html","searchKeys":["set","abstract operator fun set(index: IntArray, value: T)","space.kscience.kmath.nd.MutableStructureND.set"]},{"name":"abstract override fun derivativeOrNull(symbols: List<Symbol>): R?","description":"space.kscience.kmath.expressions.SpecialDifferentiableExpression.derivativeOrNull","location":"kmath-core/space.kscience.kmath.expressions/-special-differentiable-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","abstract override fun derivativeOrNull(symbols: List<Symbol>): R?","space.kscience.kmath.expressions.SpecialDifferentiableExpression.derivativeOrNull"]},{"name":"abstract override fun toString(): String","description":"space.kscience.kmath.structures.Buffer.toString","location":"kmath-core/space.kscience.kmath.structures/-buffer/to-string.html","searchKeys":["toString","abstract override fun toString(): String","space.kscience.kmath.structures.Buffer.toString"]},{"name":"abstract val bufferFactory: BufferFactory<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.bufferFactory","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/buffer-factory.html","searchKeys":["bufferFactory","abstract val bufferFactory: BufferFactory<T>","space.kscience.kmath.nd.BufferAlgebraND.bufferFactory"]},{"name":"abstract val bufferFactory: BufferFactory<T>","description":"space.kscience.kmath.operations.BufferAlgebra.bufferFactory","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/buffer-factory.html","searchKeys":["bufferFactory","abstract val bufferFactory: BufferFactory<T>","space.kscience.kmath.operations.BufferAlgebra.bufferFactory"]},{"name":"abstract val colNum: Int","description":"space.kscience.kmath.nd.Structure2D.colNum","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/col-num.html","searchKeys":["colNum","abstract val colNum: Int","space.kscience.kmath.nd.Structure2D.colNum"]},{"name":"abstract val determinant: T","description":"space.kscience.kmath.linear.DeterminantFeature.determinant","location":"kmath-core/space.kscience.kmath.linear/-determinant-feature/determinant.html","searchKeys":["determinant","abstract val determinant: T","space.kscience.kmath.linear.DeterminantFeature.determinant"]},{"name":"abstract val dimension: Int","description":"space.kscience.kmath.domains.Domain.dimension","location":"kmath-core/space.kscience.kmath.domains/-domain/dimension.html","searchKeys":["dimension","abstract val dimension: Int","space.kscience.kmath.domains.Domain.dimension"]},{"name":"abstract val elementAlgebra: A","description":"space.kscience.kmath.linear.LinearSpace.elementAlgebra","location":"kmath-core/space.kscience.kmath.linear/-linear-space/element-algebra.html","searchKeys":["elementAlgebra","abstract val elementAlgebra: A","space.kscience.kmath.linear.LinearSpace.elementAlgebra"]},{"name":"abstract val elementAlgebra: A","description":"space.kscience.kmath.operations.BufferAlgebra.elementAlgebra","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/element-algebra.html","searchKeys":["elementAlgebra","abstract val elementAlgebra: A","space.kscience.kmath.operations.BufferAlgebra.elementAlgebra"]},{"name":"abstract val elementContext: C","description":"space.kscience.kmath.nd.AlgebraND.elementContext","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/element-context.html","searchKeys":["elementContext","abstract val elementContext: C","space.kscience.kmath.nd.AlgebraND.elementContext"]},{"name":"abstract val identity: String","description":"space.kscience.kmath.expressions.Symbol.identity","location":"kmath-core/space.kscience.kmath.expressions/-symbol/identity.html","searchKeys":["identity","abstract val identity: String","space.kscience.kmath.expressions.Symbol.identity"]},{"name":"abstract val inverse: Matrix<T>","description":"space.kscience.kmath.linear.InverseMatrixFeature.inverse","location":"kmath-core/space.kscience.kmath.linear/-inverse-matrix-feature/inverse.html","searchKeys":["inverse","abstract val inverse: Matrix<T>","space.kscience.kmath.linear.InverseMatrixFeature.inverse"]},{"name":"abstract val l: Matrix<T>","description":"space.kscience.kmath.linear.CholeskyDecompositionFeature.l","location":"kmath-core/space.kscience.kmath.linear/-cholesky-decomposition-feature/l.html","searchKeys":["l","abstract val l: Matrix<T>","space.kscience.kmath.linear.CholeskyDecompositionFeature.l"]},{"name":"abstract val l: Matrix<T>","description":"space.kscience.kmath.linear.LUDecompositionFeature.l","location":"kmath-core/space.kscience.kmath.linear/-l-u-decomposition-feature/l.html","searchKeys":["l","abstract val l: Matrix<T>","space.kscience.kmath.linear.LUDecompositionFeature.l"]},{"name":"abstract val l: Matrix<T>","description":"space.kscience.kmath.linear.LupDecompositionFeature.l","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition-feature/l.html","searchKeys":["l","abstract val l: Matrix<T>","space.kscience.kmath.linear.LupDecompositionFeature.l"]},{"name":"abstract val linearSize: Int","description":"space.kscience.kmath.nd.Strides.linearSize","location":"kmath-core/space.kscience.kmath.nd/-strides/linear-size.html","searchKeys":["linearSize","abstract val linearSize: Int","space.kscience.kmath.nd.Strides.linearSize"]},{"name":"abstract val one: T","description":"space.kscience.kmath.operations.Ring.one","location":"kmath-core/space.kscience.kmath.operations/-ring/one.html","searchKeys":["one","abstract val one: T","space.kscience.kmath.operations.Ring.one"]},{"name":"abstract val p: Matrix<T>","description":"space.kscience.kmath.linear.LupDecompositionFeature.p","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition-feature/p.html","searchKeys":["p","abstract val p: Matrix<T>","space.kscience.kmath.linear.LupDecompositionFeature.p"]},{"name":"abstract val q: Matrix<T>","description":"space.kscience.kmath.linear.QRDecompositionFeature.q","location":"kmath-core/space.kscience.kmath.linear/-q-r-decomposition-feature/q.html","searchKeys":["q","abstract val q: Matrix<T>","space.kscience.kmath.linear.QRDecompositionFeature.q"]},{"name":"abstract val r: Matrix<T>","description":"space.kscience.kmath.linear.QRDecompositionFeature.r","location":"kmath-core/space.kscience.kmath.linear/-q-r-decomposition-feature/r.html","searchKeys":["r","abstract val r: Matrix<T>","space.kscience.kmath.linear.QRDecompositionFeature.r"]},{"name":"abstract val rowNum: Int","description":"space.kscience.kmath.nd.Structure2D.rowNum","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/row-num.html","searchKeys":["rowNum","abstract val rowNum: Int","space.kscience.kmath.nd.Structure2D.rowNum"]},{"name":"abstract val s: Matrix<T>","description":"space.kscience.kmath.linear.SingularValueDecompositionFeature.s","location":"kmath-core/space.kscience.kmath.linear/-singular-value-decomposition-feature/s.html","searchKeys":["s","abstract val s: Matrix<T>","space.kscience.kmath.linear.SingularValueDecompositionFeature.s"]},{"name":"abstract val shape: IntArray","description":"space.kscience.kmath.nd.AlgebraND.shape","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/shape.html","searchKeys":["shape","abstract val shape: IntArray","space.kscience.kmath.nd.AlgebraND.shape"]},{"name":"abstract val shape: IntArray","description":"space.kscience.kmath.nd.Strides.shape","location":"kmath-core/space.kscience.kmath.nd/-strides/shape.html","searchKeys":["shape","abstract val shape: IntArray","space.kscience.kmath.nd.Strides.shape"]},{"name":"abstract val shape: IntArray","description":"space.kscience.kmath.nd.StructureND.shape","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/shape.html","searchKeys":["shape","abstract val shape: IntArray","space.kscience.kmath.nd.StructureND.shape"]},{"name":"abstract val singularValues: Point<T>","description":"space.kscience.kmath.linear.SingularValueDecompositionFeature.singularValues","location":"kmath-core/space.kscience.kmath.linear/-singular-value-decomposition-feature/singular-values.html","searchKeys":["singularValues","abstract val singularValues: Point<T>","space.kscience.kmath.linear.SingularValueDecompositionFeature.singularValues"]},{"name":"abstract val size: Int","description":"space.kscience.kmath.data.ColumnarData.size","location":"kmath-core/space.kscience.kmath.data/-columnar-data/size.html","searchKeys":["size","abstract val size: Int","space.kscience.kmath.data.ColumnarData.size"]},{"name":"abstract val size: Int","description":"space.kscience.kmath.operations.BufferAlgebra.size","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/size.html","searchKeys":["size","abstract val size: Int","space.kscience.kmath.operations.BufferAlgebra.size"]},{"name":"abstract val size: Int","description":"space.kscience.kmath.structures.Buffer.size","location":"kmath-core/space.kscience.kmath.structures/-buffer/size.html","searchKeys":["size","abstract val size: Int","space.kscience.kmath.structures.Buffer.size"]},{"name":"abstract val strides: IntArray","description":"space.kscience.kmath.nd.Strides.strides","location":"kmath-core/space.kscience.kmath.nd/-strides/strides.html","searchKeys":["strides","abstract val strides: IntArray","space.kscience.kmath.nd.Strides.strides"]},{"name":"abstract val strides: Strides","description":"space.kscience.kmath.nd.BufferAlgebraND.strides","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/strides.html","searchKeys":["strides","abstract val strides: Strides","space.kscience.kmath.nd.BufferAlgebraND.strides"]},{"name":"abstract val symbols: List<Symbol>","description":"space.kscience.kmath.expressions.SymbolIndexer.symbols","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/symbols.html","searchKeys":["symbols","abstract val symbols: List<Symbol>","space.kscience.kmath.expressions.SymbolIndexer.symbols"]},{"name":"abstract val u: Matrix<T>","description":"space.kscience.kmath.linear.LUDecompositionFeature.u","location":"kmath-core/space.kscience.kmath.linear/-l-u-decomposition-feature/u.html","searchKeys":["u","abstract val u: Matrix<T>","space.kscience.kmath.linear.LUDecompositionFeature.u"]},{"name":"abstract val u: Matrix<T>","description":"space.kscience.kmath.linear.LupDecompositionFeature.u","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition-feature/u.html","searchKeys":["u","abstract val u: Matrix<T>","space.kscience.kmath.linear.LupDecompositionFeature.u"]},{"name":"abstract val u: Matrix<T>","description":"space.kscience.kmath.linear.SingularValueDecompositionFeature.u","location":"kmath-core/space.kscience.kmath.linear/-singular-value-decomposition-feature/u.html","searchKeys":["u","abstract val u: Matrix<T>","space.kscience.kmath.linear.SingularValueDecompositionFeature.u"]},{"name":"abstract val v: Matrix<T>","description":"space.kscience.kmath.linear.SingularValueDecompositionFeature.v","location":"kmath-core/space.kscience.kmath.linear/-singular-value-decomposition-feature/v.html","searchKeys":["v","abstract val v: Matrix<T>","space.kscience.kmath.linear.SingularValueDecompositionFeature.v"]},{"name":"abstract val x: Buffer<X>","description":"space.kscience.kmath.data.XYColumnarData.x","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/x.html","searchKeys":["x","abstract val x: Buffer<X>","space.kscience.kmath.data.XYColumnarData.x"]},{"name":"abstract val y: Buffer<Y>","description":"space.kscience.kmath.data.XYColumnarData.y","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/y.html","searchKeys":["y","abstract val y: Buffer<Y>","space.kscience.kmath.data.XYColumnarData.y"]},{"name":"abstract val yErr: Buffer<Y>","description":"space.kscience.kmath.data.XYErrorColumnarData.yErr","location":"kmath-core/space.kscience.kmath.data/-x-y-error-columnar-data/y-err.html","searchKeys":["yErr","abstract val yErr: Buffer<Y>","space.kscience.kmath.data.XYErrorColumnarData.yErr"]},{"name":"abstract val z: Buffer<Z>","description":"space.kscience.kmath.data.XYZColumnarData.z","location":"kmath-core/space.kscience.kmath.data/-x-y-z-columnar-data/z.html","searchKeys":["z","abstract val z: Buffer<Z>","space.kscience.kmath.data.XYZColumnarData.z"]},{"name":"abstract val zero: T","description":"space.kscience.kmath.operations.Group.zero","location":"kmath-core/space.kscience.kmath.operations/-group/zero.html","searchKeys":["zero","abstract val zero: T","space.kscience.kmath.operations.Group.zero"]},{"name":"annotation class KMathContext","description":"space.kscience.kmath.operations.KMathContext","location":"kmath-core/space.kscience.kmath.operations/-k-math-context/index.html","searchKeys":["KMathContext","annotation class KMathContext","space.kscience.kmath.operations.KMathContext"]},{"name":"annotation class PerformancePitfall(message: String)","description":"space.kscience.kmath.misc.PerformancePitfall","location":"kmath-core/space.kscience.kmath.misc/-performance-pitfall/index.html","searchKeys":["PerformancePitfall","annotation class PerformancePitfall(message: String)","space.kscience.kmath.misc.PerformancePitfall"]},{"name":"annotation class UnstableKMathAPI","description":"space.kscience.kmath.misc.UnstableKMathAPI","location":"kmath-core/space.kscience.kmath.misc/-unstable-k-math-a-p-i/index.html","searchKeys":["UnstableKMathAPI","annotation class UnstableKMathAPI","space.kscience.kmath.misc.UnstableKMathAPI"]},{"name":"class ArrayBuffer<T>(array: Array<T>) : MutableBuffer<T> ","description":"space.kscience.kmath.structures.ArrayBuffer","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/index.html","searchKeys":["ArrayBuffer","class ArrayBuffer<T>(array: Array<T>) : MutableBuffer<T> ","space.kscience.kmath.structures.ArrayBuffer"]},{"name":"class BigInt : Comparable<BigInt> ","description":"space.kscience.kmath.operations.BigInt","location":"kmath-core/space.kscience.kmath.operations/-big-int/index.html","searchKeys":["BigInt","class BigInt : Comparable<BigInt> ","space.kscience.kmath.operations.BigInt"]},{"name":"class BufferField<T, A : Field<T>>(bufferFactory: BufferFactory<T>, elementAlgebra: A, size: Int) : BufferAlgebra<T, A> , Field<Buffer<T>> ","description":"space.kscience.kmath.operations.BufferField","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/index.html","searchKeys":["BufferField","class BufferField<T, A : Field<T>>(bufferFactory: BufferFactory<T>, elementAlgebra: A, size: Int) : BufferAlgebra<T, A> , Field<Buffer<T>> ","space.kscience.kmath.operations.BufferField"]},{"name":"class BufferedLinearSpace<T, out A : Ring<T>>(elementAlgebra: A, bufferFactory: BufferFactory<T>) : LinearSpace<T, A> ","description":"space.kscience.kmath.linear.BufferedLinearSpace","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/index.html","searchKeys":["BufferedLinearSpace","class BufferedLinearSpace<T, out A : Ring<T>>(elementAlgebra: A, bufferFactory: BufferFactory<T>) : LinearSpace<T, A> ","space.kscience.kmath.linear.BufferedLinearSpace"]},{"name":"class DefaultStrides : Strides","description":"space.kscience.kmath.nd.DefaultStrides","location":"kmath-core/space.kscience.kmath.nd/-default-strides/index.html","searchKeys":["DefaultStrides","class DefaultStrides : Strides","space.kscience.kmath.nd.DefaultStrides"]},{"name":"class DerivationResult<T : Any>(value: T, derivativeValues: Map<String, T>, context: Field<T>)","description":"space.kscience.kmath.expressions.DerivationResult","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/index.html","searchKeys":["DerivationResult","class DerivationResult<T : Any>(value: T, derivativeValues: Map<String, T>, context: Field<T>)","space.kscience.kmath.expressions.DerivationResult"]},{"name":"class DoubleBufferField(size: Int) : DoubleBufferOperations, ExtendedField<Buffer<Double>> ","description":"space.kscience.kmath.operations.DoubleBufferField","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/index.html","searchKeys":["DoubleBufferField","class DoubleBufferField(size: Int) : DoubleBufferOperations, ExtendedField<Buffer<Double>> ","space.kscience.kmath.operations.DoubleBufferField"]},{"name":"class DoubleFieldND(shape: IntArray) : BufferedFieldND<Double, DoubleField> , NumbersAddOperations<StructureND<Double>> , ScaleOperations<StructureND<Double>> , ExtendedField<StructureND<Double>> ","description":"space.kscience.kmath.nd.DoubleFieldND","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/index.html","searchKeys":["DoubleFieldND","class DoubleFieldND(shape: IntArray) : BufferedFieldND<Double, DoubleField> , NumbersAddOperations<StructureND<Double>> , ScaleOperations<StructureND<Double>> , ExtendedField<StructureND<Double>> ","space.kscience.kmath.nd.DoubleFieldND"]},{"name":"class FlaggedDoubleBuffer(values: DoubleArray, flags: ByteArray) : FlaggedBuffer<Double?> , Buffer<Double?> ","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/index.html","searchKeys":["FlaggedDoubleBuffer","class FlaggedDoubleBuffer(values: DoubleArray, flags: ByteArray) : FlaggedBuffer<Double?> , Buffer<Double?> ","space.kscience.kmath.structures.FlaggedDoubleBuffer"]},{"name":"class HyperSquareDomain(lower: Buffer<Double>, upper: Buffer<Double>) : DoubleDomain","description":"space.kscience.kmath.domains.HyperSquareDomain","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/index.html","searchKeys":["HyperSquareDomain","class HyperSquareDomain(lower: Buffer<Double>, upper: Buffer<Double>) : DoubleDomain","space.kscience.kmath.domains.HyperSquareDomain"]},{"name":"class JBigDecimalField(mathContext: MathContext) : JBigDecimalFieldBase","description":"space.kscience.kmath.operations.JBigDecimalField","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field/index.html","searchKeys":["JBigDecimalField","class JBigDecimalField(mathContext: MathContext) : JBigDecimalFieldBase","space.kscience.kmath.operations.JBigDecimalField"]},{"name":"class ListBuffer<T>(list: List<T>) : Buffer<T> ","description":"space.kscience.kmath.structures.ListBuffer","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/index.html","searchKeys":["ListBuffer","class ListBuffer<T>(list: List<T>) : Buffer<T> ","space.kscience.kmath.structures.ListBuffer"]},{"name":"class LupDecomposition<T : Any>(context: LinearSpace<T, *>, elementContext: Field<T>, lu: Matrix<T>, pivot: IntArray, even: Boolean) : LupDecompositionFeature<T> , DeterminantFeature<T> ","description":"space.kscience.kmath.linear.LupDecomposition","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/index.html","searchKeys":["LupDecomposition","class LupDecomposition<T : Any>(context: LinearSpace<T, *>, elementContext: Field<T>, lu: Matrix<T>, pivot: IntArray, even: Boolean) : LupDecompositionFeature<T> , DeterminantFeature<T> ","space.kscience.kmath.linear.LupDecomposition"]},{"name":"class MatrixBuilder<T : Any, out A : Ring<T>>(linearSpace: LinearSpace<T, A>, rows: Int, columns: Int)","description":"space.kscience.kmath.linear.MatrixBuilder","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/index.html","searchKeys":["MatrixBuilder","class MatrixBuilder<T : Any, out A : Ring<T>>(linearSpace: LinearSpace<T, A>, rows: Int, columns: Int)","space.kscience.kmath.linear.MatrixBuilder"]},{"name":"class MatrixWrapper<out T : Any> : Structure2D<T> ","description":"space.kscience.kmath.linear.MatrixWrapper","location":"kmath-core/space.kscience.kmath.linear/-matrix-wrapper/index.html","searchKeys":["MatrixWrapper","class MatrixWrapper<out T : Any> : Structure2D<T> ","space.kscience.kmath.linear.MatrixWrapper"]},{"name":"class MutableBufferND<T>(strides: Strides, mutableBuffer: MutableBuffer<T>) : BufferND<T> , MutableStructureND<T> ","description":"space.kscience.kmath.nd.MutableBufferND","location":"kmath-core/space.kscience.kmath.nd/-mutable-buffer-n-d/index.html","searchKeys":["MutableBufferND","class MutableBufferND<T>(strides: Strides, mutableBuffer: MutableBuffer<T>) : BufferND<T> , MutableStructureND<T> ","space.kscience.kmath.nd.MutableBufferND"]},{"name":"class MutableMemoryBuffer<T : Any>(memory: Memory, spec: MemorySpec<T>) : MemoryBuffer<T> , MutableBuffer<T> ","description":"space.kscience.kmath.structures.MutableMemoryBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/index.html","searchKeys":["MutableMemoryBuffer","class MutableMemoryBuffer<T : Any>(memory: Memory, spec: MemorySpec<T>) : MemoryBuffer<T> , MutableBuffer<T> ","space.kscience.kmath.structures.MutableMemoryBuffer"]},{"name":"class ShapeMismatchException(expected: IntArray, actual: IntArray) : RuntimeException","description":"space.kscience.kmath.nd.ShapeMismatchException","location":"kmath-core/space.kscience.kmath.nd/-shape-mismatch-exception/index.html","searchKeys":["ShapeMismatchException","class ShapeMismatchException(expected: IntArray, actual: IntArray) : RuntimeException","space.kscience.kmath.nd.ShapeMismatchException"]},{"name":"class ShortRingND(shape: IntArray) : BufferedRingND<Short, ShortRing> , NumbersAddOperations<StructureND<Short>> ","description":"space.kscience.kmath.nd.ShortRingND","location":"kmath-core/space.kscience.kmath.nd/-short-ring-n-d/index.html","searchKeys":["ShortRingND","class ShortRingND(shape: IntArray) : BufferedRingND<Short, ShortRing> , NumbersAddOperations<StructureND<Short>> ","space.kscience.kmath.nd.ShortRingND"]},{"name":"class SimpleAutoDiffExpression<T : Any, F : Field<T>>(field: F, function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>) : FirstDerivativeExpression<T> ","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/index.html","searchKeys":["SimpleAutoDiffExpression","class SimpleAutoDiffExpression<T : Any, F : Field<T>>(field: F, function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>) : FirstDerivativeExpression<T> ","space.kscience.kmath.expressions.SimpleAutoDiffExpression"]},{"name":"class SimpleAutoDiffExtendedField<T : Any, F : ExtendedField<T>>(context: F, bindings: Map<Symbol, T>) : SimpleAutoDiffField<T, F> , ExtendedField<AutoDiffValue<T>> , ScaleOperations<AutoDiffValue<T>> ","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/index.html","searchKeys":["SimpleAutoDiffExtendedField","class SimpleAutoDiffExtendedField<T : Any, F : ExtendedField<T>>(context: F, bindings: Map<Symbol, T>) : SimpleAutoDiffField<T, F> , ExtendedField<AutoDiffValue<T>> , ScaleOperations<AutoDiffValue<T>> ","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField"]},{"name":"class TransposedFeature<out T : Any>(original: Matrix<T>) : MatrixFeature","description":"space.kscience.kmath.linear.TransposedFeature","location":"kmath-core/space.kscience.kmath.linear/-transposed-feature/index.html","searchKeys":["TransposedFeature","class TransposedFeature<out T : Any>(original: Matrix<T>) : MatrixFeature","space.kscience.kmath.linear.TransposedFeature"]},{"name":"class UnconstrainedDomain(dimension: Int) : DoubleDomain","description":"space.kscience.kmath.domains.UnconstrainedDomain","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/index.html","searchKeys":["UnconstrainedDomain","class UnconstrainedDomain(dimension: Int) : DoubleDomain","space.kscience.kmath.domains.UnconstrainedDomain"]},{"name":"class UnivariateDomain(range: ClosedFloatingPointRange<Double>) : DoubleDomain","description":"space.kscience.kmath.domains.UnivariateDomain","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/index.html","searchKeys":["UnivariateDomain","class UnivariateDomain(range: ClosedFloatingPointRange<Double>) : DoubleDomain","space.kscience.kmath.domains.UnivariateDomain"]},{"name":"class VirtualBuffer<out T>(size: Int, generator: (Int) -> T) : Buffer<T> ","description":"space.kscience.kmath.structures.VirtualBuffer","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/index.html","searchKeys":["VirtualBuffer","class VirtualBuffer<out T>(size: Int, generator: (Int) -> T) : Buffer<T> ","space.kscience.kmath.structures.VirtualBuffer"]},{"name":"class VirtualMatrix<out T : Any>(rowNum: Int, colNum: Int, generator: (i: Int, j: Int) -> T) : Structure2D<T> ","description":"space.kscience.kmath.linear.VirtualMatrix","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/index.html","searchKeys":["VirtualMatrix","class VirtualMatrix<out T : Any>(rowNum: Int, colNum: Int, generator: (i: Int, j: Int) -> T) : Structure2D<T> ","space.kscience.kmath.linear.VirtualMatrix"]},{"name":"const val ACOSH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.ACOSH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-a-c-o-s-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ACOSH_OPERATION","const val ACOSH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.ACOSH_OPERATION"]},{"name":"const val ACOS_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.ACOS_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-a-c-o-s_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ACOS_OPERATION","const val ACOS_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.ACOS_OPERATION"]},{"name":"const val ASINH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.ASINH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-a-s-i-n-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ASINH_OPERATION","const val ASINH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.ASINH_OPERATION"]},{"name":"const val ASIN_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.ASIN_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-a-s-i-n_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ASIN_OPERATION","const val ASIN_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.ASIN_OPERATION"]},{"name":"const val ATANH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.ATANH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-a-t-a-n-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ATANH_OPERATION","const val ATANH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.ATANH_OPERATION"]},{"name":"const val ATAN_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.ATAN_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-a-t-a-n_-o-p-e-r-a-t-i-o-n.html","searchKeys":["ATAN_OPERATION","const val ATAN_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.ATAN_OPERATION"]},{"name":"const val BASE: ULong = 0xffffffffUL","description":"space.kscience.kmath.operations.BigInt.Companion.BASE","location":"kmath-core/space.kscience.kmath.operations/-big-int/-companion/-b-a-s-e.html","searchKeys":["BASE","const val BASE: ULong = 0xffffffffUL","space.kscience.kmath.operations.BigInt.Companion.BASE"]},{"name":"const val BASE_SIZE: Int = 32","description":"space.kscience.kmath.operations.BigInt.Companion.BASE_SIZE","location":"kmath-core/space.kscience.kmath.operations/-big-int/-companion/-b-a-s-e_-s-i-z-e.html","searchKeys":["BASE_SIZE","const val BASE_SIZE: Int = 32","space.kscience.kmath.operations.BigInt.Companion.BASE_SIZE"]},{"name":"const val COSH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.COSH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-c-o-s-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["COSH_OPERATION","const val COSH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.COSH_OPERATION"]},{"name":"const val COS_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.COS_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-c-o-s_-o-p-e-r-a-t-i-o-n.html","searchKeys":["COS_OPERATION","const val COS_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.COS_OPERATION"]},{"name":"const val DIV_OPERATION: String","description":"space.kscience.kmath.operations.FieldOperations.Companion.DIV_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-field-operations/-companion/-d-i-v_-o-p-e-r-a-t-i-o-n.html","searchKeys":["DIV_OPERATION","const val DIV_OPERATION: String","space.kscience.kmath.operations.FieldOperations.Companion.DIV_OPERATION"]},{"name":"const val EXP_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.EXP_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-e-x-p_-o-p-e-r-a-t-i-o-n.html","searchKeys":["EXP_OPERATION","const val EXP_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.EXP_OPERATION"]},{"name":"const val INFO: String","description":"space.kscience.kmath.misc.Loggable.Companion.INFO","location":"kmath-core/space.kscience.kmath.misc/-loggable/-companion/-i-n-f-o.html","searchKeys":["INFO","const val INFO: String","space.kscience.kmath.misc.Loggable.Companion.INFO"]},{"name":"const val LN_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.LN_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-l-n_-o-p-e-r-a-t-i-o-n.html","searchKeys":["LN_OPERATION","const val LN_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.LN_OPERATION"]},{"name":"const val MINUS_OPERATION: String","description":"space.kscience.kmath.operations.GroupOperations.Companion.MINUS_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-group-operations/-companion/-m-i-n-u-s_-o-p-e-r-a-t-i-o-n.html","searchKeys":["MINUS_OPERATION","const val MINUS_OPERATION: String","space.kscience.kmath.operations.GroupOperations.Companion.MINUS_OPERATION"]},{"name":"const val PLUS_OPERATION: String","description":"space.kscience.kmath.operations.GroupOperations.Companion.PLUS_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-group-operations/-companion/-p-l-u-s_-o-p-e-r-a-t-i-o-n.html","searchKeys":["PLUS_OPERATION","const val PLUS_OPERATION: String","space.kscience.kmath.operations.GroupOperations.Companion.PLUS_OPERATION"]},{"name":"const val POW_OPERATION: String","description":"space.kscience.kmath.operations.PowerOperations.Companion.POW_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-power-operations/-companion/-p-o-w_-o-p-e-r-a-t-i-o-n.html","searchKeys":["POW_OPERATION","const val POW_OPERATION: String","space.kscience.kmath.operations.PowerOperations.Companion.POW_OPERATION"]},{"name":"const val SINH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.SINH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-s-i-n-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["SINH_OPERATION","const val SINH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.SINH_OPERATION"]},{"name":"const val SIN_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.SIN_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-s-i-n_-o-p-e-r-a-t-i-o-n.html","searchKeys":["SIN_OPERATION","const val SIN_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.SIN_OPERATION"]},{"name":"const val SQRT_OPERATION: String","description":"space.kscience.kmath.operations.PowerOperations.Companion.SQRT_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-power-operations/-companion/-s-q-r-t_-o-p-e-r-a-t-i-o-n.html","searchKeys":["SQRT_OPERATION","const val SQRT_OPERATION: String","space.kscience.kmath.operations.PowerOperations.Companion.SQRT_OPERATION"]},{"name":"const val TANH_OPERATION: String","description":"space.kscience.kmath.operations.ExponentialOperations.Companion.TANH_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/-t-a-n-h_-o-p-e-r-a-t-i-o-n.html","searchKeys":["TANH_OPERATION","const val TANH_OPERATION: String","space.kscience.kmath.operations.ExponentialOperations.Companion.TANH_OPERATION"]},{"name":"const val TAN_OPERATION: String","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion.TAN_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/-t-a-n_-o-p-e-r-a-t-i-o-n.html","searchKeys":["TAN_OPERATION","const val TAN_OPERATION: String","space.kscience.kmath.operations.TrigonometricOperations.Companion.TAN_OPERATION"]},{"name":"const val TIMES_OPERATION: String","description":"space.kscience.kmath.operations.RingOperations.Companion.TIMES_OPERATION","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/-companion/-t-i-m-e-s_-o-p-e-r-a-t-i-o-n.html","searchKeys":["TIMES_OPERATION","const val TIMES_OPERATION: String","space.kscience.kmath.operations.RingOperations.Companion.TIMES_OPERATION"]},{"name":"data class Binary(operation: String, left: MST, right: MST) : MST","description":"space.kscience.kmath.expressions.MST.Binary","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-binary/index.html","searchKeys":["Binary","data class Binary(operation: String, left: MST, right: MST) : MST","space.kscience.kmath.expressions.MST.Binary"]},{"name":"data class Numeric(value: Number) : MST","description":"space.kscience.kmath.expressions.MST.Numeric","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-numeric/index.html","searchKeys":["Numeric","data class Numeric(value: Number) : MST","space.kscience.kmath.expressions.MST.Numeric"]},{"name":"data class Unary(operation: String, value: MST) : MST","description":"space.kscience.kmath.expressions.MST.Unary","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-unary/index.html","searchKeys":["Unary","data class Unary(operation: String, value: MST) : MST","space.kscience.kmath.expressions.MST.Unary"]},{"name":"enum ValueFlag : Enum<ValueFlag> ","description":"space.kscience.kmath.structures.ValueFlag","location":"kmath-core/space.kscience.kmath.structures/-value-flag/index.html","searchKeys":["ValueFlag","enum ValueFlag : Enum<ValueFlag> ","space.kscience.kmath.structures.ValueFlag"]},{"name":"fun <A : Field<T>> BufferField(bufferFactory: BufferFactory<T>, elementAlgebra: A, size: Int)","description":"space.kscience.kmath.operations.BufferField.BufferField","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/-buffer-field.html","searchKeys":["BufferField","fun <A : Field<T>> BufferField(bufferFactory: BufferFactory<T>, elementAlgebra: A, size: Int)","space.kscience.kmath.operations.BufferField.BufferField"]},{"name":"fun <F : Feature<F>> of(features: Iterable<F>): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.Companion.of","location":"kmath-core/space.kscience.kmath.misc/-feature-set/-companion/of.html","searchKeys":["of","fun <F : Feature<F>> of(features: Iterable<F>): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.Companion.of"]},{"name":"fun <F : Feature<F>> of(vararg features: F): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.Companion.of","location":"kmath-core/space.kscience.kmath.misc/-feature-set/-companion/of.html","searchKeys":["of","fun <F : Feature<F>> of(vararg features: F): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.Companion.of"]},{"name":"fun <I : Any, A : ExtendedField<I>, ExpressionAlgebra<Double, I>> AutoDiffProcessor<Double, I, A>.chiSquaredExpression(x: Buffer<Double>, y: Buffer<Double>, yErr: Buffer<Double>, model: A.(I) -> I): DifferentiableExpression<Double>","description":"space.kscience.kmath.expressions.chiSquaredExpression","location":"kmath-core/space.kscience.kmath.expressions/chi-squared-expression.html","searchKeys":["chiSquaredExpression","fun <I : Any, A : ExtendedField<I>, ExpressionAlgebra<Double, I>> AutoDiffProcessor<Double, I, A>.chiSquaredExpression(x: Buffer<Double>, y: Buffer<Double>, yErr: Buffer<Double>, model: A.(I) -> I): DifferentiableExpression<Double>","space.kscience.kmath.expressions.chiSquaredExpression"]},{"name":"fun <R> derive(value: R, block: F.(R) -> Unit): R","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.derive","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/derive.html","searchKeys":["derive","fun <R> derive(value: R, block: F.(R) -> Unit): R","space.kscience.kmath.expressions.SimpleAutoDiffField.derive"]},{"name":"fun <T : Any, A : Ring<T>> LinearSpace<T, A>.matrix(rows: Int, columns: Int): MatrixBuilder<T, A>","description":"space.kscience.kmath.linear.matrix","location":"kmath-core/space.kscience.kmath.linear/matrix.html","searchKeys":["matrix","fun <T : Any, A : Ring<T>> LinearSpace<T, A>.matrix(rows: Int, columns: Int): MatrixBuilder<T, A>","space.kscience.kmath.linear.matrix"]},{"name":"fun <T : Any, A : Ring<T>> MatrixBuilder<T, A>.symmetric(builder: (i: Int, j: Int) -> T): Matrix<T>","description":"space.kscience.kmath.linear.symmetric","location":"kmath-core/space.kscience.kmath.linear/symmetric.html","searchKeys":["symmetric","fun <T : Any, A : Ring<T>> MatrixBuilder<T, A>.symmetric(builder: (i: Int, j: Int) -> T): Matrix<T>","space.kscience.kmath.linear.symmetric"]},{"name":"fun <T : Any, A : Ring<T>> buffered(algebra: A, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing): LinearSpace<T, A>","description":"space.kscience.kmath.linear.LinearSpace.Companion.buffered","location":"kmath-core/space.kscience.kmath.linear/-linear-space/-companion/buffered.html","searchKeys":["buffered","fun <T : Any, A : Ring<T>> buffered(algebra: A, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing): LinearSpace<T, A>","space.kscience.kmath.linear.LinearSpace.Companion.buffered"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffExtendedField(context: F, bindings: Map<Symbol, T>)","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.SimpleAutoDiffExtendedField","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/-simple-auto-diff-extended-field.html","searchKeys":["SimpleAutoDiffExtendedField","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffExtendedField(context: F, bindings: Map<Symbol, T>)","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.SimpleAutoDiffExtendedField"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.acos(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.acos","location":"kmath-core/space.kscience.kmath.expressions/acos.html","searchKeys":["acos","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.acos(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.acos"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.acosh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.acosh","location":"kmath-core/space.kscience.kmath.expressions/acosh.html","searchKeys":["acosh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.acosh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.acosh"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.asin(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.asin","location":"kmath-core/space.kscience.kmath.expressions/asin.html","searchKeys":["asin","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.asin(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.asin"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.asinh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.asinh","location":"kmath-core/space.kscience.kmath.expressions/asinh.html","searchKeys":["asinh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.asinh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.asinh"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.atan(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.atan","location":"kmath-core/space.kscience.kmath.expressions/atan.html","searchKeys":["atan","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.atan(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.atan"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.atanh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.atanh","location":"kmath-core/space.kscience.kmath.expressions/atanh.html","searchKeys":["atanh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.atanh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.atanh"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.cos(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.cos","location":"kmath-core/space.kscience.kmath.expressions/cos.html","searchKeys":["cos","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.cos(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.cos"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.cosh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.cosh","location":"kmath-core/space.kscience.kmath.expressions/cosh.html","searchKeys":["cosh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.cosh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.cosh"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.exp(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.exp","location":"kmath-core/space.kscience.kmath.expressions/exp.html","searchKeys":["exp","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.exp(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.exp"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.ln(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.ln","location":"kmath-core/space.kscience.kmath.expressions/ln.html","searchKeys":["ln","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.ln(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.ln"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.pow","location":"kmath-core/space.kscience.kmath.expressions/pow.html","searchKeys":["pow","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.pow"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: Double): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.pow","location":"kmath-core/space.kscience.kmath.expressions/pow.html","searchKeys":["pow","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: Double): AutoDiffValue<T>","space.kscience.kmath.expressions.pow"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: Int): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.pow","location":"kmath-core/space.kscience.kmath.expressions/pow.html","searchKeys":["pow","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.pow(x: AutoDiffValue<T>, y: Int): AutoDiffValue<T>","space.kscience.kmath.expressions.pow"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sin(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.sin","location":"kmath-core/space.kscience.kmath.expressions/sin.html","searchKeys":["sin","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sin(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.sin"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sinh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.sinh","location":"kmath-core/space.kscience.kmath.expressions/sinh.html","searchKeys":["sinh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sinh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.sinh"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sqr(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.sqr","location":"kmath-core/space.kscience.kmath.expressions/sqr.html","searchKeys":["sqr","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sqr(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.sqr"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sqrt(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.sqrt","location":"kmath-core/space.kscience.kmath.expressions/sqrt.html","searchKeys":["sqrt","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.sqrt(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.sqrt"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.tan(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.tan","location":"kmath-core/space.kscience.kmath.expressions/tan.html","searchKeys":["tan","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.tan(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.tan"]},{"name":"fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.tanh(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.tanh","location":"kmath-core/space.kscience.kmath.expressions/tanh.html","searchKeys":["tanh","fun <T : Any, F : ExtendedField<T>> SimpleAutoDiffField<T, F>.tanh(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.tanh"]},{"name":"fun <T : Any, F : Field<T>> F.simpleAutoDiff(bindings: Map<Symbol, T>, body: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>): DerivationResult<T>","description":"space.kscience.kmath.expressions.simpleAutoDiff","location":"kmath-core/space.kscience.kmath.expressions/simple-auto-diff.html","searchKeys":["simpleAutoDiff","fun <T : Any, F : Field<T>> F.simpleAutoDiff(bindings: Map<Symbol, T>, body: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>): DerivationResult<T>","space.kscience.kmath.expressions.simpleAutoDiff"]},{"name":"fun <T : Any, F : Field<T>> F.simpleAutoDiff(vararg bindings: Pair<Symbol, T>, body: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>): DerivationResult<T>","description":"space.kscience.kmath.expressions.simpleAutoDiff","location":"kmath-core/space.kscience.kmath.expressions/simple-auto-diff.html","searchKeys":["simpleAutoDiff","fun <T : Any, F : Field<T>> F.simpleAutoDiff(vararg bindings: Pair<Symbol, T>, body: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>): DerivationResult<T>","space.kscience.kmath.expressions.simpleAutoDiff"]},{"name":"fun <T : Any, F : Field<T>> SimpleAutoDiffExpression(field: F, function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>)","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression.SimpleAutoDiffExpression","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/-simple-auto-diff-expression.html","searchKeys":["SimpleAutoDiffExpression","fun <T : Any, F : Field<T>> SimpleAutoDiffExpression(field: F, function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>)","space.kscience.kmath.expressions.SimpleAutoDiffExpression.SimpleAutoDiffExpression"]},{"name":"fun <T : Any, F : Field<T>> SimpleAutoDiffField(context: F, bindings: Map<Symbol, T>)","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.SimpleAutoDiffField","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/-simple-auto-diff-field.html","searchKeys":["SimpleAutoDiffField","fun <T : Any, F : Field<T>> SimpleAutoDiffField(context: F, bindings: Map<Symbol, T>)","space.kscience.kmath.expressions.SimpleAutoDiffField.SimpleAutoDiffField"]},{"name":"fun <T : Any, F : Field<T>> simpleAutoDiff(field: F): AutoDiffProcessor<T, AutoDiffValue<T>, SimpleAutoDiffField<T, F>>","description":"space.kscience.kmath.expressions.simpleAutoDiff","location":"kmath-core/space.kscience.kmath.expressions/simple-auto-diff.html","searchKeys":["simpleAutoDiff","fun <T : Any, F : Field<T>> simpleAutoDiff(field: F): AutoDiffProcessor<T, AutoDiffValue<T>, SimpleAutoDiffField<T, F>>","space.kscience.kmath.expressions.simpleAutoDiff"]},{"name":"fun <T : Any, out A : Ring<T>> MatrixBuilder(linearSpace: LinearSpace<T, A>, rows: Int, columns: Int)","description":"space.kscience.kmath.linear.MatrixBuilder.MatrixBuilder","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/-matrix-builder.html","searchKeys":["MatrixBuilder","fun <T : Any, out A : Ring<T>> MatrixBuilder(linearSpace: LinearSpace<T, A>, rows: Int, columns: Int)","space.kscience.kmath.linear.MatrixBuilder.MatrixBuilder"]},{"name":"fun <T : Any> DerivationResult(value: T, derivativeValues: Map<String, T>, context: Field<T>)","description":"space.kscience.kmath.expressions.DerivationResult.DerivationResult","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/-derivation-result.html","searchKeys":["DerivationResult","fun <T : Any> DerivationResult(value: T, derivativeValues: Map<String, T>, context: Field<T>)","space.kscience.kmath.expressions.DerivationResult.DerivationResult"]},{"name":"fun <T : Any> DerivationResult<T>.grad(vararg variables: Symbol): Point<T>","description":"space.kscience.kmath.expressions.grad","location":"kmath-core/space.kscience.kmath.expressions/grad.html","searchKeys":["grad","fun <T : Any> DerivationResult<T>.grad(vararg variables: Symbol): Point<T>","space.kscience.kmath.expressions.grad"]},{"name":"fun <T : Any> DeterminantFeature(determinant: T): DeterminantFeature<T>","description":"space.kscience.kmath.linear.DeterminantFeature","location":"kmath-core/space.kscience.kmath.linear/-determinant-feature.html","searchKeys":["DeterminantFeature","fun <T : Any> DeterminantFeature(determinant: T): DeterminantFeature<T>","space.kscience.kmath.linear.DeterminantFeature"]},{"name":"fun <T : Any> LinearSpace<T, Ring<T>>.column(vararg values: T): Matrix<T>","description":"space.kscience.kmath.linear.column","location":"kmath-core/space.kscience.kmath.linear/column.html","searchKeys":["column","fun <T : Any> LinearSpace<T, Ring<T>>.column(vararg values: T): Matrix<T>","space.kscience.kmath.linear.column"]},{"name":"fun <T : Any> LinearSpace<T, Ring<T>>.one(rows: Int, columns: Int): Matrix<T>","description":"space.kscience.kmath.linear.one","location":"kmath-core/space.kscience.kmath.linear/one.html","searchKeys":["one","fun <T : Any> LinearSpace<T, Ring<T>>.one(rows: Int, columns: Int): Matrix<T>","space.kscience.kmath.linear.one"]},{"name":"fun <T : Any> LinearSpace<T, Ring<T>>.row(vararg values: T): Matrix<T>","description":"space.kscience.kmath.linear.row","location":"kmath-core/space.kscience.kmath.linear/row.html","searchKeys":["row","fun <T : Any> LinearSpace<T, Ring<T>>.row(vararg values: T): Matrix<T>","space.kscience.kmath.linear.row"]},{"name":"fun <T : Any> LinearSpace<T, Ring<T>>.vector(vararg elements: T): Point<T>","description":"space.kscience.kmath.linear.vector","location":"kmath-core/space.kscience.kmath.linear/vector.html","searchKeys":["vector","fun <T : Any> LinearSpace<T, Ring<T>>.vector(vararg elements: T): Point<T>","space.kscience.kmath.linear.vector"]},{"name":"fun <T : Any> LinearSpace<T, Ring<T>>.zero(rows: Int, columns: Int): Matrix<T>","description":"space.kscience.kmath.linear.zero","location":"kmath-core/space.kscience.kmath.linear/zero.html","searchKeys":["zero","fun <T : Any> LinearSpace<T, Ring<T>>.zero(rows: Int, columns: Int): Matrix<T>","space.kscience.kmath.linear.zero"]},{"name":"fun <T : Any> LupDecomposition(context: LinearSpace<T, *>, elementContext: Field<T>, lu: Matrix<T>, pivot: IntArray, even: Boolean)","description":"space.kscience.kmath.linear.LupDecomposition.LupDecomposition","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/-lup-decomposition.html","searchKeys":["LupDecomposition","fun <T : Any> LupDecomposition(context: LinearSpace<T, *>, elementContext: Field<T>, lu: Matrix<T>, pivot: IntArray, even: Boolean)","space.kscience.kmath.linear.LupDecomposition.LupDecomposition"]},{"name":"fun <T : Any> MST.toExpression(algebra: Algebra<T>): Expression<T>","description":"space.kscience.kmath.expressions.toExpression","location":"kmath-core/space.kscience.kmath.expressions/to-expression.html","searchKeys":["toExpression","fun <T : Any> MST.toExpression(algebra: Algebra<T>): Expression<T>","space.kscience.kmath.expressions.toExpression"]},{"name":"fun <T : Any> Matrix<T>.asVector(): Point<T>","description":"space.kscience.kmath.linear.asVector","location":"kmath-core/space.kscience.kmath.linear/as-vector.html","searchKeys":["asVector","fun <T : Any> Matrix<T>.asVector(): Point<T>","space.kscience.kmath.linear.asVector"]},{"name":"fun <T : Any> Matrix<T>.transpose(): Matrix<T>","description":"space.kscience.kmath.linear.transpose","location":"kmath-core/space.kscience.kmath.linear/transpose.html","searchKeys":["transpose","fun <T : Any> Matrix<T>.transpose(): Matrix<T>","space.kscience.kmath.linear.transpose"]},{"name":"fun <T : Any> Matrix<T>.withFeature(newFeature: MatrixFeature): MatrixWrapper<T>","description":"space.kscience.kmath.linear.withFeature","location":"kmath-core/space.kscience.kmath.linear/with-feature.html","searchKeys":["withFeature","fun <T : Any> Matrix<T>.withFeature(newFeature: MatrixFeature): MatrixWrapper<T>","space.kscience.kmath.linear.withFeature"]},{"name":"fun <T : Any> Matrix<T>.withFeatures(newFeatures: Iterable<MatrixFeature>): MatrixWrapper<T>","description":"space.kscience.kmath.linear.withFeatures","location":"kmath-core/space.kscience.kmath.linear/with-features.html","searchKeys":["withFeatures","fun <T : Any> Matrix<T>.withFeatures(newFeatures: Iterable<MatrixFeature>): MatrixWrapper<T>","space.kscience.kmath.linear.withFeatures"]},{"name":"fun <T : Any> MatrixBuilder<T, *>.virtual(generator: (i: Int, j: Int) -> T): VirtualMatrix<T>","description":"space.kscience.kmath.linear.virtual","location":"kmath-core/space.kscience.kmath.linear/virtual.html","searchKeys":["virtual","fun <T : Any> MatrixBuilder<T, *>.virtual(generator: (i: Int, j: Int) -> T): VirtualMatrix<T>","space.kscience.kmath.linear.virtual"]},{"name":"fun <T : Any> MemoryBuffer(memory: Memory, spec: MemorySpec<T>)","description":"space.kscience.kmath.structures.MemoryBuffer.MemoryBuffer","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/-memory-buffer.html","searchKeys":["MemoryBuffer","fun <T : Any> MemoryBuffer(memory: Memory, spec: MemorySpec<T>)","space.kscience.kmath.structures.MemoryBuffer.MemoryBuffer"]},{"name":"fun <T : Any> MutableMemoryBuffer(memory: Memory, spec: MemorySpec<T>)","description":"space.kscience.kmath.structures.MutableMemoryBuffer.MutableMemoryBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/-mutable-memory-buffer.html","searchKeys":["MutableMemoryBuffer","fun <T : Any> MutableMemoryBuffer(memory: Memory, spec: MemorySpec<T>)","space.kscience.kmath.structures.MutableMemoryBuffer.MutableMemoryBuffer"]},{"name":"fun <T : Any> Point<T>.asMatrix(): VirtualMatrix<T>","description":"space.kscience.kmath.linear.asMatrix","location":"kmath-core/space.kscience.kmath.linear/as-matrix.html","searchKeys":["asMatrix","fun <T : Any> Point<T>.asMatrix(): VirtualMatrix<T>","space.kscience.kmath.linear.asMatrix"]},{"name":"fun <T : Any> contentEquals(first: Buffer<T>, second: Buffer<T>): Boolean","description":"space.kscience.kmath.structures.Buffer.Companion.contentEquals","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/content-equals.html","searchKeys":["contentEquals","fun <T : Any> contentEquals(first: Buffer<T>, second: Buffer<T>): Boolean","space.kscience.kmath.structures.Buffer.Companion.contentEquals"]},{"name":"fun <T : Any> contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","description":"space.kscience.kmath.nd.StructureND.Companion.contentEquals","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/content-equals.html","searchKeys":["contentEquals","fun <T : Any> contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","space.kscience.kmath.nd.StructureND.Companion.contentEquals"]},{"name":"fun <T : Any> create(spec: MemorySpec<T>, size: Int): MemoryBuffer<T>","description":"space.kscience.kmath.structures.MemoryBuffer.Companion.create","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/-companion/create.html","searchKeys":["create","fun <T : Any> create(spec: MemorySpec<T>, size: Int): MemoryBuffer<T>","space.kscience.kmath.structures.MemoryBuffer.Companion.create"]},{"name":"fun <T : Any> create(spec: MemorySpec<T>, size: Int): MutableMemoryBuffer<T>","description":"space.kscience.kmath.structures.MutableMemoryBuffer.Companion.create","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/-companion/create.html","searchKeys":["create","fun <T : Any> create(spec: MemorySpec<T>, size: Int): MutableMemoryBuffer<T>","space.kscience.kmath.structures.MutableMemoryBuffer.Companion.create"]},{"name":"fun <T : Comparable<T>, F : Field<T>> LinearSpace<T, F>.lupSolver(bufferFactory: MutableBufferFactory<T>, singularityCheck: (T) -> Boolean): LinearSolver<T>","description":"space.kscience.kmath.linear.lupSolver","location":"kmath-core/space.kscience.kmath.linear/lup-solver.html","searchKeys":["lupSolver","fun <T : Comparable<T>, F : Field<T>> LinearSpace<T, F>.lupSolver(bufferFactory: MutableBufferFactory<T>, singularityCheck: (T) -> Boolean): LinearSolver<T>","space.kscience.kmath.linear.lupSolver"]},{"name":"fun <T : Comparable<T>, I : Any, A : ExtendedField<I>, ExpressionAlgebra<T, I>> AutoDiffProcessor<T, I, A>.chiSquaredExpression(x: Buffer<T>, y: Buffer<T>, yErr: Buffer<T>, model: A.(I) -> I): DifferentiableExpression<T>","description":"space.kscience.kmath.expressions.chiSquaredExpression","location":"kmath-core/space.kscience.kmath.expressions/chi-squared-expression.html","searchKeys":["chiSquaredExpression","fun <T : Comparable<T>, I : Any, A : ExtendedField<I>, ExpressionAlgebra<T, I>> AutoDiffProcessor<T, I, A>.chiSquaredExpression(x: Buffer<T>, y: Buffer<T>, yErr: Buffer<T>, model: A.(I) -> I): DifferentiableExpression<T>","space.kscience.kmath.expressions.chiSquaredExpression"]},{"name":"fun <T : Comparable<T>> AlgebraND<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","description":"space.kscience.kmath.nd.contentEquals","location":"kmath-core/space.kscience.kmath.nd/content-equals.html","searchKeys":["contentEquals","fun <T : Comparable<T>> AlgebraND<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","space.kscience.kmath.nd.contentEquals"]},{"name":"fun <T : Comparable<T>> GroupND<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>, absoluteTolerance: T): Boolean","description":"space.kscience.kmath.nd.contentEquals","location":"kmath-core/space.kscience.kmath.nd/content-equals.html","searchKeys":["contentEquals","fun <T : Comparable<T>> GroupND<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>, absoluteTolerance: T): Boolean","space.kscience.kmath.nd.contentEquals"]},{"name":"fun <T : Comparable<T>> LinearSpace<T, Field<T>>.lup(factory: MutableBufferFactory<T>, matrix: Matrix<T>, checkSingular: (T) -> Boolean): LupDecomposition<T>","description":"space.kscience.kmath.linear.lup","location":"kmath-core/space.kscience.kmath.linear/lup.html","searchKeys":["lup","fun <T : Comparable<T>> LinearSpace<T, Field<T>>.lup(factory: MutableBufferFactory<T>, matrix: Matrix<T>, checkSingular: (T) -> Boolean): LupDecomposition<T>","space.kscience.kmath.linear.lup"]},{"name":"fun <T : Comparable<T>> LinearSpace<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","description":"space.kscience.kmath.nd.contentEquals","location":"kmath-core/space.kscience.kmath.nd/content-equals.html","searchKeys":["contentEquals","fun <T : Comparable<T>> LinearSpace<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>): Boolean","space.kscience.kmath.nd.contentEquals"]},{"name":"fun <T : Comparable<T>> LinearSpace<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>, absoluteTolerance: T): Boolean","description":"space.kscience.kmath.nd.contentEquals","location":"kmath-core/space.kscience.kmath.nd/content-equals.html","searchKeys":["contentEquals","fun <T : Comparable<T>> LinearSpace<T, Ring<T>>.contentEquals(st1: StructureND<T>, st2: StructureND<T>, absoluteTolerance: T): Boolean","space.kscience.kmath.nd.contentEquals"]},{"name":"fun <T : Comparable<T>> Ring<T>.abs(value: T): T","description":"space.kscience.kmath.operations.abs","location":"kmath-core/space.kscience.kmath.operations/abs.html","searchKeys":["abs","fun <T : Comparable<T>> Ring<T>.abs(value: T): T","space.kscience.kmath.operations.abs"]},{"name":"fun <T : F> with(feature: T, type: FeatureKey<F> = feature.key): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.with","location":"kmath-core/space.kscience.kmath.misc/-feature-set/with.html","searchKeys":["with","fun <T : F> with(feature: T, type: FeatureKey<F> = feature.key): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.with"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.acosh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.acosh","location":"kmath-core/space.kscience.kmath.operations/acosh.html","searchKeys":["acosh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.acosh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.acosh"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.asinh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.asinh","location":"kmath-core/space.kscience.kmath.operations/asinh.html","searchKeys":["asinh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.asinh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.asinh"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.atanh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.atanh","location":"kmath-core/space.kscience.kmath.operations/atanh.html","searchKeys":["atanh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.atanh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.atanh"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.cosh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.cosh","location":"kmath-core/space.kscience.kmath.operations/cosh.html","searchKeys":["cosh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.cosh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.cosh"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.exp(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.exp","location":"kmath-core/space.kscience.kmath.operations/exp.html","searchKeys":["exp","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.exp(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.exp"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.ln(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.ln","location":"kmath-core/space.kscience.kmath.operations/ln.html","searchKeys":["ln","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.ln(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.ln"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.sinh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.sinh","location":"kmath-core/space.kscience.kmath.operations/sinh.html","searchKeys":["sinh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.sinh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.sinh"]},{"name":"fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.tanh(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.tanh","location":"kmath-core/space.kscience.kmath.operations/tanh.html","searchKeys":["tanh","fun <T, A : ExponentialOperations<T>> BufferAlgebra<T, A>.tanh(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.tanh"]},{"name":"fun <T, A : Field<T>> A.bufferAlgebra(bufferFactory: BufferFactory<T>, size: Int): BufferField<T, A>","description":"space.kscience.kmath.operations.bufferAlgebra","location":"kmath-core/space.kscience.kmath.operations/buffer-algebra.html","searchKeys":["bufferAlgebra","fun <T, A : Field<T>> A.bufferAlgebra(bufferFactory: BufferFactory<T>, size: Int): BufferField<T, A>","space.kscience.kmath.operations.bufferAlgebra"]},{"name":"fun <T, A : Field<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedFieldND<T, A>","description":"space.kscience.kmath.nd.ndAlgebra","location":"kmath-core/space.kscience.kmath.nd/nd-algebra.html","searchKeys":["ndAlgebra","fun <T, A : Field<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedFieldND<T, A>","space.kscience.kmath.nd.ndAlgebra"]},{"name":"fun <T, A : Group<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedGroupND<T, A>","description":"space.kscience.kmath.nd.ndAlgebra","location":"kmath-core/space.kscience.kmath.nd/nd-algebra.html","searchKeys":["ndAlgebra","fun <T, A : Group<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedGroupND<T, A>","space.kscience.kmath.nd.ndAlgebra"]},{"name":"fun <T, A : PowerOperations<T>> BufferAlgebra<T, A>.pow(arg: Buffer<T>, pow: Number): Buffer<T>","description":"space.kscience.kmath.operations.pow","location":"kmath-core/space.kscience.kmath.operations/pow.html","searchKeys":["pow","fun <T, A : PowerOperations<T>> BufferAlgebra<T, A>.pow(arg: Buffer<T>, pow: Number): Buffer<T>","space.kscience.kmath.operations.pow"]},{"name":"fun <T, A : Ring<T>> A.linearSpace(bufferFactory: BufferFactory<T>): BufferedLinearSpace<T, A>","description":"space.kscience.kmath.linear.linearSpace","location":"kmath-core/space.kscience.kmath.linear/linear-space.html","searchKeys":["linearSpace","fun <T, A : Ring<T>> A.linearSpace(bufferFactory: BufferFactory<T>): BufferedLinearSpace<T, A>","space.kscience.kmath.linear.linearSpace"]},{"name":"fun <T, A : Ring<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedRingND<T, A>","description":"space.kscience.kmath.nd.ndAlgebra","location":"kmath-core/space.kscience.kmath.nd/nd-algebra.html","searchKeys":["ndAlgebra","fun <T, A : Ring<T>> A.ndAlgebra(bufferFactory: BufferFactory<T>, vararg shape: Int): BufferedRingND<T, A>","space.kscience.kmath.nd.ndAlgebra"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.acos(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.acos","location":"kmath-core/space.kscience.kmath.operations/acos.html","searchKeys":["acos","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.acos(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.acos"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.asin(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.asin","location":"kmath-core/space.kscience.kmath.operations/asin.html","searchKeys":["asin","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.asin(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.asin"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.atan(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.atan","location":"kmath-core/space.kscience.kmath.operations/atan.html","searchKeys":["atan","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.atan(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.atan"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.cos(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.cos","location":"kmath-core/space.kscience.kmath.operations/cos.html","searchKeys":["cos","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.cos(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.cos"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.sin(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.sin","location":"kmath-core/space.kscience.kmath.operations/sin.html","searchKeys":["sin","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.sin(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.sin"]},{"name":"fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.tan(arg: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.tan","location":"kmath-core/space.kscience.kmath.operations/tan.html","searchKeys":["tan","fun <T, A : TrigonometricOperations<T>> BufferAlgebra<T, A>.tan(arg: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.tan"]},{"name":"fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(name: String): R","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(name: String): R","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(symbols: List<Symbol>): R","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(symbols: List<Symbol>): R","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(vararg symbols: Symbol): R","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T, R : Expression<T>> SpecialDifferentiableExpression<T, R>.derivative(vararg symbols: Symbol): R","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T, S : Ring<T>, ScaleOperations<T>> Iterable<T>.averageWith(space: S): T","description":"space.kscience.kmath.operations.averageWith","location":"kmath-core/space.kscience.kmath.operations/average-with.html","searchKeys":["averageWith","fun <T, S : Ring<T>, ScaleOperations<T>> Iterable<T>.averageWith(space: S): T","space.kscience.kmath.operations.averageWith"]},{"name":"fun <T, S : Ring<T>, ScaleOperations<T>> S.average(data: Iterable<T>): T","description":"space.kscience.kmath.operations.average","location":"kmath-core/space.kscience.kmath.operations/average.html","searchKeys":["average","fun <T, S : Ring<T>, ScaleOperations<T>> S.average(data: Iterable<T>): T","space.kscience.kmath.operations.average"]},{"name":"fun <T, S : Ring<T>, ScaleOperations<T>> S.average(data: Sequence<T>): T","description":"space.kscience.kmath.operations.average","location":"kmath-core/space.kscience.kmath.operations/average.html","searchKeys":["average","fun <T, S : Ring<T>, ScaleOperations<T>> S.average(data: Sequence<T>): T","space.kscience.kmath.operations.average"]},{"name":"fun <T, S : Ring<T>, ScaleOperations<T>> Sequence<T>.averageWith(space: S): T","description":"space.kscience.kmath.operations.averageWith","location":"kmath-core/space.kscience.kmath.operations/average-with.html","searchKeys":["averageWith","fun <T, S : Ring<T>, ScaleOperations<T>> Sequence<T>.averageWith(space: S): T","space.kscience.kmath.operations.averageWith"]},{"name":"fun <T, X : T, Y : T> of(x: Buffer<X>, y: Buffer<Y>): XYColumnarData<T, X, Y>","description":"space.kscience.kmath.data.XYColumnarData.Companion.of","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/-companion/of.html","searchKeys":["of","fun <T, X : T, Y : T> of(x: Buffer<X>, y: Buffer<Y>): XYColumnarData<T, X, Y>","space.kscience.kmath.data.XYColumnarData.Companion.of"]},{"name":"fun <T, X : T, Y : T> of(x: Buffer<X>, y: Buffer<Y>, yErr: Buffer<Y>): XYErrorColumnarData<T, X, Y>","description":"space.kscience.kmath.data.XYErrorColumnarData.Companion.of","location":"kmath-core/space.kscience.kmath.data/-x-y-error-columnar-data/-companion/of.html","searchKeys":["of","fun <T, X : T, Y : T> of(x: Buffer<X>, y: Buffer<Y>, yErr: Buffer<Y>): XYErrorColumnarData<T, X, Y>","space.kscience.kmath.data.XYErrorColumnarData.Companion.of"]},{"name":"fun <T> Algebra<T>.bindSymbol(symbol: Symbol): T","description":"space.kscience.kmath.operations.bindSymbol","location":"kmath-core/space.kscience.kmath.operations/bind-symbol.html","searchKeys":["bindSymbol","fun <T> Algebra<T>.bindSymbol(symbol: Symbol): T","space.kscience.kmath.operations.bindSymbol"]},{"name":"fun <T> Algebra<T>.bindSymbolOrNull(symbol: Symbol): T?","description":"space.kscience.kmath.operations.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.operations/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","fun <T> Algebra<T>.bindSymbolOrNull(symbol: Symbol): T?","space.kscience.kmath.operations.bindSymbolOrNull"]},{"name":"fun <T> Algebra<T>.evaluate(node: MST): T","description":"space.kscience.kmath.expressions.evaluate","location":"kmath-core/space.kscience.kmath.expressions/evaluate.html","searchKeys":["evaluate","fun <T> Algebra<T>.evaluate(node: MST): T","space.kscience.kmath.expressions.evaluate"]},{"name":"fun <T> Array<T>.asBuffer(): ArrayBuffer<T>","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun <T> Array<T>.asBuffer(): ArrayBuffer<T>","space.kscience.kmath.structures.asBuffer"]},{"name":"fun <T> ArrayBuffer(array: Array<T>)","description":"space.kscience.kmath.structures.ArrayBuffer.ArrayBuffer","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/-array-buffer.html","searchKeys":["ArrayBuffer","fun <T> ArrayBuffer(array: Array<T>)","space.kscience.kmath.structures.ArrayBuffer.ArrayBuffer"]},{"name":"fun <T> Buffer<T>.asIterable(): Iterable<T>","description":"space.kscience.kmath.operations.asIterable","location":"kmath-core/space.kscience.kmath.operations/as-iterable.html","searchKeys":["asIterable","fun <T> Buffer<T>.asIterable(): Iterable<T>","space.kscience.kmath.operations.asIterable"]},{"name":"fun <T> Buffer<T>.asND(): Structure1D<T>","description":"space.kscience.kmath.nd.asND","location":"kmath-core/space.kscience.kmath.nd/as-n-d.html","searchKeys":["asND","fun <T> Buffer<T>.asND(): Structure1D<T>","space.kscience.kmath.nd.asND"]},{"name":"fun <T> Buffer<T>.asReadOnly(): Buffer<T>","description":"space.kscience.kmath.structures.asReadOnly","location":"kmath-core/space.kscience.kmath.structures/as-read-only.html","searchKeys":["asReadOnly","fun <T> Buffer<T>.asReadOnly(): Buffer<T>","space.kscience.kmath.structures.asReadOnly"]},{"name":"fun <T> Buffer<T>.asSequence(): Sequence<T>","description":"space.kscience.kmath.operations.asSequence","location":"kmath-core/space.kscience.kmath.operations/as-sequence.html","searchKeys":["asSequence","fun <T> Buffer<T>.asSequence(): Sequence<T>","space.kscience.kmath.operations.asSequence"]},{"name":"fun <T> Buffer<T>.toList(): List<T>","description":"space.kscience.kmath.operations.toList","location":"kmath-core/space.kscience.kmath.operations/to-list.html","searchKeys":["toList","fun <T> Buffer<T>.toList(): List<T>","space.kscience.kmath.operations.toList"]},{"name":"fun <T> Buffer<T>.toMutableList(): MutableList<T>","description":"space.kscience.kmath.operations.toMutableList","location":"kmath-core/space.kscience.kmath.operations/to-mutable-list.html","searchKeys":["toMutableList","fun <T> Buffer<T>.toMutableList(): MutableList<T>","space.kscience.kmath.operations.toMutableList"]},{"name":"fun <T> BufferField<T, *>.buffer(initializer: (Int) -> T): Buffer<T>","description":"space.kscience.kmath.operations.buffer","location":"kmath-core/space.kscience.kmath.operations/buffer.html","searchKeys":["buffer","fun <T> BufferField<T, *>.buffer(initializer: (Int) -> T): Buffer<T>","space.kscience.kmath.operations.buffer"]},{"name":"fun <T> ColumnarData<T>.asXYData(xSymbol: Symbol, ySymbol: Symbol): XYColumnarData<T, T, T>","description":"space.kscience.kmath.data.asXYData","location":"kmath-core/space.kscience.kmath.data/as-x-y-data.html","searchKeys":["asXYData","fun <T> ColumnarData<T>.asXYData(xSymbol: Symbol, ySymbol: Symbol): XYColumnarData<T, T, T>","space.kscience.kmath.data.asXYData"]},{"name":"fun <T> DifferentiableExpression<T>.derivative(name: String): Expression<T>","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T> DifferentiableExpression<T>.derivative(name: String): Expression<T>","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T> DifferentiableExpression<T>.derivative(symbols: List<Symbol>): Expression<T>","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T> DifferentiableExpression<T>.derivative(symbols: List<Symbol>): Expression<T>","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T> DifferentiableExpression<T>.derivative(vararg symbols: Symbol): Expression<T>","description":"space.kscience.kmath.expressions.derivative","location":"kmath-core/space.kscience.kmath.expressions/derivative.html","searchKeys":["derivative","fun <T> DifferentiableExpression<T>.derivative(vararg symbols: Symbol): Expression<T>","space.kscience.kmath.expressions.derivative"]},{"name":"fun <T> Field<T>.power(arg: T, exponent: Int): T","description":"space.kscience.kmath.operations.power","location":"kmath-core/space.kscience.kmath.operations/power.html","searchKeys":["power","fun <T> Field<T>.power(arg: T, exponent: Int): T","space.kscience.kmath.operations.power"]},{"name":"fun <T> Iterable<T>.cumulativeSum(group: Ring<T>): Iterable<T>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun <T> Iterable<T>.cumulativeSum(group: Ring<T>): Iterable<T>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun <T> Iterable<T>.sumWith(group: Ring<T>): T","description":"space.kscience.kmath.operations.sumWith","location":"kmath-core/space.kscience.kmath.operations/sum-with.html","searchKeys":["sumWith","fun <T> Iterable<T>.sumWith(group: Ring<T>): T","space.kscience.kmath.operations.sumWith"]},{"name":"fun <T> List<T>.asBuffer(): ListBuffer<T>","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun <T> List<T>.asBuffer(): ListBuffer<T>","space.kscience.kmath.structures.asBuffer"]},{"name":"fun <T> List<T>.cumulativeSum(group: Ring<T>): List<T>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun <T> List<T>.cumulativeSum(group: Ring<T>): List<T>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun <T> ListBuffer(list: List<T>)","description":"space.kscience.kmath.structures.ListBuffer.ListBuffer","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/-list-buffer.html","searchKeys":["ListBuffer","fun <T> ListBuffer(list: List<T>)","space.kscience.kmath.structures.ListBuffer.ListBuffer"]},{"name":"fun <T> ListBuffer(size: Int, initializer: (Int) -> T)","description":"space.kscience.kmath.structures.ListBuffer.ListBuffer","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/-list-buffer.html","searchKeys":["ListBuffer","fun <T> ListBuffer(size: Int, initializer: (Int) -> T)","space.kscience.kmath.structures.ListBuffer.ListBuffer"]},{"name":"fun <T> MST.interpret(algebra: Algebra<T>, arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.expressions.interpret","location":"kmath-core/space.kscience.kmath.expressions/interpret.html","searchKeys":["interpret","fun <T> MST.interpret(algebra: Algebra<T>, arguments: Map<Symbol, T>): T","space.kscience.kmath.expressions.interpret"]},{"name":"fun <T> MST.interpret(algebra: Algebra<T>, vararg arguments: Pair<Symbol, T>): T","description":"space.kscience.kmath.expressions.interpret","location":"kmath-core/space.kscience.kmath.expressions/interpret.html","searchKeys":["interpret","fun <T> MST.interpret(algebra: Algebra<T>, vararg arguments: Pair<Symbol, T>): T","space.kscience.kmath.expressions.interpret"]},{"name":"fun <T> MutableBufferND(strides: Strides, mutableBuffer: MutableBuffer<T>)","description":"space.kscience.kmath.nd.MutableBufferND.MutableBufferND","location":"kmath-core/space.kscience.kmath.nd/-mutable-buffer-n-d/-mutable-buffer-n-d.html","searchKeys":["MutableBufferND","fun <T> MutableBufferND(strides: Strides, mutableBuffer: MutableBuffer<T>)","space.kscience.kmath.nd.MutableBufferND.MutableBufferND"]},{"name":"fun <T> MutableList<T>.asMutableBuffer(): MutableListBuffer<T>","description":"space.kscience.kmath.structures.asMutableBuffer","location":"kmath-core/space.kscience.kmath.structures/as-mutable-buffer.html","searchKeys":["asMutableBuffer","fun <T> MutableList<T>.asMutableBuffer(): MutableListBuffer<T>","space.kscience.kmath.structures.asMutableBuffer"]},{"name":"fun <T> MutableListBuffer(list: MutableList<T>)","description":"space.kscience.kmath.structures.MutableListBuffer.MutableListBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/-mutable-list-buffer.html","searchKeys":["MutableListBuffer","fun <T> MutableListBuffer(list: MutableList<T>)","space.kscience.kmath.structures.MutableListBuffer.MutableListBuffer"]},{"name":"fun <T> MutableListBuffer(size: Int, initializer: (Int) -> T)","description":"space.kscience.kmath.structures.MutableListBuffer.MutableListBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/-mutable-list-buffer.html","searchKeys":["MutableListBuffer","fun <T> MutableListBuffer(size: Int, initializer: (Int) -> T)","space.kscience.kmath.structures.MutableListBuffer.MutableListBuffer"]},{"name":"fun <T> MutableStructureND<T>.as1D(): MutableStructure1D<T>","description":"space.kscience.kmath.nd.as1D","location":"kmath-core/space.kscience.kmath.nd/as1-d.html","searchKeys":["as1D","fun <T> MutableStructureND<T>.as1D(): MutableStructure1D<T>","space.kscience.kmath.nd.as1D"]},{"name":"fun <T> MutableStructureND<T>.as2D(): MutableStructure2D<T>","description":"space.kscience.kmath.nd.as2D","location":"kmath-core/space.kscience.kmath.nd/as2-d.html","searchKeys":["as2D","fun <T> MutableStructureND<T>.as2D(): MutableStructure2D<T>","space.kscience.kmath.nd.as2D"]},{"name":"fun <T> ReadOnlyBuffer(buffer: MutableBuffer<T>)","description":"space.kscience.kmath.structures.ReadOnlyBuffer.ReadOnlyBuffer","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/-read-only-buffer.html","searchKeys":["ReadOnlyBuffer","fun <T> ReadOnlyBuffer(buffer: MutableBuffer<T>)","space.kscience.kmath.structures.ReadOnlyBuffer.ReadOnlyBuffer"]},{"name":"fun <T> Ring<T>.power(arg: T, exponent: UInt): T","description":"space.kscience.kmath.operations.power","location":"kmath-core/space.kscience.kmath.operations/power.html","searchKeys":["power","fun <T> Ring<T>.power(arg: T, exponent: UInt): T","space.kscience.kmath.operations.power"]},{"name":"fun <T> Ring<T>.sum(data: Iterable<T>): T","description":"space.kscience.kmath.operations.sum","location":"kmath-core/space.kscience.kmath.operations/sum.html","searchKeys":["sum","fun <T> Ring<T>.sum(data: Iterable<T>): T","space.kscience.kmath.operations.sum"]},{"name":"fun <T> Ring<T>.sum(data: Sequence<T>): T","description":"space.kscience.kmath.operations.sum","location":"kmath-core/space.kscience.kmath.operations/sum.html","searchKeys":["sum","fun <T> Ring<T>.sum(data: Sequence<T>): T","space.kscience.kmath.operations.sum"]},{"name":"fun <T> Sequence<T>.cumulativeSum(group: Ring<T>): Sequence<T>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun <T> Sequence<T>.cumulativeSum(group: Ring<T>): Sequence<T>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun <T> Sequence<T>.sumWith(group: Ring<T>): T","description":"space.kscience.kmath.operations.sumWith","location":"kmath-core/space.kscience.kmath.operations/sum-with.html","searchKeys":["sumWith","fun <T> Sequence<T>.sumWith(group: Ring<T>): T","space.kscience.kmath.operations.sumWith"]},{"name":"fun <T> Structure2D<T>.asColumnarData(mapping: Map<Symbol, Int>): ColumnarData<T>","description":"space.kscience.kmath.data.asColumnarData","location":"kmath-core/space.kscience.kmath.data/as-columnar-data.html","searchKeys":["asColumnarData","fun <T> Structure2D<T>.asColumnarData(mapping: Map<Symbol, Int>): ColumnarData<T>","space.kscience.kmath.data.asColumnarData"]},{"name":"fun <T> Structure2D<T>.asXYData(xIndex: Int = 0, yIndex: Int = 1): XYColumnarData<T, T, T>","description":"space.kscience.kmath.data.asXYData","location":"kmath-core/space.kscience.kmath.data/as-x-y-data.html","searchKeys":["asXYData","fun <T> Structure2D<T>.asXYData(xIndex: Int = 0, yIndex: Int = 1): XYColumnarData<T, T, T>","space.kscience.kmath.data.asXYData"]},{"name":"fun <T> StructureND<T>.as1D(): Structure1D<T>","description":"space.kscience.kmath.nd.as1D","location":"kmath-core/space.kscience.kmath.nd/as1-d.html","searchKeys":["as1D","fun <T> StructureND<T>.as1D(): Structure1D<T>","space.kscience.kmath.nd.as1D"]},{"name":"fun <T> StructureND<T>.as2D(): Structure2D<T>","description":"space.kscience.kmath.nd.as2D","location":"kmath-core/space.kscience.kmath.nd/as2-d.html","searchKeys":["as2D","fun <T> StructureND<T>.as2D(): Structure2D<T>","space.kscience.kmath.nd.as2D"]},{"name":"fun <T> buffered(shape: IntArray, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing, initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.buffered","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/buffered.html","searchKeys":["buffered","fun <T> buffered(shape: IntArray, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing, initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.buffered"]},{"name":"fun <T> buffered(strides: Strides, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing, initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.buffered","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/buffered.html","searchKeys":["buffered","fun <T> buffered(strides: Strides, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing, initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.buffered"]},{"name":"fun <out A : Algebra<T>> FunctionalExpressionAlgebra(algebra: A)","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.FunctionalExpressionAlgebra","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/-functional-expression-algebra.html","searchKeys":["FunctionalExpressionAlgebra","fun <out A : Algebra<T>> FunctionalExpressionAlgebra(algebra: A)","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.FunctionalExpressionAlgebra"]},{"name":"fun <out A : ExtendedField<T>> FunctionalExpressionExtendedField(algebra: A)","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.FunctionalExpressionExtendedField","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/-functional-expression-extended-field.html","searchKeys":["FunctionalExpressionExtendedField","fun <out A : ExtendedField<T>> FunctionalExpressionExtendedField(algebra: A)","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.FunctionalExpressionExtendedField"]},{"name":"fun <out A : Field<T>> FunctionalExpressionField(algebra: A)","description":"space.kscience.kmath.expressions.FunctionalExpressionField.FunctionalExpressionField","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/-functional-expression-field.html","searchKeys":["FunctionalExpressionField","fun <out A : Field<T>> FunctionalExpressionField(algebra: A)","space.kscience.kmath.expressions.FunctionalExpressionField.FunctionalExpressionField"]},{"name":"fun <out A : Group<T>> BufferedGroupND(shape: IntArray, elementContext: A, bufferFactory: BufferFactory<T>)","description":"space.kscience.kmath.nd.BufferedGroupND.BufferedGroupND","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/-buffered-group-n-d.html","searchKeys":["BufferedGroupND","fun <out A : Group<T>> BufferedGroupND(shape: IntArray, elementContext: A, bufferFactory: BufferFactory<T>)","space.kscience.kmath.nd.BufferedGroupND.BufferedGroupND"]},{"name":"fun <out A : Group<T>> FunctionalExpressionGroup(algebra: A)","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.FunctionalExpressionGroup","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/-functional-expression-group.html","searchKeys":["FunctionalExpressionGroup","fun <out A : Group<T>> FunctionalExpressionGroup(algebra: A)","space.kscience.kmath.expressions.FunctionalExpressionGroup.FunctionalExpressionGroup"]},{"name":"fun <out A : Ring<T>> BufferedLinearSpace(elementAlgebra: A, bufferFactory: BufferFactory<T>)","description":"space.kscience.kmath.linear.BufferedLinearSpace.BufferedLinearSpace","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/-buffered-linear-space.html","searchKeys":["BufferedLinearSpace","fun <out A : Ring<T>> BufferedLinearSpace(elementAlgebra: A, bufferFactory: BufferFactory<T>)","space.kscience.kmath.linear.BufferedLinearSpace.BufferedLinearSpace"]},{"name":"fun <out A : Ring<T>> FunctionalExpressionRing(algebra: A)","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.FunctionalExpressionRing","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/-functional-expression-ring.html","searchKeys":["FunctionalExpressionRing","fun <out A : Ring<T>> FunctionalExpressionRing(algebra: A)","space.kscience.kmath.expressions.FunctionalExpressionRing.FunctionalExpressionRing"]},{"name":"fun <out R : Field<T>> BufferedFieldND(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>)","description":"space.kscience.kmath.nd.BufferedFieldND.BufferedFieldND","location":"kmath-core/space.kscience.kmath.nd/-buffered-field-n-d/-buffered-field-n-d.html","searchKeys":["BufferedFieldND","fun <out R : Field<T>> BufferedFieldND(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>)","space.kscience.kmath.nd.BufferedFieldND.BufferedFieldND"]},{"name":"fun <out R : Ring<T>> BufferedRingND(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>)","description":"space.kscience.kmath.nd.BufferedRingND.BufferedRingND","location":"kmath-core/space.kscience.kmath.nd/-buffered-ring-n-d/-buffered-ring-n-d.html","searchKeys":["BufferedRingND","fun <out R : Ring<T>> BufferedRingND(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>)","space.kscience.kmath.nd.BufferedRingND.BufferedRingND"]},{"name":"fun <out T : Any> VirtualMatrix(rowNum: Int, colNum: Int, generator: (i: Int, j: Int) -> T)","description":"space.kscience.kmath.linear.VirtualMatrix.VirtualMatrix","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/-virtual-matrix.html","searchKeys":["VirtualMatrix","fun <out T : Any> VirtualMatrix(rowNum: Int, colNum: Int, generator: (i: Int, j: Int) -> T)","space.kscience.kmath.linear.VirtualMatrix.VirtualMatrix"]},{"name":"fun <out T> AutoDiffValue(value: T)","description":"space.kscience.kmath.expressions.AutoDiffValue.AutoDiffValue","location":"kmath-core/space.kscience.kmath.expressions/-auto-diff-value/-auto-diff-value.html","searchKeys":["AutoDiffValue","fun <out T> AutoDiffValue(value: T)","space.kscience.kmath.expressions.AutoDiffValue.AutoDiffValue"]},{"name":"fun <out T> BufferND(strides: Strides, buffer: Buffer<T>)","description":"space.kscience.kmath.nd.BufferND.BufferND","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/-buffer-n-d.html","searchKeys":["BufferND","fun <out T> BufferND(strides: Strides, buffer: Buffer<T>)","space.kscience.kmath.nd.BufferND.BufferND"]},{"name":"fun <out T> VirtualBuffer(size: Int, generator: (Int) -> T)","description":"space.kscience.kmath.structures.VirtualBuffer.VirtualBuffer","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/-virtual-buffer.html","searchKeys":["VirtualBuffer","fun <out T> VirtualBuffer(size: Int, generator: (Int) -> T)","space.kscience.kmath.structures.VirtualBuffer.VirtualBuffer"]},{"name":"fun BigIntField.nd(vararg shape: Int): BufferedRingND<BigInt, BigIntField>","description":"space.kscience.kmath.operations.nd","location":"kmath-core/space.kscience.kmath.operations/nd.html","searchKeys":["nd","fun BigIntField.nd(vararg shape: Int): BufferedRingND<BigInt, BigIntField>","space.kscience.kmath.operations.nd"]},{"name":"fun Binary(operation: String, left: MST, right: MST)","description":"space.kscience.kmath.expressions.MST.Binary.Binary","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-binary/-binary.html","searchKeys":["Binary","fun Binary(operation: String, left: MST, right: MST)","space.kscience.kmath.expressions.MST.Binary.Binary"]},{"name":"fun Buffer<Double>.toDoubleArray(): DoubleArray","description":"space.kscience.kmath.structures.toDoubleArray","location":"kmath-core/space.kscience.kmath.structures/to-double-array.html","searchKeys":["toDoubleArray","fun Buffer<Double>.toDoubleArray(): DoubleArray","space.kscience.kmath.structures.toDoubleArray"]},{"name":"fun Buffer<Float>.toFloatArray(): FloatArray","description":"space.kscience.kmath.structures.toFloatArray","location":"kmath-core/space.kscience.kmath.structures/to-float-array.html","searchKeys":["toFloatArray","fun Buffer<Float>.toFloatArray(): FloatArray","space.kscience.kmath.structures.toFloatArray"]},{"name":"fun Buffer<Int>.toIntArray(): IntArray","description":"space.kscience.kmath.structures.toIntArray","location":"kmath-core/space.kscience.kmath.structures/to-int-array.html","searchKeys":["toIntArray","fun Buffer<Int>.toIntArray(): IntArray","space.kscience.kmath.structures.toIntArray"]},{"name":"fun Buffer<Long>.toLongArray(): LongArray","description":"space.kscience.kmath.structures.toLongArray","location":"kmath-core/space.kscience.kmath.structures/to-long-array.html","searchKeys":["toLongArray","fun Buffer<Long>.toLongArray(): LongArray","space.kscience.kmath.structures.toLongArray"]},{"name":"fun Buffer<Short>.toShortArray(): ShortArray","description":"space.kscience.kmath.structures.toShortArray","location":"kmath-core/space.kscience.kmath.structures/to-short-array.html","searchKeys":["toShortArray","fun Buffer<Short>.toShortArray(): ShortArray","space.kscience.kmath.structures.toShortArray"]},{"name":"fun BufferField<Double, *>.buffer(vararg elements: Number): Buffer<Double>","description":"space.kscience.kmath.operations.buffer","location":"kmath-core/space.kscience.kmath.operations/buffer.html","searchKeys":["buffer","fun BufferField<Double, *>.buffer(vararg elements: Number): Buffer<Double>","space.kscience.kmath.operations.buffer"]},{"name":"fun DoubleArray.asBuffer(): DoubleBuffer","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun DoubleArray.asBuffer(): DoubleBuffer","space.kscience.kmath.structures.asBuffer"]},{"name":"fun DoubleBuffer(array: DoubleArray)","description":"space.kscience.kmath.structures.DoubleBuffer.DoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/-double-buffer.html","searchKeys":["DoubleBuffer","fun DoubleBuffer(array: DoubleArray)","space.kscience.kmath.structures.DoubleBuffer.DoubleBuffer"]},{"name":"fun DoubleBuffer(vararg doubles: Double): DoubleBuffer","description":"space.kscience.kmath.structures.DoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-double-buffer.html","searchKeys":["DoubleBuffer","fun DoubleBuffer(vararg doubles: Double): DoubleBuffer","space.kscience.kmath.structures.DoubleBuffer"]},{"name":"fun DoubleBuffer.contentEquals(vararg doubles: Double): Boolean","description":"space.kscience.kmath.structures.contentEquals","location":"kmath-core/space.kscience.kmath.structures/content-equals.html","searchKeys":["contentEquals","fun DoubleBuffer.contentEquals(vararg doubles: Double): Boolean","space.kscience.kmath.structures.contentEquals"]},{"name":"fun DoubleBufferField(size: Int)","description":"space.kscience.kmath.operations.DoubleBufferField.DoubleBufferField","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/-double-buffer-field.html","searchKeys":["DoubleBufferField","fun DoubleBufferField(size: Int)","space.kscience.kmath.operations.DoubleBufferField.DoubleBufferField"]},{"name":"fun DoubleBufferOperations()","description":"space.kscience.kmath.operations.DoubleBufferOperations.DoubleBufferOperations","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/-double-buffer-operations.html","searchKeys":["DoubleBufferOperations","fun DoubleBufferOperations()","space.kscience.kmath.operations.DoubleBufferOperations.DoubleBufferOperations"]},{"name":"fun DoubleField.bufferAlgebra(size: Int): BufferField<Double, DoubleField>","description":"space.kscience.kmath.operations.bufferAlgebra","location":"kmath-core/space.kscience.kmath.operations/buffer-algebra.html","searchKeys":["bufferAlgebra","fun DoubleField.bufferAlgebra(size: Int): BufferField<Double, DoubleField>","space.kscience.kmath.operations.bufferAlgebra"]},{"name":"fun DoubleField.ndAlgebra(vararg shape: Int): DoubleFieldND","description":"space.kscience.kmath.nd.ndAlgebra","location":"kmath-core/space.kscience.kmath.nd/nd-algebra.html","searchKeys":["ndAlgebra","fun DoubleField.ndAlgebra(vararg shape: Int): DoubleFieldND","space.kscience.kmath.nd.ndAlgebra"]},{"name":"fun DoubleFieldND(shape: IntArray)","description":"space.kscience.kmath.nd.DoubleFieldND.DoubleFieldND","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/-double-field-n-d.html","searchKeys":["DoubleFieldND","fun DoubleFieldND(shape: IntArray)","space.kscience.kmath.nd.DoubleFieldND.DoubleFieldND"]},{"name":"fun FirstDerivativeExpression()","description":"space.kscience.kmath.expressions.FirstDerivativeExpression.FirstDerivativeExpression","location":"kmath-core/space.kscience.kmath.expressions/-first-derivative-expression/-first-derivative-expression.html","searchKeys":["FirstDerivativeExpression","fun FirstDerivativeExpression()","space.kscience.kmath.expressions.FirstDerivativeExpression.FirstDerivativeExpression"]},{"name":"fun FlaggedBuffer<*>.hasFlag(index: Int, flag: ValueFlag): Boolean","description":"space.kscience.kmath.structures.hasFlag","location":"kmath-core/space.kscience.kmath.structures/has-flag.html","searchKeys":["hasFlag","fun FlaggedBuffer<*>.hasFlag(index: Int, flag: ValueFlag): Boolean","space.kscience.kmath.structures.hasFlag"]},{"name":"fun FlaggedBuffer<*>.isMissing(index: Int): Boolean","description":"space.kscience.kmath.structures.isMissing","location":"kmath-core/space.kscience.kmath.structures/is-missing.html","searchKeys":["isMissing","fun FlaggedBuffer<*>.isMissing(index: Int): Boolean","space.kscience.kmath.structures.isMissing"]},{"name":"fun FlaggedBuffer<*>.isValid(index: Int): Boolean","description":"space.kscience.kmath.structures.isValid","location":"kmath-core/space.kscience.kmath.structures/is-valid.html","searchKeys":["isValid","fun FlaggedBuffer<*>.isValid(index: Int): Boolean","space.kscience.kmath.structures.isValid"]},{"name":"fun FlaggedDoubleBuffer(values: DoubleArray, flags: ByteArray)","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.FlaggedDoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/-flagged-double-buffer.html","searchKeys":["FlaggedDoubleBuffer","fun FlaggedDoubleBuffer(values: DoubleArray, flags: ByteArray)","space.kscience.kmath.structures.FlaggedDoubleBuffer.FlaggedDoubleBuffer"]},{"name":"fun FloatArray.asBuffer(): FloatBuffer","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun FloatArray.asBuffer(): FloatBuffer","space.kscience.kmath.structures.asBuffer"]},{"name":"fun FloatBuffer(array: FloatArray)","description":"space.kscience.kmath.structures.FloatBuffer.FloatBuffer","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/-float-buffer.html","searchKeys":["FloatBuffer","fun FloatBuffer(array: FloatArray)","space.kscience.kmath.structures.FloatBuffer.FloatBuffer"]},{"name":"fun FloatBuffer(vararg floats: Float): FloatBuffer","description":"space.kscience.kmath.structures.FloatBuffer","location":"kmath-core/space.kscience.kmath.structures/-float-buffer.html","searchKeys":["FloatBuffer","fun FloatBuffer(vararg floats: Float): FloatBuffer","space.kscience.kmath.structures.FloatBuffer"]},{"name":"fun HyperSquareDomain(lower: Buffer<Double>, upper: Buffer<Double>)","description":"space.kscience.kmath.domains.HyperSquareDomain.HyperSquareDomain","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/-hyper-square-domain.html","searchKeys":["HyperSquareDomain","fun HyperSquareDomain(lower: Buffer<Double>, upper: Buffer<Double>)","space.kscience.kmath.domains.HyperSquareDomain.HyperSquareDomain"]},{"name":"fun Int.toBigInt(): BigInt","description":"space.kscience.kmath.operations.toBigInt","location":"kmath-core/space.kscience.kmath.operations/to-big-int.html","searchKeys":["toBigInt","fun Int.toBigInt(): BigInt","space.kscience.kmath.operations.toBigInt"]},{"name":"fun IntArray.asBuffer(): IntBuffer","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun IntArray.asBuffer(): IntBuffer","space.kscience.kmath.structures.asBuffer"]},{"name":"fun IntBuffer(array: IntArray)","description":"space.kscience.kmath.structures.IntBuffer.IntBuffer","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/-int-buffer.html","searchKeys":["IntBuffer","fun IntBuffer(array: IntArray)","space.kscience.kmath.structures.IntBuffer.IntBuffer"]},{"name":"fun IntBuffer(vararg ints: Int): IntBuffer","description":"space.kscience.kmath.structures.IntBuffer","location":"kmath-core/space.kscience.kmath.structures/-int-buffer.html","searchKeys":["IntBuffer","fun IntBuffer(vararg ints: Int): IntBuffer","space.kscience.kmath.structures.IntBuffer"]},{"name":"fun Iterable<Double>.cumulativeSum(): Iterable<Double>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Iterable<Double>.cumulativeSum(): Iterable<Double>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun Iterable<Int>.cumulativeSum(): Iterable<Int>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Iterable<Int>.cumulativeSum(): Iterable<Int>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun Iterable<Long>.cumulativeSum(): Iterable<Long>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Iterable<Long>.cumulativeSum(): Iterable<Long>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun JBigDecimalField(mathContext: MathContext = MathContext.DECIMAL64)","description":"space.kscience.kmath.operations.JBigDecimalField.JBigDecimalField","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field/-j-big-decimal-field.html","searchKeys":["JBigDecimalField","fun JBigDecimalField(mathContext: MathContext = MathContext.DECIMAL64)","space.kscience.kmath.operations.JBigDecimalField.JBigDecimalField"]},{"name":"fun KMathContext()","description":"space.kscience.kmath.operations.KMathContext.KMathContext","location":"kmath-core/space.kscience.kmath.operations/-k-math-context/-k-math-context.html","searchKeys":["KMathContext","fun KMathContext()","space.kscience.kmath.operations.KMathContext.KMathContext"]},{"name":"fun LinearSpace<Double, DoubleField>.lup(matrix: Matrix<Double>, singularityThreshold: Double = 1e-11): LupDecomposition<Double>","description":"space.kscience.kmath.linear.lup","location":"kmath-core/space.kscience.kmath.linear/lup.html","searchKeys":["lup","fun LinearSpace<Double, DoubleField>.lup(matrix: Matrix<Double>, singularityThreshold: Double = 1e-11): LupDecomposition<Double>","space.kscience.kmath.linear.lup"]},{"name":"fun LinearSpace<Double, DoubleField>.lupSolver(singularityThreshold: Double = 1e-11): LinearSolver<Double>","description":"space.kscience.kmath.linear.lupSolver","location":"kmath-core/space.kscience.kmath.linear/lup-solver.html","searchKeys":["lupSolver","fun LinearSpace<Double, DoubleField>.lupSolver(singularityThreshold: Double = 1e-11): LinearSolver<Double>","space.kscience.kmath.linear.lupSolver"]},{"name":"fun List<Double>.cumulativeSum(): List<Double>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun List<Double>.cumulativeSum(): List<Double>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun List<Int>.cumulativeSum(): List<Int>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun List<Int>.cumulativeSum(): List<Int>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun List<Long>.cumulativeSum(): List<Long>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun List<Long>.cumulativeSum(): List<Long>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun Loggable.log(block: () -> String)","description":"space.kscience.kmath.misc.log","location":"kmath-core/space.kscience.kmath.misc/log.html","searchKeys":["log","fun Loggable.log(block: () -> String)","space.kscience.kmath.misc.log"]},{"name":"fun Long.toBigInt(): BigInt","description":"space.kscience.kmath.operations.toBigInt","location":"kmath-core/space.kscience.kmath.operations/to-big-int.html","searchKeys":["toBigInt","fun Long.toBigInt(): BigInt","space.kscience.kmath.operations.toBigInt"]},{"name":"fun Long.toIntExact(): Int","description":"space.kscience.kmath.misc.toIntExact","location":"kmath-core/space.kscience.kmath.misc/to-int-exact.html","searchKeys":["toIntExact","fun Long.toIntExact(): Int","space.kscience.kmath.misc.toIntExact"]},{"name":"fun LongArray.asBuffer(): LongBuffer","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun LongArray.asBuffer(): LongBuffer","space.kscience.kmath.structures.asBuffer"]},{"name":"fun LongBuffer(array: LongArray)","description":"space.kscience.kmath.structures.LongBuffer.LongBuffer","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/-long-buffer.html","searchKeys":["LongBuffer","fun LongBuffer(array: LongArray)","space.kscience.kmath.structures.LongBuffer.LongBuffer"]},{"name":"fun LongBuffer(vararg longs: Long): LongBuffer","description":"space.kscience.kmath.structures.LongBuffer","location":"kmath-core/space.kscience.kmath.structures/-long-buffer.html","searchKeys":["LongBuffer","fun LongBuffer(vararg longs: Long): LongBuffer","space.kscience.kmath.structures.LongBuffer"]},{"name":"fun Numeric(value: Number)","description":"space.kscience.kmath.expressions.MST.Numeric.Numeric","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-numeric/-numeric.html","searchKeys":["Numeric","fun Numeric(value: Number)","space.kscience.kmath.expressions.MST.Numeric.Numeric"]},{"name":"fun PerformancePitfall(message: String = \"Potential performance problem\")","description":"space.kscience.kmath.misc.PerformancePitfall.PerformancePitfall","location":"kmath-core/space.kscience.kmath.misc/-performance-pitfall/-performance-pitfall.html","searchKeys":["PerformancePitfall","fun PerformancePitfall(message: String = \"Potential performance problem\")","space.kscience.kmath.misc.PerformancePitfall.PerformancePitfall"]},{"name":"fun Sequence<Double>.cumulativeSum(): Sequence<Double>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Sequence<Double>.cumulativeSum(): Sequence<Double>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun Sequence<Int>.cumulativeSum(): Sequence<Int>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Sequence<Int>.cumulativeSum(): Sequence<Int>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun Sequence<Long>.cumulativeSum(): Sequence<Long>","description":"space.kscience.kmath.misc.cumulativeSum","location":"kmath-core/space.kscience.kmath.misc/cumulative-sum.html","searchKeys":["cumulativeSum","fun Sequence<Long>.cumulativeSum(): Sequence<Long>","space.kscience.kmath.misc.cumulativeSum"]},{"name":"fun ShapeMismatchException(expected: IntArray, actual: IntArray)","description":"space.kscience.kmath.nd.ShapeMismatchException.ShapeMismatchException","location":"kmath-core/space.kscience.kmath.nd/-shape-mismatch-exception/-shape-mismatch-exception.html","searchKeys":["ShapeMismatchException","fun ShapeMismatchException(expected: IntArray, actual: IntArray)","space.kscience.kmath.nd.ShapeMismatchException.ShapeMismatchException"]},{"name":"fun ShortArray.asBuffer(): ShortBuffer","description":"space.kscience.kmath.structures.asBuffer","location":"kmath-core/space.kscience.kmath.structures/as-buffer.html","searchKeys":["asBuffer","fun ShortArray.asBuffer(): ShortBuffer","space.kscience.kmath.structures.asBuffer"]},{"name":"fun ShortBuffer(array: ShortArray)","description":"space.kscience.kmath.structures.ShortBuffer.ShortBuffer","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/-short-buffer.html","searchKeys":["ShortBuffer","fun ShortBuffer(array: ShortArray)","space.kscience.kmath.structures.ShortBuffer.ShortBuffer"]},{"name":"fun ShortBuffer(vararg shorts: Short): ShortBuffer","description":"space.kscience.kmath.structures.ShortBuffer","location":"kmath-core/space.kscience.kmath.structures/-short-buffer.html","searchKeys":["ShortBuffer","fun ShortBuffer(vararg shorts: Short): ShortBuffer","space.kscience.kmath.structures.ShortBuffer"]},{"name":"fun ShortRingND(shape: IntArray)","description":"space.kscience.kmath.nd.ShortRingND.ShortRingND","location":"kmath-core/space.kscience.kmath.nd/-short-ring-n-d/-short-ring-n-d.html","searchKeys":["ShortRingND","fun ShortRingND(shape: IntArray)","space.kscience.kmath.nd.ShortRingND.ShortRingND"]},{"name":"fun SimpleSymbolIndexer(symbols: List<Symbol>)","description":"space.kscience.kmath.expressions.SimpleSymbolIndexer.SimpleSymbolIndexer","location":"kmath-core/space.kscience.kmath.expressions/-simple-symbol-indexer/-simple-symbol-indexer.html","searchKeys":["SimpleSymbolIndexer","fun SimpleSymbolIndexer(symbols: List<Symbol>)","space.kscience.kmath.expressions.SimpleSymbolIndexer.SimpleSymbolIndexer"]},{"name":"fun String.parseBigInteger(): BigInt?","description":"space.kscience.kmath.operations.parseBigInteger","location":"kmath-core/space.kscience.kmath.operations/parse-big-integer.html","searchKeys":["parseBigInteger","fun String.parseBigInteger(): BigInt?","space.kscience.kmath.operations.parseBigInteger"]},{"name":"fun Symbol(identity: String): Symbol","description":"space.kscience.kmath.expressions.Symbol","location":"kmath-core/space.kscience.kmath.expressions/-symbol.html","searchKeys":["Symbol","fun Symbol(identity: String): Symbol","space.kscience.kmath.expressions.Symbol"]},{"name":"fun TransposedFeature(original: Matrix<T>)","description":"space.kscience.kmath.linear.TransposedFeature.TransposedFeature","location":"kmath-core/space.kscience.kmath.linear/-transposed-feature/-transposed-feature.html","searchKeys":["TransposedFeature","fun TransposedFeature(original: Matrix<T>)","space.kscience.kmath.linear.TransposedFeature.TransposedFeature"]},{"name":"fun UInt.toBigInt(): BigInt","description":"space.kscience.kmath.operations.toBigInt","location":"kmath-core/space.kscience.kmath.operations/to-big-int.html","searchKeys":["toBigInt","fun UInt.toBigInt(): BigInt","space.kscience.kmath.operations.toBigInt"]},{"name":"fun UIntArray.toBigInt(sign: Byte): BigInt","description":"space.kscience.kmath.operations.toBigInt","location":"kmath-core/space.kscience.kmath.operations/to-big-int.html","searchKeys":["toBigInt","fun UIntArray.toBigInt(sign: Byte): BigInt","space.kscience.kmath.operations.toBigInt"]},{"name":"fun ULong.toBigInt(): BigInt","description":"space.kscience.kmath.operations.toBigInt","location":"kmath-core/space.kscience.kmath.operations/to-big-int.html","searchKeys":["toBigInt","fun ULong.toBigInt(): BigInt","space.kscience.kmath.operations.toBigInt"]},{"name":"fun Unary(operation: String, value: MST)","description":"space.kscience.kmath.expressions.MST.Unary.Unary","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-unary/-unary.html","searchKeys":["Unary","fun Unary(operation: String, value: MST)","space.kscience.kmath.expressions.MST.Unary.Unary"]},{"name":"fun UnconstrainedDomain(dimension: Int)","description":"space.kscience.kmath.domains.UnconstrainedDomain.UnconstrainedDomain","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/-unconstrained-domain.html","searchKeys":["UnconstrainedDomain","fun UnconstrainedDomain(dimension: Int)","space.kscience.kmath.domains.UnconstrainedDomain.UnconstrainedDomain"]},{"name":"fun UnivariateDomain(range: ClosedFloatingPointRange<Double>)","description":"space.kscience.kmath.domains.UnivariateDomain.UnivariateDomain","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/-univariate-domain.html","searchKeys":["UnivariateDomain","fun UnivariateDomain(range: ClosedFloatingPointRange<Double>)","space.kscience.kmath.domains.UnivariateDomain.UnivariateDomain"]},{"name":"fun UnstableKMathAPI()","description":"space.kscience.kmath.misc.UnstableKMathAPI.UnstableKMathAPI","location":"kmath-core/space.kscience.kmath.misc/-unstable-k-math-a-p-i/-unstable-k-math-a-p-i.html","searchKeys":["UnstableKMathAPI","fun UnstableKMathAPI()","space.kscience.kmath.misc.UnstableKMathAPI.UnstableKMathAPI"]},{"name":"fun abs(): BigInt","description":"space.kscience.kmath.operations.BigInt.abs","location":"kmath-core/space.kscience.kmath.operations/-big-int/abs.html","searchKeys":["abs","fun abs(): BigInt","space.kscience.kmath.operations.BigInt.abs"]},{"name":"fun abs(x: BigInt): BigInt","description":"space.kscience.kmath.operations.abs","location":"kmath-core/space.kscience.kmath.operations/abs.html","searchKeys":["abs","fun abs(x: BigInt): BigInt","space.kscience.kmath.operations.abs"]},{"name":"fun contentEquals(st1: StructureND<Double>, st2: StructureND<Double>, tolerance: Double = 1e-11): Boolean","description":"space.kscience.kmath.nd.StructureND.Companion.contentEquals","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/content-equals.html","searchKeys":["contentEquals","fun contentEquals(st1: StructureND<Double>, st2: StructureND<Double>, tolerance: Double = 1e-11): Boolean","space.kscience.kmath.nd.StructureND.Companion.contentEquals"]},{"name":"fun derivative(variable: Symbol): T","description":"space.kscience.kmath.expressions.DerivationResult.derivative","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/derivative.html","searchKeys":["derivative","fun derivative(variable: Symbol): T","space.kscience.kmath.expressions.DerivationResult.derivative"]},{"name":"fun div(): T","description":"space.kscience.kmath.expressions.DerivationResult.div","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/div.html","searchKeys":["div","fun div(): T","space.kscience.kmath.expressions.DerivationResult.div"]},{"name":"fun fun interface AutoDiffProcessor<T, I, out A : Algebra<I>>","description":"space.kscience.kmath.expressions.AutoDiffProcessor","location":"kmath-core/space.kscience.kmath.expressions/-auto-diff-processor/index.html","searchKeys":["AutoDiffProcessor","fun fun interface AutoDiffProcessor<T, I, out A : Algebra<I>>","space.kscience.kmath.expressions.AutoDiffProcessor"]},{"name":"fun fun interface Expression<T>","description":"space.kscience.kmath.expressions.Expression","location":"kmath-core/space.kscience.kmath.expressions/-expression/index.html","searchKeys":["Expression","fun fun interface Expression<T>","space.kscience.kmath.expressions.Expression"]},{"name":"fun fun interface Loggable","description":"space.kscience.kmath.misc.Loggable","location":"kmath-core/space.kscience.kmath.misc/-loggable/index.html","searchKeys":["Loggable","fun fun interface Loggable","space.kscience.kmath.misc.Loggable"]},{"name":"fun modPow(exponent: BigInt, m: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.modPow","location":"kmath-core/space.kscience.kmath.operations/-big-int/mod-pow.html","searchKeys":["modPow","fun modPow(exponent: BigInt, m: BigInt): BigInt","space.kscience.kmath.operations.BigInt.modPow"]},{"name":"fun pow(exponent: UInt): BigInt","description":"space.kscience.kmath.operations.BigInt.pow","location":"kmath-core/space.kscience.kmath.operations/-big-int/pow.html","searchKeys":["pow","fun pow(exponent: UInt): BigInt","space.kscience.kmath.operations.BigInt.pow"]},{"name":"fun pow(x: AutoDiffValue<T>, y: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.pow","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/pow.html","searchKeys":["pow","fun pow(x: AutoDiffValue<T>, y: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.pow"]},{"name":"fun sqr(x: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sqr","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/sqr.html","searchKeys":["sqr","fun sqr(x: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sqr"]},{"name":"fun toString(buffer: Buffer<*>): String","description":"space.kscience.kmath.structures.Buffer.Companion.toString","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/to-string.html","searchKeys":["toString","fun toString(buffer: Buffer<*>): String","space.kscience.kmath.structures.Buffer.Companion.toString"]},{"name":"fun toString(structure: StructureND<*>): String","description":"space.kscience.kmath.nd.StructureND.Companion.toString","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/to-string.html","searchKeys":["toString","fun toString(structure: StructureND<*>): String","space.kscience.kmath.nd.StructureND.Companion.toString"]},{"name":"fun with(other: FeatureSet<F>): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.with","location":"kmath-core/space.kscience.kmath.misc/-feature-set/with.html","searchKeys":["with","fun with(other: FeatureSet<F>): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.with"]},{"name":"fun with(otherFeatures: Iterable<F>): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.with","location":"kmath-core/space.kscience.kmath.misc/-feature-set/with.html","searchKeys":["with","fun with(otherFeatures: Iterable<F>): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.with"]},{"name":"fun with(vararg otherFeatures: F): FeatureSet<F>","description":"space.kscience.kmath.misc.FeatureSet.with","location":"kmath-core/space.kscience.kmath.misc/-feature-set/with.html","searchKeys":["with","fun with(vararg otherFeatures: F): FeatureSet<F>","space.kscience.kmath.misc.FeatureSet.with"]},{"name":"fun zero(size: Int): DoubleBuffer","description":"space.kscience.kmath.structures.DoubleBuffer.Companion.zero","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/-companion/zero.html","searchKeys":["zero","fun zero(size: Int): DoubleBuffer","space.kscience.kmath.structures.DoubleBuffer.Companion.zero"]},{"name":"infix fun and(other: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.and","location":"kmath-core/space.kscience.kmath.operations/-big-int/and.html","searchKeys":["and","infix fun and(other: BigInt): BigInt","space.kscience.kmath.operations.BigInt.and"]},{"name":"infix fun or(other: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.or","location":"kmath-core/space.kscience.kmath.operations/-big-int/or.html","searchKeys":["or","infix fun or(other: BigInt): BigInt","space.kscience.kmath.operations.BigInt.or"]},{"name":"infix fun shl(i: Int): BigInt","description":"space.kscience.kmath.operations.BigInt.shl","location":"kmath-core/space.kscience.kmath.operations/-big-int/shl.html","searchKeys":["shl","infix fun shl(i: Int): BigInt","space.kscience.kmath.operations.BigInt.shl"]},{"name":"infix fun shr(i: Int): BigInt","description":"space.kscience.kmath.operations.BigInt.shr","location":"kmath-core/space.kscience.kmath.operations/-big-int/shr.html","searchKeys":["shr","infix fun shr(i: Int): BigInt","space.kscience.kmath.operations.BigInt.shr"]},{"name":"inline fun <R> DoubleField.withNdAlgebra(vararg shape: Int, action: DoubleFieldND.() -> R): R","description":"space.kscience.kmath.nd.withNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <R> DoubleField.withNdAlgebra(vararg shape: Int, action: DoubleFieldND.() -> R): R","space.kscience.kmath.nd.withNdAlgebra"]},{"name":"inline fun <R> ShortRing.withNdAlgebra(vararg shape: Int, action: ShortRingND.() -> R): R","description":"space.kscience.kmath.nd.withNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <R> ShortRing.withNdAlgebra(vararg shape: Int, action: ShortRingND.() -> R): R","space.kscience.kmath.nd.withNdAlgebra"]},{"name":"inline fun <R> withSymbols(symbols: Collection<Symbol>, block: SymbolIndexer.() -> R): R","description":"space.kscience.kmath.expressions.withSymbols","location":"kmath-core/space.kscience.kmath.expressions/with-symbols.html","searchKeys":["withSymbols","inline fun <R> withSymbols(symbols: Collection<Symbol>, block: SymbolIndexer.() -> R): R","space.kscience.kmath.expressions.withSymbols"]},{"name":"inline fun <R> withSymbols(vararg symbols: Symbol, block: SymbolIndexer.() -> R): R","description":"space.kscience.kmath.expressions.withSymbols","location":"kmath-core/space.kscience.kmath.expressions/with-symbols.html","searchKeys":["withSymbols","inline fun <R> withSymbols(vararg symbols: Symbol, block: SymbolIndexer.() -> R): R","space.kscience.kmath.expressions.withSymbols"]},{"name":"inline fun <T : Any, A : Field<T>> A.autoNdAlgebra(vararg shape: Int): FieldND<T, A>","description":"space.kscience.kmath.nd.autoNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/auto-nd-algebra.html","searchKeys":["autoNdAlgebra","inline fun <T : Any, A : Field<T>> A.autoNdAlgebra(vararg shape: Int): FieldND<T, A>","space.kscience.kmath.nd.autoNdAlgebra"]},{"name":"inline fun <T : Any, A : Ring<T>> auto(ring: A): LinearSpace<T, A>","description":"space.kscience.kmath.linear.LinearSpace.Companion.auto","location":"kmath-core/space.kscience.kmath.linear/-linear-space/-companion/auto.html","searchKeys":["auto","inline fun <T : Any, A : Ring<T>> auto(ring: A): LinearSpace<T, A>","space.kscience.kmath.linear.LinearSpace.Companion.auto"]},{"name":"inline fun <T : Any, F : Field<T>> SimpleAutoDiffField<T, F>.const(block: F.() -> T): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.const","location":"kmath-core/space.kscience.kmath.expressions/const.html","searchKeys":["const","inline fun <T : Any, F : Field<T>> SimpleAutoDiffField<T, F>.const(block: F.() -> T): AutoDiffValue<T>","space.kscience.kmath.expressions.const"]},{"name":"inline fun <T : Any, F : StructureFeature> AlgebraND<T, *>.getFeature(structure: StructureND<T>): F?","description":"space.kscience.kmath.nd.getFeature","location":"kmath-core/space.kscience.kmath.nd/get-feature.html","searchKeys":["getFeature","inline fun <T : Any, F : StructureFeature> AlgebraND<T, *>.getFeature(structure: StructureND<T>): F?","space.kscience.kmath.nd.getFeature"]},{"name":"inline fun <T : Any, F : StructureFeature> LinearSpace<T, *>.computeFeature(structure: Matrix<T>): F?","description":"space.kscience.kmath.linear.computeFeature","location":"kmath-core/space.kscience.kmath.linear/compute-feature.html","searchKeys":["computeFeature","inline fun <T : Any, F : StructureFeature> LinearSpace<T, *>.computeFeature(structure: Matrix<T>): F?","space.kscience.kmath.linear.computeFeature"]},{"name":"inline fun <T : Any, R : Any> Buffer<T>.map(block: (T) -> R): Buffer<R>","description":"space.kscience.kmath.operations.map","location":"kmath-core/space.kscience.kmath.operations/map.html","searchKeys":["map","inline fun <T : Any, R : Any> Buffer<T>.map(block: (T) -> R): Buffer<R>","space.kscience.kmath.operations.map"]},{"name":"inline fun <T : Any, R : Any> Buffer<T>.map(bufferFactory: BufferFactory<R>, crossinline block: (T) -> R): Buffer<R>","description":"space.kscience.kmath.operations.map","location":"kmath-core/space.kscience.kmath.operations/map.html","searchKeys":["map","inline fun <T : Any, R : Any> Buffer<T>.map(bufferFactory: BufferFactory<R>, crossinline block: (T) -> R): Buffer<R>","space.kscience.kmath.operations.map"]},{"name":"inline fun <T : Any, R : Any> Buffer<T>.mapIndexed(bufferFactory: BufferFactory<R> = Buffer.Companion::auto, crossinline block: (index: Int, T) -> R): Buffer<R>","description":"space.kscience.kmath.operations.mapIndexed","location":"kmath-core/space.kscience.kmath.operations/map-indexed.html","searchKeys":["mapIndexed","inline fun <T : Any, R : Any> Buffer<T>.mapIndexed(bufferFactory: BufferFactory<R> = Buffer.Companion::auto, crossinline block: (index: Int, T) -> R): Buffer<R>","space.kscience.kmath.operations.mapIndexed"]},{"name":"inline fun <T : Any, R> Buffer<T>.fold(initial: R, operation: (R, T) -> R): R","description":"space.kscience.kmath.operations.fold","location":"kmath-core/space.kscience.kmath.operations/fold.html","searchKeys":["fold","inline fun <T : Any, R> Buffer<T>.fold(initial: R, operation: (R, T) -> R): R","space.kscience.kmath.operations.fold"]},{"name":"inline fun <T : Any> LinearSpace<T, Ring<T>>.column(size: Int, crossinline builder: (Int) -> T): Matrix<T>","description":"space.kscience.kmath.linear.column","location":"kmath-core/space.kscience.kmath.linear/column.html","searchKeys":["column","inline fun <T : Any> LinearSpace<T, Ring<T>>.column(size: Int, crossinline builder: (Int) -> T): Matrix<T>","space.kscience.kmath.linear.column"]},{"name":"inline fun <T : Any> LinearSpace<T, Ring<T>>.row(size: Int, crossinline builder: (Int) -> T): Matrix<T>","description":"space.kscience.kmath.linear.row","location":"kmath-core/space.kscience.kmath.linear/row.html","searchKeys":["row","inline fun <T : Any> LinearSpace<T, Ring<T>>.row(size: Int, crossinline builder: (Int) -> T): Matrix<T>","space.kscience.kmath.linear.row"]},{"name":"inline fun <T : Any> StructureND<T>.combine(struct: StructureND<T>, crossinline block: (T, T) -> T): StructureND<T>","description":"space.kscience.kmath.nd.combine","location":"kmath-core/space.kscience.kmath.nd/combine.html","searchKeys":["combine","inline fun <T : Any> StructureND<T>.combine(struct: StructureND<T>, crossinline block: (T, T) -> T): StructureND<T>","space.kscience.kmath.nd.combine"]},{"name":"inline fun <T : Any> auto(shape: IntArray, crossinline initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.auto","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(shape: IntArray, crossinline initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.auto"]},{"name":"inline fun <T : Any> auto(size: Int, initializer: (Int) -> T): Buffer<T>","description":"space.kscience.kmath.structures.Buffer.Companion.auto","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(size: Int, initializer: (Int) -> T): Buffer<T>","space.kscience.kmath.structures.Buffer.Companion.auto"]},{"name":"inline fun <T : Any> auto(size: Int, initializer: (Int) -> T): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableBuffer.Companion.auto","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(size: Int, initializer: (Int) -> T): MutableBuffer<T>","space.kscience.kmath.structures.MutableBuffer.Companion.auto"]},{"name":"inline fun <T : Any> auto(strides: Strides, crossinline initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.auto","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(strides: Strides, crossinline initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.auto"]},{"name":"inline fun <T : Any> auto(type: KClass<T>, size: Int, initializer: (Int) -> T): Buffer<T>","description":"space.kscience.kmath.structures.Buffer.Companion.auto","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(type: KClass<T>, size: Int, initializer: (Int) -> T): Buffer<T>","space.kscience.kmath.structures.Buffer.Companion.auto"]},{"name":"inline fun <T : Any> auto(type: KClass<T>, strides: Strides, crossinline initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.auto","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(type: KClass<T>, strides: Strides, crossinline initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.auto"]},{"name":"inline fun <T : Any> auto(type: KClass<T>, vararg shape: Int, crossinline initializer: (IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.StructureND.Companion.auto","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(type: KClass<T>, vararg shape: Int, crossinline initializer: (IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.StructureND.Companion.auto"]},{"name":"inline fun <T : Any> auto(type: KClass<out T>, size: Int, initializer: (Int) -> T): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableBuffer.Companion.auto","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(type: KClass<out T>, size: Int, initializer: (Int) -> T): MutableBuffer<T>","space.kscience.kmath.structures.MutableBuffer.Companion.auto"]},{"name":"inline fun <T : Any> create(spec: MemorySpec<T>, size: Int, initializer: (Int) -> T): MemoryBuffer<T>","description":"space.kscience.kmath.structures.MemoryBuffer.Companion.create","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/-companion/create.html","searchKeys":["create","inline fun <T : Any> create(spec: MemorySpec<T>, size: Int, initializer: (Int) -> T): MemoryBuffer<T>","space.kscience.kmath.structures.MemoryBuffer.Companion.create"]},{"name":"inline fun <T : Any> create(spec: MemorySpec<T>, size: Int, initializer: (Int) -> T): MutableMemoryBuffer<T>","description":"space.kscience.kmath.structures.MutableMemoryBuffer.Companion.create","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/-companion/create.html","searchKeys":["create","inline fun <T : Any> create(spec: MemorySpec<T>, size: Int, initializer: (Int) -> T): MutableMemoryBuffer<T>","space.kscience.kmath.structures.MutableMemoryBuffer.Companion.create"]},{"name":"inline fun <T : Comparable<T>> LinearSpace<T, Field<T>>.lup(matrix: Matrix<T>, noinline checkSingular: (T) -> Boolean): LupDecomposition<T>","description":"space.kscience.kmath.linear.lup","location":"kmath-core/space.kscience.kmath.linear/lup.html","searchKeys":["lup","inline fun <T : Comparable<T>> LinearSpace<T, Field<T>>.lup(matrix: Matrix<T>, noinline checkSingular: (T) -> Boolean): LupDecomposition<T>","space.kscience.kmath.linear.lup"]},{"name":"inline fun <T : F> getFeature(): T?","description":"space.kscience.kmath.misc.FeatureSet.getFeature","location":"kmath-core/space.kscience.kmath.misc/-feature-set/get-feature.html","searchKeys":["getFeature","inline fun <T : F> getFeature(): T?","space.kscience.kmath.misc.FeatureSet.getFeature"]},{"name":"inline fun <T, A : ExtendedField<T>> A.expressionInExtendedField(block: FunctionalExpressionExtendedField<T, A>.() -> Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.expressionInExtendedField","location":"kmath-core/space.kscience.kmath.expressions/expression-in-extended-field.html","searchKeys":["expressionInExtendedField","inline fun <T, A : ExtendedField<T>> A.expressionInExtendedField(block: FunctionalExpressionExtendedField<T, A>.() -> Expression<T>): Expression<T>","space.kscience.kmath.expressions.expressionInExtendedField"]},{"name":"inline fun <T, A : Field<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedFieldND<T, A>.() -> R): R","description":"space.kscience.kmath.nd.withNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <T, A : Field<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedFieldND<T, A>.() -> R): R","space.kscience.kmath.nd.withNdAlgebra"]},{"name":"inline fun <T, A : Field<T>> A.expressionInField(block: FunctionalExpressionField<T, A>.() -> Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.expressionInField","location":"kmath-core/space.kscience.kmath.expressions/expression-in-field.html","searchKeys":["expressionInField","inline fun <T, A : Field<T>> A.expressionInField(block: FunctionalExpressionField<T, A>.() -> Expression<T>): Expression<T>","space.kscience.kmath.expressions.expressionInField"]},{"name":"inline fun <T, A : Group<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedGroupND<T, A>.() -> R): R","description":"space.kscience.kmath.nd.withNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <T, A : Group<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedGroupND<T, A>.() -> R): R","space.kscience.kmath.nd.withNdAlgebra"]},{"name":"inline fun <T, A : Group<T>> A.expressionInGroup(block: FunctionalExpressionGroup<T, A>.() -> Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.expressionInGroup","location":"kmath-core/space.kscience.kmath.expressions/expression-in-group.html","searchKeys":["expressionInGroup","inline fun <T, A : Group<T>> A.expressionInGroup(block: FunctionalExpressionGroup<T, A>.() -> Expression<T>): Expression<T>","space.kscience.kmath.expressions.expressionInGroup"]},{"name":"inline fun <T, A : Ring<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedRingND<T, A>.() -> R): R","description":"space.kscience.kmath.nd.withNdAlgebra","location":"kmath-core/space.kscience.kmath.nd/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <T, A : Ring<T>, R> A.withNdAlgebra(noinline bufferFactory: BufferFactory<T>, vararg shape: Int, action: BufferedRingND<T, A>.() -> R): R","space.kscience.kmath.nd.withNdAlgebra"]},{"name":"inline fun <T, A : Ring<T>> A.expressionInRing(block: FunctionalExpressionRing<T, A>.() -> Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.expressionInRing","location":"kmath-core/space.kscience.kmath.expressions/expression-in-ring.html","searchKeys":["expressionInRing","inline fun <T, A : Ring<T>> A.expressionInRing(block: FunctionalExpressionRing<T, A>.() -> Expression<T>): Expression<T>","space.kscience.kmath.expressions.expressionInRing"]},{"name":"inline fun <T, R : Any> MutableStructureND<T>.mapToMutableBuffer(factory: MutableBufferFactory<R> = MutableBuffer.Companion::auto, crossinline transform: (T) -> R): MutableBufferND<R>","description":"space.kscience.kmath.nd.mapToMutableBuffer","location":"kmath-core/space.kscience.kmath.nd/map-to-mutable-buffer.html","searchKeys":["mapToMutableBuffer","inline fun <T, R : Any> MutableStructureND<T>.mapToMutableBuffer(factory: MutableBufferFactory<R> = MutableBuffer.Companion::auto, crossinline transform: (T) -> R): MutableBufferND<R>","space.kscience.kmath.nd.mapToMutableBuffer"]},{"name":"inline fun <T, R : Any> StructureND<T>.mapToBuffer(factory: BufferFactory<R> = Buffer.Companion::auto, crossinline transform: (T) -> R): BufferND<R>","description":"space.kscience.kmath.nd.mapToBuffer","location":"kmath-core/space.kscience.kmath.nd/map-to-buffer.html","searchKeys":["mapToBuffer","inline fun <T, R : Any> StructureND<T>.mapToBuffer(factory: BufferFactory<R> = Buffer.Companion::auto, crossinline transform: (T) -> R): BufferND<R>","space.kscience.kmath.nd.mapToBuffer"]},{"name":"inline fun <T, R> Iterable<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Iterable<R>","description":"space.kscience.kmath.misc.cumulative","location":"kmath-core/space.kscience.kmath.misc/cumulative.html","searchKeys":["cumulative","inline fun <T, R> Iterable<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Iterable<R>","space.kscience.kmath.misc.cumulative"]},{"name":"inline fun <T, R> Iterator<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Iterator<R>","description":"space.kscience.kmath.misc.cumulative","location":"kmath-core/space.kscience.kmath.misc/cumulative.html","searchKeys":["cumulative","inline fun <T, R> Iterator<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Iterator<R>","space.kscience.kmath.misc.cumulative"]},{"name":"inline fun <T, R> List<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): List<R>","description":"space.kscience.kmath.misc.cumulative","location":"kmath-core/space.kscience.kmath.misc/cumulative.html","searchKeys":["cumulative","inline fun <T, R> List<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): List<R>","space.kscience.kmath.misc.cumulative"]},{"name":"inline fun <T, R> Sequence<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Sequence<R>","description":"space.kscience.kmath.misc.cumulative","location":"kmath-core/space.kscience.kmath.misc/cumulative.html","searchKeys":["cumulative","inline fun <T, R> Sequence<T>.cumulative(initial: R, crossinline operation: (R, T) -> R): Sequence<R>","space.kscience.kmath.misc.cumulative"]},{"name":"inline fun <T1 : Any, T2 : Any, R : Any> Buffer<T1>.zip(other: Buffer<T2>, bufferFactory: BufferFactory<R> = Buffer.Companion::auto, crossinline transform: (T1, T2) -> R): Buffer<R>","description":"space.kscience.kmath.operations.zip","location":"kmath-core/space.kscience.kmath.operations/zip.html","searchKeys":["zip","inline fun <T1 : Any, T2 : Any, R : Any> Buffer<T1>.zip(other: Buffer<T2>, bufferFactory: BufferFactory<R> = Buffer.Companion::auto, crossinline transform: (T1, T2) -> R): Buffer<R>","space.kscience.kmath.operations.zip"]},{"name":"inline fun <T> Buffer<T>.toTypedArray(): Array<T>","description":"space.kscience.kmath.operations.toTypedArray","location":"kmath-core/space.kscience.kmath.operations/to-typed-array.html","searchKeys":["toTypedArray","inline fun <T> Buffer<T>.toTypedArray(): Array<T>","space.kscience.kmath.operations.toTypedArray"]},{"name":"inline fun <T> MutableStructureND<T>.mapInPlace(action: (IntArray, T) -> T)","description":"space.kscience.kmath.nd.mapInPlace","location":"kmath-core/space.kscience.kmath.nd/map-in-place.html","searchKeys":["mapInPlace","inline fun <T> MutableStructureND<T>.mapInPlace(action: (IntArray, T) -> T)","space.kscience.kmath.nd.mapInPlace"]},{"name":"inline fun <T> boxing(size: Int, initializer: (Int) -> T): Buffer<T>","description":"space.kscience.kmath.structures.Buffer.Companion.boxing","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/boxing.html","searchKeys":["boxing","inline fun <T> boxing(size: Int, initializer: (Int) -> T): Buffer<T>","space.kscience.kmath.structures.Buffer.Companion.boxing"]},{"name":"inline fun <T> boxing(size: Int, initializer: (Int) -> T): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableBuffer.Companion.boxing","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/boxing.html","searchKeys":["boxing","inline fun <T> boxing(size: Int, initializer: (Int) -> T): MutableBuffer<T>","space.kscience.kmath.structures.MutableBuffer.Companion.boxing"]},{"name":"inline fun BigInt.Companion.buffer(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","description":"space.kscience.kmath.operations.buffer","location":"kmath-core/space.kscience.kmath.operations/buffer.html","searchKeys":["buffer","inline fun BigInt.Companion.buffer(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","space.kscience.kmath.operations.buffer"]},{"name":"inline fun BigInt.mutableBuffer(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","description":"space.kscience.kmath.operations.mutableBuffer","location":"kmath-core/space.kscience.kmath.operations/mutable-buffer.html","searchKeys":["mutableBuffer","inline fun BigInt.mutableBuffer(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","space.kscience.kmath.operations.mutableBuffer"]},{"name":"inline fun Buffer.Companion.bigInt(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","description":"space.kscience.kmath.operations.bigInt","location":"kmath-core/space.kscience.kmath.operations/big-int.html","searchKeys":["bigInt","inline fun Buffer.Companion.bigInt(size: Int, initializer: (Int) -> BigInt): Buffer<BigInt>","space.kscience.kmath.operations.bigInt"]},{"name":"inline fun BufferedRingND<Short, ShortRing>.produceInline(crossinline initializer: ShortRing.(Int) -> Short): BufferND<Short>","description":"space.kscience.kmath.nd.produceInline","location":"kmath-core/space.kscience.kmath.nd/produce-inline.html","searchKeys":["produceInline","inline fun BufferedRingND<Short, ShortRing>.produceInline(crossinline initializer: ShortRing.(Int) -> Short): BufferND<Short>","space.kscience.kmath.nd.produceInline"]},{"name":"inline fun DoubleBuffer(size: Int, init: (Int) -> Double): DoubleBuffer","description":"space.kscience.kmath.structures.DoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-double-buffer.html","searchKeys":["DoubleBuffer","inline fun DoubleBuffer(size: Int, init: (Int) -> Double): DoubleBuffer","space.kscience.kmath.structures.DoubleBuffer"]},{"name":"inline fun DoubleField.expression(block: FunctionalExpressionExtendedField<Double, DoubleField>.() -> Expression<Double>): Expression<Double>","description":"space.kscience.kmath.expressions.expression","location":"kmath-core/space.kscience.kmath.expressions/expression.html","searchKeys":["expression","inline fun DoubleField.expression(block: FunctionalExpressionExtendedField<Double, DoubleField>.() -> Expression<Double>): Expression<Double>","space.kscience.kmath.expressions.expression"]},{"name":"inline fun FlaggedDoubleBuffer.forEachValid(block: (Double) -> Unit)","description":"space.kscience.kmath.structures.forEachValid","location":"kmath-core/space.kscience.kmath.structures/for-each-valid.html","searchKeys":["forEachValid","inline fun FlaggedDoubleBuffer.forEachValid(block: (Double) -> Unit)","space.kscience.kmath.structures.forEachValid"]},{"name":"inline fun FloatBuffer(size: Int, init: (Int) -> Float): FloatBuffer","description":"space.kscience.kmath.structures.FloatBuffer","location":"kmath-core/space.kscience.kmath.structures/-float-buffer.html","searchKeys":["FloatBuffer","inline fun FloatBuffer(size: Int, init: (Int) -> Float): FloatBuffer","space.kscience.kmath.structures.FloatBuffer"]},{"name":"inline fun IntBuffer(size: Int, init: (Int) -> Int): IntBuffer","description":"space.kscience.kmath.structures.IntBuffer","location":"kmath-core/space.kscience.kmath.structures/-int-buffer.html","searchKeys":["IntBuffer","inline fun IntBuffer(size: Int, init: (Int) -> Int): IntBuffer","space.kscience.kmath.structures.IntBuffer"]},{"name":"inline fun LongBuffer(size: Int, init: (Int) -> Long): LongBuffer","description":"space.kscience.kmath.structures.LongBuffer","location":"kmath-core/space.kscience.kmath.structures/-long-buffer.html","searchKeys":["LongBuffer","inline fun LongBuffer(size: Int, init: (Int) -> Long): LongBuffer","space.kscience.kmath.structures.LongBuffer"]},{"name":"inline fun MutableBuffer.Companion.bigInt(size: Int, initializer: (Int) -> BigInt): MutableBuffer<BigInt>","description":"space.kscience.kmath.operations.bigInt","location":"kmath-core/space.kscience.kmath.operations/big-int.html","searchKeys":["bigInt","inline fun MutableBuffer.Companion.bigInt(size: Int, initializer: (Int) -> BigInt): MutableBuffer<BigInt>","space.kscience.kmath.operations.bigInt"]},{"name":"inline fun ShortBuffer(size: Int, init: (Int) -> Short): ShortBuffer","description":"space.kscience.kmath.structures.ShortBuffer","location":"kmath-core/space.kscience.kmath.structures/-short-buffer.html","searchKeys":["ShortBuffer","inline fun ShortBuffer(size: Int, init: (Int) -> Short): ShortBuffer","space.kscience.kmath.structures.ShortBuffer"]},{"name":"inline fun double(size: Int, initializer: (Int) -> Double): DoubleBuffer","description":"space.kscience.kmath.structures.MutableBuffer.Companion.double","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/double.html","searchKeys":["double","inline fun double(size: Int, initializer: (Int) -> Double): DoubleBuffer","space.kscience.kmath.structures.MutableBuffer.Companion.double"]},{"name":"inline fun float(size: Int, initializer: (Int) -> Float): FloatBuffer","description":"space.kscience.kmath.structures.MutableBuffer.Companion.float","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/float.html","searchKeys":["float","inline fun float(size: Int, initializer: (Int) -> Float): FloatBuffer","space.kscience.kmath.structures.MutableBuffer.Companion.float"]},{"name":"inline fun int(size: Int, initializer: (Int) -> Int): IntBuffer","description":"space.kscience.kmath.structures.MutableBuffer.Companion.int","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/int.html","searchKeys":["int","inline fun int(size: Int, initializer: (Int) -> Int): IntBuffer","space.kscience.kmath.structures.MutableBuffer.Companion.int"]},{"name":"inline fun long(size: Int, initializer: (Int) -> Long): LongBuffer","description":"space.kscience.kmath.structures.MutableBuffer.Companion.long","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/long.html","searchKeys":["long","inline fun long(size: Int, initializer: (Int) -> Long): LongBuffer","space.kscience.kmath.structures.MutableBuffer.Companion.long"]},{"name":"inline fun short(size: Int, initializer: (Int) -> Short): ShortBuffer","description":"space.kscience.kmath.structures.MutableBuffer.Companion.short","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/short.html","searchKeys":["short","inline fun short(size: Int, initializer: (Int) -> Short): ShortBuffer","space.kscience.kmath.structures.MutableBuffer.Companion.short"]},{"name":"inline operator fun <A : Algebra<*>, R> A.invoke(block: A.() -> R): R","description":"space.kscience.kmath.operations.invoke","location":"kmath-core/space.kscience.kmath.operations/invoke.html","searchKeys":["invoke","inline operator fun <A : Algebra<*>, R> A.invoke(block: A.() -> R): R","space.kscience.kmath.operations.invoke"]},{"name":"inline operator fun <LS : LinearSpace<*, *>, R> LS.invoke(block: LS.() -> R): R","description":"space.kscience.kmath.linear.invoke","location":"kmath-core/space.kscience.kmath.linear/invoke.html","searchKeys":["invoke","inline operator fun <LS : LinearSpace<*, *>, R> LS.invoke(block: LS.() -> R): R","space.kscience.kmath.linear.invoke"]},{"name":"interface Algebra<T>","description":"space.kscience.kmath.operations.Algebra","location":"kmath-core/space.kscience.kmath.operations/-algebra/index.html","searchKeys":["Algebra","interface Algebra<T>","space.kscience.kmath.operations.Algebra"]},{"name":"interface AlgebraND<T, out C : Algebra<T>>","description":"space.kscience.kmath.nd.AlgebraND","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/index.html","searchKeys":["AlgebraND","interface AlgebraND<T, out C : Algebra<T>>","space.kscience.kmath.nd.AlgebraND"]},{"name":"interface Buffer<out T>","description":"space.kscience.kmath.structures.Buffer","location":"kmath-core/space.kscience.kmath.structures/-buffer/index.html","searchKeys":["Buffer","interface Buffer<out T>","space.kscience.kmath.structures.Buffer"]},{"name":"interface BufferAlgebra<T, A : Algebra<T>> : Algebra<Buffer<T>> ","description":"space.kscience.kmath.operations.BufferAlgebra","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/index.html","searchKeys":["BufferAlgebra","interface BufferAlgebra<T, A : Algebra<T>> : Algebra<Buffer<T>> ","space.kscience.kmath.operations.BufferAlgebra"]},{"name":"interface BufferAlgebraND<T, out A : Algebra<T>> : AlgebraND<T, A> ","description":"space.kscience.kmath.nd.BufferAlgebraND","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/index.html","searchKeys":["BufferAlgebraND","interface BufferAlgebraND<T, out A : Algebra<T>> : AlgebraND<T, A> ","space.kscience.kmath.nd.BufferAlgebraND"]},{"name":"interface CholeskyDecompositionFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.CholeskyDecompositionFeature","location":"kmath-core/space.kscience.kmath.linear/-cholesky-decomposition-feature/index.html","searchKeys":["CholeskyDecompositionFeature","interface CholeskyDecompositionFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.CholeskyDecompositionFeature"]},{"name":"interface ColumnarData<out T>","description":"space.kscience.kmath.data.ColumnarData","location":"kmath-core/space.kscience.kmath.data/-columnar-data/index.html","searchKeys":["ColumnarData","interface ColumnarData<out T>","space.kscience.kmath.data.ColumnarData"]},{"name":"interface DeterminantFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.DeterminantFeature","location":"kmath-core/space.kscience.kmath.linear/-determinant-feature/index.html","searchKeys":["DeterminantFeature","interface DeterminantFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.DeterminantFeature"]},{"name":"interface DiagonalFeature : MatrixFeature","description":"space.kscience.kmath.linear.DiagonalFeature","location":"kmath-core/space.kscience.kmath.linear/-diagonal-feature/index.html","searchKeys":["DiagonalFeature","interface DiagonalFeature : MatrixFeature","space.kscience.kmath.linear.DiagonalFeature"]},{"name":"interface DifferentiableExpression<T> : Expression<T> ","description":"space.kscience.kmath.expressions.DifferentiableExpression","location":"kmath-core/space.kscience.kmath.expressions/-differentiable-expression/index.html","searchKeys":["DifferentiableExpression","interface DifferentiableExpression<T> : Expression<T> ","space.kscience.kmath.expressions.DifferentiableExpression"]},{"name":"interface Domain<in T : Any>","description":"space.kscience.kmath.domains.Domain","location":"kmath-core/space.kscience.kmath.domains/-domain/index.html","searchKeys":["Domain","interface Domain<in T : Any>","space.kscience.kmath.domains.Domain"]},{"name":"interface DoubleDomain : Domain<Double> ","description":"space.kscience.kmath.domains.DoubleDomain","location":"kmath-core/space.kscience.kmath.domains/-double-domain/index.html","searchKeys":["DoubleDomain","interface DoubleDomain : Domain<Double> ","space.kscience.kmath.domains.DoubleDomain"]},{"name":"interface ExponentialOperations<T> : Algebra<T> ","description":"space.kscience.kmath.operations.ExponentialOperations","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/index.html","searchKeys":["ExponentialOperations","interface ExponentialOperations<T> : Algebra<T> ","space.kscience.kmath.operations.ExponentialOperations"]},{"name":"interface ExpressionAlgebra<in T, E> : Algebra<E> ","description":"space.kscience.kmath.expressions.ExpressionAlgebra","location":"kmath-core/space.kscience.kmath.expressions/-expression-algebra/index.html","searchKeys":["ExpressionAlgebra","interface ExpressionAlgebra<in T, E> : Algebra<E> ","space.kscience.kmath.expressions.ExpressionAlgebra"]},{"name":"interface ExtendedField<T> : ExtendedFieldOperations<T> , Field<T> , NumericAlgebra<T> ","description":"space.kscience.kmath.operations.ExtendedField","location":"kmath-core/space.kscience.kmath.operations/-extended-field/index.html","searchKeys":["ExtendedField","interface ExtendedField<T> : ExtendedFieldOperations<T> , Field<T> , NumericAlgebra<T> ","space.kscience.kmath.operations.ExtendedField"]},{"name":"interface ExtendedFieldOperations<T> : FieldOperations<T> , TrigonometricOperations<T> , PowerOperations<T> , ExponentialOperations<T> , ScaleOperations<T> ","description":"space.kscience.kmath.operations.ExtendedFieldOperations","location":"kmath-core/space.kscience.kmath.operations/-extended-field-operations/index.html","searchKeys":["ExtendedFieldOperations","interface ExtendedFieldOperations<T> : FieldOperations<T> , TrigonometricOperations<T> , PowerOperations<T> , ExponentialOperations<T> , ScaleOperations<T> ","space.kscience.kmath.operations.ExtendedFieldOperations"]},{"name":"interface Feature<F : Feature<F>>","description":"space.kscience.kmath.misc.Feature","location":"kmath-core/space.kscience.kmath.misc/-feature/index.html","searchKeys":["Feature","interface Feature<F : Feature<F>>","space.kscience.kmath.misc.Feature"]},{"name":"interface Featured<F : Any>","description":"space.kscience.kmath.misc.Featured","location":"kmath-core/space.kscience.kmath.misc/-featured/index.html","searchKeys":["Featured","interface Featured<F : Any>","space.kscience.kmath.misc.Featured"]},{"name":"interface Field<T> : Ring<T> , FieldOperations<T> , ScaleOperations<T> , NumericAlgebra<T> ","description":"space.kscience.kmath.operations.Field","location":"kmath-core/space.kscience.kmath.operations/-field/index.html","searchKeys":["Field","interface Field<T> : Ring<T> , FieldOperations<T> , ScaleOperations<T> , NumericAlgebra<T> ","space.kscience.kmath.operations.Field"]},{"name":"interface FieldND<T, out F : Field<T>> : Field<StructureND<T>> , RingND<T, F> ","description":"space.kscience.kmath.nd.FieldND","location":"kmath-core/space.kscience.kmath.nd/-field-n-d/index.html","searchKeys":["FieldND","interface FieldND<T, out F : Field<T>> : Field<StructureND<T>> , RingND<T, F> ","space.kscience.kmath.nd.FieldND"]},{"name":"interface FieldOperations<T> : RingOperations<T> ","description":"space.kscience.kmath.operations.FieldOperations","location":"kmath-core/space.kscience.kmath.operations/-field-operations/index.html","searchKeys":["FieldOperations","interface FieldOperations<T> : RingOperations<T> ","space.kscience.kmath.operations.FieldOperations"]},{"name":"interface FlaggedBuffer<out T> : Buffer<T> ","description":"space.kscience.kmath.structures.FlaggedBuffer","location":"kmath-core/space.kscience.kmath.structures/-flagged-buffer/index.html","searchKeys":["FlaggedBuffer","interface FlaggedBuffer<out T> : Buffer<T> ","space.kscience.kmath.structures.FlaggedBuffer"]},{"name":"interface Group<T> : GroupOperations<T> ","description":"space.kscience.kmath.operations.Group","location":"kmath-core/space.kscience.kmath.operations/-group/index.html","searchKeys":["Group","interface Group<T> : GroupOperations<T> ","space.kscience.kmath.operations.Group"]},{"name":"interface GroupND<T, out S : Group<T>> : Group<StructureND<T>> , AlgebraND<T, S> ","description":"space.kscience.kmath.nd.GroupND","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/index.html","searchKeys":["GroupND","interface GroupND<T, out S : Group<T>> : Group<StructureND<T>> , AlgebraND<T, S> ","space.kscience.kmath.nd.GroupND"]},{"name":"interface GroupOperations<T> : Algebra<T> ","description":"space.kscience.kmath.operations.GroupOperations","location":"kmath-core/space.kscience.kmath.operations/-group-operations/index.html","searchKeys":["GroupOperations","interface GroupOperations<T> : Algebra<T> ","space.kscience.kmath.operations.GroupOperations"]},{"name":"interface InverseMatrixFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.InverseMatrixFeature","location":"kmath-core/space.kscience.kmath.linear/-inverse-matrix-feature/index.html","searchKeys":["InverseMatrixFeature","interface InverseMatrixFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.InverseMatrixFeature"]},{"name":"interface LUDecompositionFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.LUDecompositionFeature","location":"kmath-core/space.kscience.kmath.linear/-l-u-decomposition-feature/index.html","searchKeys":["LUDecompositionFeature","interface LUDecompositionFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.LUDecompositionFeature"]},{"name":"interface LinearSolver<T : Any>","description":"space.kscience.kmath.linear.LinearSolver","location":"kmath-core/space.kscience.kmath.linear/-linear-solver/index.html","searchKeys":["LinearSolver","interface LinearSolver<T : Any>","space.kscience.kmath.linear.LinearSolver"]},{"name":"interface LinearSpace<T, out A : Ring<T>>","description":"space.kscience.kmath.linear.LinearSpace","location":"kmath-core/space.kscience.kmath.linear/-linear-space/index.html","searchKeys":["LinearSpace","interface LinearSpace<T, out A : Ring<T>>","space.kscience.kmath.linear.LinearSpace"]},{"name":"interface LogicAlgebra<T : Any> : Algebra<T> ","description":"space.kscience.kmath.operations.LogicAlgebra","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/index.html","searchKeys":["LogicAlgebra","interface LogicAlgebra<T : Any> : Algebra<T> ","space.kscience.kmath.operations.LogicAlgebra"]},{"name":"interface LupDecompositionFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.LupDecompositionFeature","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition-feature/index.html","searchKeys":["LupDecompositionFeature","interface LupDecompositionFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.LupDecompositionFeature"]},{"name":"interface MST","description":"space.kscience.kmath.expressions.MST","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/index.html","searchKeys":["MST","interface MST","space.kscience.kmath.expressions.MST"]},{"name":"interface MatrixFeature : StructureFeature","description":"space.kscience.kmath.linear.MatrixFeature","location":"kmath-core/space.kscience.kmath.linear/-matrix-feature/index.html","searchKeys":["MatrixFeature","interface MatrixFeature : StructureFeature","space.kscience.kmath.linear.MatrixFeature"]},{"name":"interface MutableBuffer<T> : Buffer<T> ","description":"space.kscience.kmath.structures.MutableBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/index.html","searchKeys":["MutableBuffer","interface MutableBuffer<T> : Buffer<T> ","space.kscience.kmath.structures.MutableBuffer"]},{"name":"interface MutableStructure1D<T> : Structure1D<T> , MutableStructureND<T> , MutableBuffer<T> ","description":"space.kscience.kmath.nd.MutableStructure1D","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure1-d/index.html","searchKeys":["MutableStructure1D","interface MutableStructure1D<T> : Structure1D<T> , MutableStructureND<T> , MutableBuffer<T> ","space.kscience.kmath.nd.MutableStructure1D"]},{"name":"interface MutableStructure2D<T> : Structure2D<T> , MutableStructureND<T> ","description":"space.kscience.kmath.nd.MutableStructure2D","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure2-d/index.html","searchKeys":["MutableStructure2D","interface MutableStructure2D<T> : Structure2D<T> , MutableStructureND<T> ","space.kscience.kmath.nd.MutableStructure2D"]},{"name":"interface MutableStructureND<T> : StructureND<T> ","description":"space.kscience.kmath.nd.MutableStructureND","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure-n-d/index.html","searchKeys":["MutableStructureND","interface MutableStructureND<T> : StructureND<T> ","space.kscience.kmath.nd.MutableStructureND"]},{"name":"interface Norm<in T : Any, out R>","description":"space.kscience.kmath.operations.Norm","location":"kmath-core/space.kscience.kmath.operations/-norm/index.html","searchKeys":["Norm","interface Norm<in T : Any, out R>","space.kscience.kmath.operations.Norm"]},{"name":"interface NumbersAddOperations<T> : Ring<T> , NumericAlgebra<T> ","description":"space.kscience.kmath.operations.NumbersAddOperations","location":"kmath-core/space.kscience.kmath.operations/-numbers-add-operations/index.html","searchKeys":["NumbersAddOperations","interface NumbersAddOperations<T> : Ring<T> , NumericAlgebra<T> ","space.kscience.kmath.operations.NumbersAddOperations"]},{"name":"interface NumericAlgebra<T> : Algebra<T> ","description":"space.kscience.kmath.operations.NumericAlgebra","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/index.html","searchKeys":["NumericAlgebra","interface NumericAlgebra<T> : Algebra<T> ","space.kscience.kmath.operations.NumericAlgebra"]},{"name":"interface PowerOperations<T> : Algebra<T> ","description":"space.kscience.kmath.operations.PowerOperations","location":"kmath-core/space.kscience.kmath.operations/-power-operations/index.html","searchKeys":["PowerOperations","interface PowerOperations<T> : Algebra<T> ","space.kscience.kmath.operations.PowerOperations"]},{"name":"interface QRDecompositionFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.QRDecompositionFeature","location":"kmath-core/space.kscience.kmath.linear/-q-r-decomposition-feature/index.html","searchKeys":["QRDecompositionFeature","interface QRDecompositionFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.QRDecompositionFeature"]},{"name":"interface Ring<T> : Group<T> , RingOperations<T> ","description":"space.kscience.kmath.operations.Ring","location":"kmath-core/space.kscience.kmath.operations/-ring/index.html","searchKeys":["Ring","interface Ring<T> : Group<T> , RingOperations<T> ","space.kscience.kmath.operations.Ring"]},{"name":"interface RingND<T, out R : Ring<T>> : Ring<StructureND<T>> , GroupND<T, R> ","description":"space.kscience.kmath.nd.RingND","location":"kmath-core/space.kscience.kmath.nd/-ring-n-d/index.html","searchKeys":["RingND","interface RingND<T, out R : Ring<T>> : Ring<StructureND<T>> , GroupND<T, R> ","space.kscience.kmath.nd.RingND"]},{"name":"interface RingOperations<T> : GroupOperations<T> ","description":"space.kscience.kmath.operations.RingOperations","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/index.html","searchKeys":["RingOperations","interface RingOperations<T> : GroupOperations<T> ","space.kscience.kmath.operations.RingOperations"]},{"name":"interface ScaleOperations<T> : Algebra<T> ","description":"space.kscience.kmath.operations.ScaleOperations","location":"kmath-core/space.kscience.kmath.operations/-scale-operations/index.html","searchKeys":["ScaleOperations","interface ScaleOperations<T> : Algebra<T> ","space.kscience.kmath.operations.ScaleOperations"]},{"name":"interface SingularValueDecompositionFeature<out T : Any> : MatrixFeature","description":"space.kscience.kmath.linear.SingularValueDecompositionFeature","location":"kmath-core/space.kscience.kmath.linear/-singular-value-decomposition-feature/index.html","searchKeys":["SingularValueDecompositionFeature","interface SingularValueDecompositionFeature<out T : Any> : MatrixFeature","space.kscience.kmath.linear.SingularValueDecompositionFeature"]},{"name":"interface SpecialDifferentiableExpression<T, out R : Expression<T>> : DifferentiableExpression<T> ","description":"space.kscience.kmath.expressions.SpecialDifferentiableExpression","location":"kmath-core/space.kscience.kmath.expressions/-special-differentiable-expression/index.html","searchKeys":["SpecialDifferentiableExpression","interface SpecialDifferentiableExpression<T, out R : Expression<T>> : DifferentiableExpression<T> ","space.kscience.kmath.expressions.SpecialDifferentiableExpression"]},{"name":"interface Strides","description":"space.kscience.kmath.nd.Strides","location":"kmath-core/space.kscience.kmath.nd/-strides/index.html","searchKeys":["Strides","interface Strides","space.kscience.kmath.nd.Strides"]},{"name":"interface Structure1D<out T> : StructureND<T> , Buffer<T> ","description":"space.kscience.kmath.nd.Structure1D","location":"kmath-core/space.kscience.kmath.nd/-structure1-d/index.html","searchKeys":["Structure1D","interface Structure1D<out T> : StructureND<T> , Buffer<T> ","space.kscience.kmath.nd.Structure1D"]},{"name":"interface Structure2D<out T> : StructureND<T> ","description":"space.kscience.kmath.nd.Structure2D","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/index.html","searchKeys":["Structure2D","interface Structure2D<out T> : StructureND<T> ","space.kscience.kmath.nd.Structure2D"]},{"name":"interface StructureFeature : Feature<StructureFeature> ","description":"space.kscience.kmath.nd.StructureFeature","location":"kmath-core/space.kscience.kmath.nd/-structure-feature/index.html","searchKeys":["StructureFeature","interface StructureFeature : Feature<StructureFeature> ","space.kscience.kmath.nd.StructureFeature"]},{"name":"interface StructureND<out T> : Featured<StructureFeature> ","description":"space.kscience.kmath.nd.StructureND","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/index.html","searchKeys":["StructureND","interface StructureND<out T> : Featured<StructureFeature> ","space.kscience.kmath.nd.StructureND"]},{"name":"interface Symbol : MST","description":"space.kscience.kmath.expressions.Symbol","location":"kmath-core/space.kscience.kmath.expressions/-symbol/index.html","searchKeys":["Symbol","interface Symbol : MST","space.kscience.kmath.expressions.Symbol"]},{"name":"interface SymbolIndexer","description":"space.kscience.kmath.expressions.SymbolIndexer","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/index.html","searchKeys":["SymbolIndexer","interface SymbolIndexer","space.kscience.kmath.expressions.SymbolIndexer"]},{"name":"interface TrigonometricOperations<T> : Algebra<T> ","description":"space.kscience.kmath.operations.TrigonometricOperations","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/index.html","searchKeys":["TrigonometricOperations","interface TrigonometricOperations<T> : Algebra<T> ","space.kscience.kmath.operations.TrigonometricOperations"]},{"name":"interface XYColumnarData<out T, out X : T, out Y : T> : ColumnarData<T> ","description":"space.kscience.kmath.data.XYColumnarData","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/index.html","searchKeys":["XYColumnarData","interface XYColumnarData<out T, out X : T, out Y : T> : ColumnarData<T> ","space.kscience.kmath.data.XYColumnarData"]},{"name":"interface XYErrorColumnarData<T, out X : T, out Y : T> : XYColumnarData<T, X, Y> ","description":"space.kscience.kmath.data.XYErrorColumnarData","location":"kmath-core/space.kscience.kmath.data/-x-y-error-columnar-data/index.html","searchKeys":["XYErrorColumnarData","interface XYErrorColumnarData<T, out X : T, out Y : T> : XYColumnarData<T, X, Y> ","space.kscience.kmath.data.XYErrorColumnarData"]},{"name":"interface XYZColumnarData<out T, out X : T, out Y : T, out Z : T> : XYColumnarData<T, X, Y> ","description":"space.kscience.kmath.data.XYZColumnarData","location":"kmath-core/space.kscience.kmath.data/-x-y-z-columnar-data/index.html","searchKeys":["XYZColumnarData","interface XYZColumnarData<out T, out X : T, out Y : T, out Z : T> : XYColumnarData<T, X, Y> ","space.kscience.kmath.data.XYZColumnarData"]},{"name":"object BigIntField : Field<BigInt> , NumbersAddOperations<BigInt> , ScaleOperations<BigInt> ","description":"space.kscience.kmath.operations.BigIntField","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/index.html","searchKeys":["BigIntField","object BigIntField : Field<BigInt> , NumbersAddOperations<BigInt> , ScaleOperations<BigInt> ","space.kscience.kmath.operations.BigIntField"]},{"name":"object BooleanAlgebra : LogicAlgebra<Boolean> ","description":"space.kscience.kmath.operations.BooleanAlgebra","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/index.html","searchKeys":["BooleanAlgebra","object BooleanAlgebra : LogicAlgebra<Boolean> ","space.kscience.kmath.operations.BooleanAlgebra"]},{"name":"object ByteRing : Ring<Byte> , Norm<Byte, Byte> , NumericAlgebra<Byte> ","description":"space.kscience.kmath.operations.ByteRing","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/index.html","searchKeys":["ByteRing","object ByteRing : Ring<Byte> , Norm<Byte, Byte> , NumericAlgebra<Byte> ","space.kscience.kmath.operations.ByteRing"]},{"name":"object Companion","description":"space.kscience.kmath.data.XYColumnarData.Companion","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.data.XYColumnarData.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.data.XYErrorColumnarData.Companion","location":"kmath-core/space.kscience.kmath.data/-x-y-error-columnar-data/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.data.XYErrorColumnarData.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.expressions.Symbol.Companion","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.expressions.Symbol.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.linear.LinearSpace.Companion","location":"kmath-core/space.kscience.kmath.linear/-linear-space/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.linear.LinearSpace.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.misc.FeatureSet.Companion","location":"kmath-core/space.kscience.kmath.misc/-feature-set/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.misc.FeatureSet.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.misc.Loggable.Companion","location":"kmath-core/space.kscience.kmath.misc/-loggable/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.misc.Loggable.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.AlgebraND.Companion","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.AlgebraND.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.DefaultStrides.Companion","location":"kmath-core/space.kscience.kmath.nd/-default-strides/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.DefaultStrides.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.GroupND.Companion","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.GroupND.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.RingND.Companion","location":"kmath-core/space.kscience.kmath.nd/-ring-n-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.RingND.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.Structure1D.Companion","location":"kmath-core/space.kscience.kmath.nd/-structure1-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.Structure1D.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.Structure2D.Companion","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.Structure2D.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd.StructureND.Companion","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd.StructureND.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.BigInt.Companion","location":"kmath-core/space.kscience.kmath.operations/-big-int/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.BigInt.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.ExponentialOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-exponential-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.ExponentialOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.FieldOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-field-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.FieldOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.GroupOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-group-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.GroupOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.LogicAlgebra.Companion","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.LogicAlgebra.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.PowerOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-power-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.PowerOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.RingOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.RingOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.operations.TrigonometricOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-trigonometric-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.operations.TrigonometricOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.structures.Buffer.Companion","location":"kmath-core/space.kscience.kmath.structures/-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.structures.Buffer.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.structures.DoubleBuffer.Companion","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.structures.DoubleBuffer.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.structures.MemoryBuffer.Companion","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.structures.MemoryBuffer.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.structures.MutableBuffer.Companion","location":"kmath-core/space.kscience.kmath.structures/-mutable-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.structures.MutableBuffer.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.structures.MutableMemoryBuffer.Companion","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.structures.MutableMemoryBuffer.Companion"]},{"name":"object Companion : DiagonalFeature","description":"space.kscience.kmath.linear.DiagonalFeature.Companion","location":"kmath-core/space.kscience.kmath.linear/-diagonal-feature/-companion/index.html","searchKeys":["Companion","object Companion : DiagonalFeature","space.kscience.kmath.linear.DiagonalFeature.Companion"]},{"name":"object Companion : DoubleBufferOperations","description":"space.kscience.kmath.operations.DoubleBufferOperations.Companion","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/-companion/index.html","searchKeys":["Companion","object Companion : DoubleBufferOperations","space.kscience.kmath.operations.DoubleBufferOperations.Companion"]},{"name":"object Companion : JBigDecimalFieldBase","description":"space.kscience.kmath.operations.JBigDecimalField.Companion","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field/-companion/index.html","searchKeys":["Companion","object Companion : JBigDecimalFieldBase","space.kscience.kmath.operations.JBigDecimalField.Companion"]},{"name":"object DoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","description":"space.kscience.kmath.operations.DoubleField","location":"kmath-core/space.kscience.kmath.operations/-double-field/index.html","searchKeys":["DoubleField","object DoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","space.kscience.kmath.operations.DoubleField"]},{"name":"object DoubleL2Norm : Norm<Point<Double>, Double> ","description":"space.kscience.kmath.operations.DoubleL2Norm","location":"kmath-core/space.kscience.kmath.operations/-double-l2-norm/index.html","searchKeys":["DoubleL2Norm","object DoubleL2Norm : Norm<Point<Double>, Double> ","space.kscience.kmath.operations.DoubleL2Norm"]},{"name":"object DoubleLinearSpace : LinearSpace<Double, DoubleField> ","description":"space.kscience.kmath.linear.DoubleLinearSpace","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/index.html","searchKeys":["DoubleLinearSpace","object DoubleLinearSpace : LinearSpace<Double, DoubleField> ","space.kscience.kmath.linear.DoubleLinearSpace"]},{"name":"object FloatField : ExtendedField<Float> , Norm<Float, Float> ","description":"space.kscience.kmath.operations.FloatField","location":"kmath-core/space.kscience.kmath.operations/-float-field/index.html","searchKeys":["FloatField","object FloatField : ExtendedField<Float> , Norm<Float, Float> ","space.kscience.kmath.operations.FloatField"]},{"name":"object IntRing : Ring<Int> , Norm<Int, Int> , NumericAlgebra<Int> ","description":"space.kscience.kmath.operations.IntRing","location":"kmath-core/space.kscience.kmath.operations/-int-ring/index.html","searchKeys":["IntRing","object IntRing : Ring<Int> , Norm<Int, Int> , NumericAlgebra<Int> ","space.kscience.kmath.operations.IntRing"]},{"name":"object JBigIntegerField : Ring<BigInteger> , NumericAlgebra<BigInteger> ","description":"space.kscience.kmath.operations.JBigIntegerField","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/index.html","searchKeys":["JBigIntegerField","object JBigIntegerField : Ring<BigInteger> , NumericAlgebra<BigInteger> ","space.kscience.kmath.operations.JBigIntegerField"]},{"name":"object LFeature : MatrixFeature","description":"space.kscience.kmath.linear.LFeature","location":"kmath-core/space.kscience.kmath.linear/-l-feature/index.html","searchKeys":["LFeature","object LFeature : MatrixFeature","space.kscience.kmath.linear.LFeature"]},{"name":"object LongRing : Ring<Long> , Norm<Long, Long> , NumericAlgebra<Long> ","description":"space.kscience.kmath.operations.LongRing","location":"kmath-core/space.kscience.kmath.operations/-long-ring/index.html","searchKeys":["LongRing","object LongRing : Ring<Long> , Norm<Long, Long> , NumericAlgebra<Long> ","space.kscience.kmath.operations.LongRing"]},{"name":"object MstExtendedField : ExtendedField<MST> , NumericAlgebra<MST> ","description":"space.kscience.kmath.expressions.MstExtendedField","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/index.html","searchKeys":["MstExtendedField","object MstExtendedField : ExtendedField<MST> , NumericAlgebra<MST> ","space.kscience.kmath.expressions.MstExtendedField"]},{"name":"object MstField : Field<MST> , NumbersAddOperations<MST> , ScaleOperations<MST> ","description":"space.kscience.kmath.expressions.MstField","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/index.html","searchKeys":["MstField","object MstField : Field<MST> , NumbersAddOperations<MST> , ScaleOperations<MST> ","space.kscience.kmath.expressions.MstField"]},{"name":"object MstGroup : Group<MST> , NumericAlgebra<MST> , ScaleOperations<MST> ","description":"space.kscience.kmath.expressions.MstGroup","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/index.html","searchKeys":["MstGroup","object MstGroup : Group<MST> , NumericAlgebra<MST> , ScaleOperations<MST> ","space.kscience.kmath.expressions.MstGroup"]},{"name":"object MstLogicAlgebra : LogicAlgebra<MST> ","description":"space.kscience.kmath.expressions.MstLogicAlgebra","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/index.html","searchKeys":["MstLogicAlgebra","object MstLogicAlgebra : LogicAlgebra<MST> ","space.kscience.kmath.expressions.MstLogicAlgebra"]},{"name":"object MstNumericAlgebra : NumericAlgebra<MST> ","description":"space.kscience.kmath.expressions.MstNumericAlgebra","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/index.html","searchKeys":["MstNumericAlgebra","object MstNumericAlgebra : NumericAlgebra<MST> ","space.kscience.kmath.expressions.MstNumericAlgebra"]},{"name":"object MstRing : Ring<MST> , NumbersAddOperations<MST> , ScaleOperations<MST> ","description":"space.kscience.kmath.expressions.MstRing","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/index.html","searchKeys":["MstRing","object MstRing : Ring<MST> , NumbersAddOperations<MST> , ScaleOperations<MST> ","space.kscience.kmath.expressions.MstRing"]},{"name":"object OrthogonalFeature : MatrixFeature","description":"space.kscience.kmath.linear.OrthogonalFeature","location":"kmath-core/space.kscience.kmath.linear/-orthogonal-feature/index.html","searchKeys":["OrthogonalFeature","object OrthogonalFeature : MatrixFeature","space.kscience.kmath.linear.OrthogonalFeature"]},{"name":"object ShortRing : Ring<Short> , Norm<Short, Short> , NumericAlgebra<Short> ","description":"space.kscience.kmath.operations.ShortRing","location":"kmath-core/space.kscience.kmath.operations/-short-ring/index.html","searchKeys":["ShortRing","object ShortRing : Ring<Short> , Norm<Short, Short> , NumericAlgebra<Short> ","space.kscience.kmath.operations.ShortRing"]},{"name":"object SymmetricMatrixFeature : MatrixFeature","description":"space.kscience.kmath.linear.SymmetricMatrixFeature","location":"kmath-core/space.kscience.kmath.linear/-symmetric-matrix-feature/index.html","searchKeys":["SymmetricMatrixFeature","object SymmetricMatrixFeature : MatrixFeature","space.kscience.kmath.linear.SymmetricMatrixFeature"]},{"name":"object UFeature : MatrixFeature","description":"space.kscience.kmath.linear.UFeature","location":"kmath-core/space.kscience.kmath.linear/-u-feature/index.html","searchKeys":["UFeature","object UFeature : MatrixFeature","space.kscience.kmath.linear.UFeature"]},{"name":"object UnitFeature : DiagonalFeature","description":"space.kscience.kmath.linear.UnitFeature","location":"kmath-core/space.kscience.kmath.linear/-unit-feature/index.html","searchKeys":["UnitFeature","object UnitFeature : DiagonalFeature","space.kscience.kmath.linear.UnitFeature"]},{"name":"object ZeroFeature : DiagonalFeature","description":"space.kscience.kmath.linear.ZeroFeature","location":"kmath-core/space.kscience.kmath.linear/-zero-feature/index.html","searchKeys":["ZeroFeature","object ZeroFeature : DiagonalFeature","space.kscience.kmath.linear.ZeroFeature"]},{"name":"open class AutoDiffValue<out T>(value: T)","description":"space.kscience.kmath.expressions.AutoDiffValue","location":"kmath-core/space.kscience.kmath.expressions/-auto-diff-value/index.html","searchKeys":["AutoDiffValue","open class AutoDiffValue<out T>(value: T)","space.kscience.kmath.expressions.AutoDiffValue"]},{"name":"open class BufferND<out T>(strides: Strides, buffer: Buffer<T>) : StructureND<T> ","description":"space.kscience.kmath.nd.BufferND","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/index.html","searchKeys":["BufferND","open class BufferND<out T>(strides: Strides, buffer: Buffer<T>) : StructureND<T> ","space.kscience.kmath.nd.BufferND"]},{"name":"open class BufferedFieldND<T, out R : Field<T>>(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>) : BufferedRingND<T, R> , FieldND<T, R> ","description":"space.kscience.kmath.nd.BufferedFieldND","location":"kmath-core/space.kscience.kmath.nd/-buffered-field-n-d/index.html","searchKeys":["BufferedFieldND","open class BufferedFieldND<T, out R : Field<T>>(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>) : BufferedRingND<T, R> , FieldND<T, R> ","space.kscience.kmath.nd.BufferedFieldND"]},{"name":"open class BufferedGroupND<T, out A : Group<T>>(shape: IntArray, elementContext: A, bufferFactory: BufferFactory<T>) : GroupND<T, A> , BufferAlgebraND<T, A> ","description":"space.kscience.kmath.nd.BufferedGroupND","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/index.html","searchKeys":["BufferedGroupND","open class BufferedGroupND<T, out A : Group<T>>(shape: IntArray, elementContext: A, bufferFactory: BufferFactory<T>) : GroupND<T, A> , BufferAlgebraND<T, A> ","space.kscience.kmath.nd.BufferedGroupND"]},{"name":"open class BufferedRingND<T, out R : Ring<T>>(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>) : BufferedGroupND<T, R> , RingND<T, R> ","description":"space.kscience.kmath.nd.BufferedRingND","location":"kmath-core/space.kscience.kmath.nd/-buffered-ring-n-d/index.html","searchKeys":["BufferedRingND","open class BufferedRingND<T, out R : Ring<T>>(shape: IntArray, elementContext: R, bufferFactory: BufferFactory<T>) : BufferedGroupND<T, R> , RingND<T, R> ","space.kscience.kmath.nd.BufferedRingND"]},{"name":"open class FunctionalExpressionExtendedField<T, out A : ExtendedField<T>>(algebra: A) : FunctionalExpressionField<T, A> , ExtendedField<Expression<T>> ","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/index.html","searchKeys":["FunctionalExpressionExtendedField","open class FunctionalExpressionExtendedField<T, out A : ExtendedField<T>>(algebra: A) : FunctionalExpressionField<T, A> , ExtendedField<Expression<T>> ","space.kscience.kmath.expressions.FunctionalExpressionExtendedField"]},{"name":"open class FunctionalExpressionField<T, out A : Field<T>>(algebra: A) : FunctionalExpressionRing<T, A> , Field<Expression<T>> , ScaleOperations<Expression<T>> ","description":"space.kscience.kmath.expressions.FunctionalExpressionField","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/index.html","searchKeys":["FunctionalExpressionField","open class FunctionalExpressionField<T, out A : Field<T>>(algebra: A) : FunctionalExpressionRing<T, A> , Field<Expression<T>> , ScaleOperations<Expression<T>> ","space.kscience.kmath.expressions.FunctionalExpressionField"]},{"name":"open class FunctionalExpressionGroup<T, out A : Group<T>>(algebra: A) : FunctionalExpressionAlgebra<T, A> , Group<Expression<T>> ","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/index.html","searchKeys":["FunctionalExpressionGroup","open class FunctionalExpressionGroup<T, out A : Group<T>>(algebra: A) : FunctionalExpressionAlgebra<T, A> , Group<Expression<T>> ","space.kscience.kmath.expressions.FunctionalExpressionGroup"]},{"name":"open class FunctionalExpressionRing<T, out A : Ring<T>>(algebra: A) : FunctionalExpressionGroup<T, A> , Ring<Expression<T>> ","description":"space.kscience.kmath.expressions.FunctionalExpressionRing","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/index.html","searchKeys":["FunctionalExpressionRing","open class FunctionalExpressionRing<T, out A : Ring<T>>(algebra: A) : FunctionalExpressionGroup<T, A> , Ring<Expression<T>> ","space.kscience.kmath.expressions.FunctionalExpressionRing"]},{"name":"open class MemoryBuffer<T : Any>(memory: Memory, spec: MemorySpec<T>) : Buffer<T> ","description":"space.kscience.kmath.structures.MemoryBuffer","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/index.html","searchKeys":["MemoryBuffer","open class MemoryBuffer<T : Any>(memory: Memory, spec: MemorySpec<T>) : Buffer<T> ","space.kscience.kmath.structures.MemoryBuffer"]},{"name":"open class SimpleAutoDiffField<T : Any, F : Field<T>>(context: F, bindings: Map<Symbol, T>) : Field<AutoDiffValue<T>> , ExpressionAlgebra<T, AutoDiffValue<T>> , NumbersAddOperations<AutoDiffValue<T>> ","description":"space.kscience.kmath.expressions.SimpleAutoDiffField","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/index.html","searchKeys":["SimpleAutoDiffField","open class SimpleAutoDiffField<T : Any, F : Field<T>>(context: F, bindings: Map<Symbol, T>) : Field<AutoDiffValue<T>> , ExpressionAlgebra<T, AutoDiffValue<T>> , NumbersAddOperations<AutoDiffValue<T>> ","space.kscience.kmath.expressions.SimpleAutoDiffField"]},{"name":"open fun <F : StructureFeature> computeFeature(structure: Matrix<T>, type: KClass<out F>): F?","description":"space.kscience.kmath.linear.LinearSpace.computeFeature","location":"kmath-core/space.kscience.kmath.linear/-linear-space/compute-feature.html","searchKeys":["computeFeature","open fun <F : StructureFeature> computeFeature(structure: Matrix<T>, type: KClass<out F>): F?","space.kscience.kmath.linear.LinearSpace.computeFeature"]},{"name":"open fun <F : StructureFeature> getFeature(structure: StructureND<T>, type: KClass<out F>): F?","description":"space.kscience.kmath.nd.AlgebraND.getFeature","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/get-feature.html","searchKeys":["getFeature","open fun <F : StructureFeature> getFeature(structure: StructureND<T>, type: KClass<out F>): F?","space.kscience.kmath.nd.AlgebraND.getFeature"]},{"name":"open fun <T> Map<Symbol, T>.toList(): List<T>","description":"space.kscience.kmath.expressions.SymbolIndexer.toList","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-list.html","searchKeys":["toList","open fun <T> Map<Symbol, T>.toList(): List<T>","space.kscience.kmath.expressions.SymbolIndexer.toList"]},{"name":"open fun <T> Map<Symbol, T>.toPoint(bufferFactory: BufferFactory<T>): Point<T>","description":"space.kscience.kmath.expressions.SymbolIndexer.toPoint","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-point.html","searchKeys":["toPoint","open fun <T> Map<Symbol, T>.toPoint(bufferFactory: BufferFactory<T>): Point<T>","space.kscience.kmath.expressions.SymbolIndexer.toPoint"]},{"name":"open fun <T> Point<T>.toMap(): Map<Symbol, T>","description":"space.kscience.kmath.expressions.SymbolIndexer.toMap","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-map.html","searchKeys":["toMap","open fun <T> Point<T>.toMap(): Map<Symbol, T>","space.kscience.kmath.expressions.SymbolIndexer.toMap"]},{"name":"open fun Buffer<T>.map(block: (T) -> T): Buffer<T>","description":"space.kscience.kmath.operations.BufferAlgebra.map","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/map.html","searchKeys":["map","open fun Buffer<T>.map(block: (T) -> T): Buffer<T>","space.kscience.kmath.operations.BufferAlgebra.map"]},{"name":"open fun Buffer<T>.zip(other: Buffer<T>, block: (T, T) -> T): Buffer<T>","description":"space.kscience.kmath.operations.BufferAlgebra.zip","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/zip.html","searchKeys":["zip","open fun Buffer<T>.zip(other: Buffer<T>, block: (T, T) -> T): Buffer<T>","space.kscience.kmath.operations.BufferAlgebra.zip"]},{"name":"open fun DoubleArray.toMap(): Map<Symbol, Double>","description":"space.kscience.kmath.expressions.SymbolIndexer.toMap","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-map.html","searchKeys":["toMap","open fun DoubleArray.toMap(): Map<Symbol, Double>","space.kscience.kmath.expressions.SymbolIndexer.toMap"]},{"name":"open fun Map<Symbol, Double>.toDoubleArray(): DoubleArray","description":"space.kscience.kmath.expressions.SymbolIndexer.toDoubleArray","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-double-array.html","searchKeys":["toDoubleArray","open fun Map<Symbol, Double>.toDoubleArray(): DoubleArray","space.kscience.kmath.expressions.SymbolIndexer.toDoubleArray"]},{"name":"open fun Map<Symbol, Double>.toPoint(): DoubleBuffer","description":"space.kscience.kmath.expressions.SymbolIndexer.toPoint","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/to-point.html","searchKeys":["toPoint","open fun Map<Symbol, Double>.toPoint(): DoubleBuffer","space.kscience.kmath.expressions.SymbolIndexer.toPoint"]},{"name":"open fun binaryOperation(operation: String, left: T, right: T): T","description":"space.kscience.kmath.operations.Algebra.binaryOperation","location":"kmath-core/space.kscience.kmath.operations/-algebra/binary-operation.html","searchKeys":["binaryOperation","open fun binaryOperation(operation: String, left: T, right: T): T","space.kscience.kmath.operations.Algebra.binaryOperation"]},{"name":"open fun binaryOperationFunction(operation: String): (T, T) -> T","description":"space.kscience.kmath.operations.Algebra.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-algebra/binary-operation-function.html","searchKeys":["binaryOperationFunction","open fun binaryOperationFunction(operation: String): (T, T) -> T","space.kscience.kmath.operations.Algebra.binaryOperationFunction"]},{"name":"open fun bindSymbol(value: String): T","description":"space.kscience.kmath.operations.Algebra.bindSymbol","location":"kmath-core/space.kscience.kmath.operations/-algebra/bind-symbol.html","searchKeys":["bindSymbol","open fun bindSymbol(value: String): T","space.kscience.kmath.operations.Algebra.bindSymbol"]},{"name":"open fun bindSymbolOrNull(value: String): T?","description":"space.kscience.kmath.operations.Algebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.operations/-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open fun bindSymbolOrNull(value: String): T?","space.kscience.kmath.operations.Algebra.bindSymbolOrNull"]},{"name":"open fun buffer(vararg elements: T): Buffer<T>","description":"space.kscience.kmath.operations.BufferAlgebra.buffer","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/buffer.html","searchKeys":["buffer","open fun buffer(vararg elements: T): Buffer<T>","space.kscience.kmath.operations.BufferAlgebra.buffer"]},{"name":"open fun indexOf(symbol: Symbol): Int","description":"space.kscience.kmath.expressions.SymbolIndexer.indexOf","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/index-of.html","searchKeys":["indexOf","open fun indexOf(symbol: Symbol): Int","space.kscience.kmath.expressions.SymbolIndexer.indexOf"]},{"name":"open fun indices(): Sequence<IntArray>","description":"space.kscience.kmath.nd.Strides.indices","location":"kmath-core/space.kscience.kmath.nd/-strides/indices.html","searchKeys":["indices","open fun indices(): Sequence<IntArray>","space.kscience.kmath.nd.Strides.indices"]},{"name":"open fun leftSideNumberOperation(operation: String, left: Number, right: T): T","description":"space.kscience.kmath.operations.NumericAlgebra.leftSideNumberOperation","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/left-side-number-operation.html","searchKeys":["leftSideNumberOperation","open fun leftSideNumberOperation(operation: String, left: Number, right: T): T","space.kscience.kmath.operations.NumericAlgebra.leftSideNumberOperation"]},{"name":"open fun leftSideNumberOperationFunction(operation: String): (left: Number, T) -> T","description":"space.kscience.kmath.operations.NumericAlgebra.leftSideNumberOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/left-side-number-operation-function.html","searchKeys":["leftSideNumberOperationFunction","open fun leftSideNumberOperationFunction(operation: String): (left: Number, T) -> T","space.kscience.kmath.operations.NumericAlgebra.leftSideNumberOperationFunction"]},{"name":"open fun offset(index: IntArray): Int","description":"space.kscience.kmath.nd.Strides.offset","location":"kmath-core/space.kscience.kmath.nd/-strides/offset.html","searchKeys":["offset","open fun offset(index: IntArray): Int","space.kscience.kmath.nd.Strides.offset"]},{"name":"open fun rightSideNumberOperation(operation: String, left: T, right: Number): T","description":"space.kscience.kmath.operations.NumericAlgebra.rightSideNumberOperation","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/right-side-number-operation.html","searchKeys":["rightSideNumberOperation","open fun rightSideNumberOperation(operation: String, left: T, right: Number): T","space.kscience.kmath.operations.NumericAlgebra.rightSideNumberOperation"]},{"name":"open fun rightSideNumberOperationFunction(operation: String): (T, right: Number) -> T","description":"space.kscience.kmath.operations.NumericAlgebra.rightSideNumberOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/right-side-number-operation-function.html","searchKeys":["rightSideNumberOperationFunction","open fun rightSideNumberOperationFunction(operation: String): (T, right: Number) -> T","space.kscience.kmath.operations.NumericAlgebra.rightSideNumberOperationFunction"]},{"name":"open fun solve(a: Matrix<T>, b: Point<T>): Point<T>","description":"space.kscience.kmath.linear.LinearSolver.solve","location":"kmath-core/space.kscience.kmath.linear/-linear-solver/solve.html","searchKeys":["solve","open fun solve(a: Matrix<T>, b: Point<T>): Point<T>","space.kscience.kmath.linear.LinearSolver.solve"]},{"name":"open fun sqrt(arg: T): T","description":"space.kscience.kmath.operations.PowerOperations.sqrt","location":"kmath-core/space.kscience.kmath.operations/-power-operations/sqrt.html","searchKeys":["sqrt","open fun sqrt(arg: T): T","space.kscience.kmath.operations.PowerOperations.sqrt"]},{"name":"open fun unaryOperation(operation: String, arg: T): T","description":"space.kscience.kmath.operations.Algebra.unaryOperation","location":"kmath-core/space.kscience.kmath.operations/-algebra/unary-operation.html","searchKeys":["unaryOperation","open fun unaryOperation(operation: String, arg: T): T","space.kscience.kmath.operations.Algebra.unaryOperation"]},{"name":"open fun unaryOperationFunction(operation: String): (T) -> T","description":"space.kscience.kmath.operations.Algebra.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-algebra/unary-operation-function.html","searchKeys":["unaryOperationFunction","open fun unaryOperationFunction(operation: String): (T) -> T","space.kscience.kmath.operations.Algebra.unaryOperationFunction"]},{"name":"open infix fun Matrix<T>.dot(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-linear-space/dot.html","searchKeys":["dot","open infix fun Matrix<T>.dot(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSpace.dot"]},{"name":"open infix fun Matrix<T>.dot(vector: Point<T>): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-linear-space/dot.html","searchKeys":["dot","open infix fun Matrix<T>.dot(vector: Point<T>): Point<T>","space.kscience.kmath.linear.LinearSpace.dot"]},{"name":"open infix fun T.pow(pow: Number): T","description":"space.kscience.kmath.operations.PowerOperations.pow","location":"kmath-core/space.kscience.kmath.operations/-power-operations/pow.html","searchKeys":["pow","open infix fun T.pow(pow: Number): T","space.kscience.kmath.operations.PowerOperations.pow"]},{"name":"open infix override fun Boolean.and(other: Boolean): Boolean","description":"space.kscience.kmath.operations.BooleanAlgebra.and","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/and.html","searchKeys":["and","open infix override fun Boolean.and(other: Boolean): Boolean","space.kscience.kmath.operations.BooleanAlgebra.and"]},{"name":"open infix override fun Boolean.or(other: Boolean): Boolean","description":"space.kscience.kmath.operations.BooleanAlgebra.or","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/or.html","searchKeys":["or","open infix override fun Boolean.or(other: Boolean): Boolean","space.kscience.kmath.operations.BooleanAlgebra.or"]},{"name":"open infix override fun Boolean.xor(other: Boolean): Boolean","description":"space.kscience.kmath.operations.BooleanAlgebra.xor","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/xor.html","searchKeys":["xor","open infix override fun Boolean.xor(other: Boolean): Boolean","space.kscience.kmath.operations.BooleanAlgebra.xor"]},{"name":"open infix override fun MST.and(other: MST): MST","description":"space.kscience.kmath.expressions.MstLogicAlgebra.and","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/and.html","searchKeys":["and","open infix override fun MST.and(other: MST): MST","space.kscience.kmath.expressions.MstLogicAlgebra.and"]},{"name":"open infix override fun MST.or(other: MST): MST","description":"space.kscience.kmath.expressions.MstLogicAlgebra.or","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/or.html","searchKeys":["or","open infix override fun MST.or(other: MST): MST","space.kscience.kmath.expressions.MstLogicAlgebra.or"]},{"name":"open infix override fun MST.xor(other: MST): MST","description":"space.kscience.kmath.expressions.MstLogicAlgebra.xor","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/xor.html","searchKeys":["xor","open infix override fun MST.xor(other: MST): MST","space.kscience.kmath.expressions.MstLogicAlgebra.xor"]},{"name":"open infix override fun Matrix<Double>.dot(other: Matrix<Double>): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(other: Matrix<Double>): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.dot"]},{"name":"open infix override fun Matrix<Double>.dot(vector: Point<Double>): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(vector: Point<Double>): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.dot"]},{"name":"open infix override fun Matrix<T>.dot(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<T>.dot(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.dot"]},{"name":"open infix override fun Matrix<T>.dot(vector: Point<T>): Point<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.dot","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<T>.dot(vector: Point<T>): Point<T>","space.kscience.kmath.linear.BufferedLinearSpace.dot"]},{"name":"open inline operator override fun Byte.minus(b: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.minus","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/minus.html","searchKeys":["minus","open inline operator override fun Byte.minus(b: Byte): Byte","space.kscience.kmath.operations.ByteRing.minus"]},{"name":"open inline operator override fun Byte.plus(b: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.plus","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/plus.html","searchKeys":["plus","open inline operator override fun Byte.plus(b: Byte): Byte","space.kscience.kmath.operations.ByteRing.plus"]},{"name":"open inline operator override fun Byte.times(b: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.times","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/times.html","searchKeys":["times","open inline operator override fun Byte.times(b: Byte): Byte","space.kscience.kmath.operations.ByteRing.times"]},{"name":"open inline operator override fun Byte.unaryMinus(): Byte","description":"space.kscience.kmath.operations.ByteRing.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Byte.unaryMinus(): Byte","space.kscience.kmath.operations.ByteRing.unaryMinus"]},{"name":"open inline operator override fun Double.div(b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.div","location":"kmath-core/space.kscience.kmath.operations/-double-field/div.html","searchKeys":["div","open inline operator override fun Double.div(b: Double): Double","space.kscience.kmath.operations.DoubleField.div"]},{"name":"open inline operator override fun Double.minus(b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.minus","location":"kmath-core/space.kscience.kmath.operations/-double-field/minus.html","searchKeys":["minus","open inline operator override fun Double.minus(b: Double): Double","space.kscience.kmath.operations.DoubleField.minus"]},{"name":"open inline operator override fun Double.plus(b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.plus","location":"kmath-core/space.kscience.kmath.operations/-double-field/plus.html","searchKeys":["plus","open inline operator override fun Double.plus(b: Double): Double","space.kscience.kmath.operations.DoubleField.plus"]},{"name":"open inline operator override fun Double.times(b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.times","location":"kmath-core/space.kscience.kmath.operations/-double-field/times.html","searchKeys":["times","open inline operator override fun Double.times(b: Double): Double","space.kscience.kmath.operations.DoubleField.times"]},{"name":"open inline operator override fun Double.unaryMinus(): Double","description":"space.kscience.kmath.operations.DoubleField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-double-field/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Double.unaryMinus(): Double","space.kscience.kmath.operations.DoubleField.unaryMinus"]},{"name":"open inline operator override fun Float.div(b: Float): Float","description":"space.kscience.kmath.operations.FloatField.div","location":"kmath-core/space.kscience.kmath.operations/-float-field/div.html","searchKeys":["div","open inline operator override fun Float.div(b: Float): Float","space.kscience.kmath.operations.FloatField.div"]},{"name":"open inline operator override fun Float.minus(b: Float): Float","description":"space.kscience.kmath.operations.FloatField.minus","location":"kmath-core/space.kscience.kmath.operations/-float-field/minus.html","searchKeys":["minus","open inline operator override fun Float.minus(b: Float): Float","space.kscience.kmath.operations.FloatField.minus"]},{"name":"open inline operator override fun Float.plus(b: Float): Float","description":"space.kscience.kmath.operations.FloatField.plus","location":"kmath-core/space.kscience.kmath.operations/-float-field/plus.html","searchKeys":["plus","open inline operator override fun Float.plus(b: Float): Float","space.kscience.kmath.operations.FloatField.plus"]},{"name":"open inline operator override fun Float.times(b: Float): Float","description":"space.kscience.kmath.operations.FloatField.times","location":"kmath-core/space.kscience.kmath.operations/-float-field/times.html","searchKeys":["times","open inline operator override fun Float.times(b: Float): Float","space.kscience.kmath.operations.FloatField.times"]},{"name":"open inline operator override fun Float.unaryMinus(): Float","description":"space.kscience.kmath.operations.FloatField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-float-field/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Float.unaryMinus(): Float","space.kscience.kmath.operations.FloatField.unaryMinus"]},{"name":"open inline operator override fun Int.minus(b: Int): Int","description":"space.kscience.kmath.operations.IntRing.minus","location":"kmath-core/space.kscience.kmath.operations/-int-ring/minus.html","searchKeys":["minus","open inline operator override fun Int.minus(b: Int): Int","space.kscience.kmath.operations.IntRing.minus"]},{"name":"open inline operator override fun Int.plus(b: Int): Int","description":"space.kscience.kmath.operations.IntRing.plus","location":"kmath-core/space.kscience.kmath.operations/-int-ring/plus.html","searchKeys":["plus","open inline operator override fun Int.plus(b: Int): Int","space.kscience.kmath.operations.IntRing.plus"]},{"name":"open inline operator override fun Int.times(b: Int): Int","description":"space.kscience.kmath.operations.IntRing.times","location":"kmath-core/space.kscience.kmath.operations/-int-ring/times.html","searchKeys":["times","open inline operator override fun Int.times(b: Int): Int","space.kscience.kmath.operations.IntRing.times"]},{"name":"open inline operator override fun Int.unaryMinus(): Int","description":"space.kscience.kmath.operations.IntRing.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-int-ring/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Int.unaryMinus(): Int","space.kscience.kmath.operations.IntRing.unaryMinus"]},{"name":"open inline operator override fun Long.minus(b: Long): Long","description":"space.kscience.kmath.operations.LongRing.minus","location":"kmath-core/space.kscience.kmath.operations/-long-ring/minus.html","searchKeys":["minus","open inline operator override fun Long.minus(b: Long): Long","space.kscience.kmath.operations.LongRing.minus"]},{"name":"open inline operator override fun Long.plus(b: Long): Long","description":"space.kscience.kmath.operations.LongRing.plus","location":"kmath-core/space.kscience.kmath.operations/-long-ring/plus.html","searchKeys":["plus","open inline operator override fun Long.plus(b: Long): Long","space.kscience.kmath.operations.LongRing.plus"]},{"name":"open inline operator override fun Long.times(b: Long): Long","description":"space.kscience.kmath.operations.LongRing.times","location":"kmath-core/space.kscience.kmath.operations/-long-ring/times.html","searchKeys":["times","open inline operator override fun Long.times(b: Long): Long","space.kscience.kmath.operations.LongRing.times"]},{"name":"open inline operator override fun Long.unaryMinus(): Long","description":"space.kscience.kmath.operations.LongRing.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-long-ring/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Long.unaryMinus(): Long","space.kscience.kmath.operations.LongRing.unaryMinus"]},{"name":"open inline operator override fun Short.minus(b: Short): Short","description":"space.kscience.kmath.operations.ShortRing.minus","location":"kmath-core/space.kscience.kmath.operations/-short-ring/minus.html","searchKeys":["minus","open inline operator override fun Short.minus(b: Short): Short","space.kscience.kmath.operations.ShortRing.minus"]},{"name":"open inline operator override fun Short.plus(b: Short): Short","description":"space.kscience.kmath.operations.ShortRing.plus","location":"kmath-core/space.kscience.kmath.operations/-short-ring/plus.html","searchKeys":["plus","open inline operator override fun Short.plus(b: Short): Short","space.kscience.kmath.operations.ShortRing.plus"]},{"name":"open inline operator override fun Short.times(b: Short): Short","description":"space.kscience.kmath.operations.ShortRing.times","location":"kmath-core/space.kscience.kmath.operations/-short-ring/times.html","searchKeys":["times","open inline operator override fun Short.times(b: Short): Short","space.kscience.kmath.operations.ShortRing.times"]},{"name":"open inline operator override fun Short.unaryMinus(): Short","description":"space.kscience.kmath.operations.ShortRing.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-short-ring/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Short.unaryMinus(): Short","space.kscience.kmath.operations.ShortRing.unaryMinus"]},{"name":"open inline override fun StructureND<Double>.map(transform: DoubleField.(Double) -> Double): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.map","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/map.html","searchKeys":["map","open inline override fun StructureND<Double>.map(transform: DoubleField.(Double) -> Double): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.map"]},{"name":"open inline override fun StructureND<Double>.mapIndexed(transform: DoubleField.(index: IntArray, Double) -> Double): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.mapIndexed","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/map-indexed.html","searchKeys":["mapIndexed","open inline override fun StructureND<Double>.mapIndexed(transform: DoubleField.(index: IntArray, Double) -> Double): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.mapIndexed"]},{"name":"open inline override fun acos(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.acos","location":"kmath-core/space.kscience.kmath.operations/-double-field/acos.html","searchKeys":["acos","open inline override fun acos(arg: Double): Double","space.kscience.kmath.operations.DoubleField.acos"]},{"name":"open inline override fun acos(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.acos","location":"kmath-core/space.kscience.kmath.operations/-float-field/acos.html","searchKeys":["acos","open inline override fun acos(arg: Float): Float","space.kscience.kmath.operations.FloatField.acos"]},{"name":"open inline override fun acosh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.acosh","location":"kmath-core/space.kscience.kmath.operations/-double-field/acosh.html","searchKeys":["acosh","open inline override fun acosh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.acosh"]},{"name":"open inline override fun acosh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.acosh","location":"kmath-core/space.kscience.kmath.operations/-float-field/acosh.html","searchKeys":["acosh","open inline override fun acosh(arg: Float): Float","space.kscience.kmath.operations.FloatField.acosh"]},{"name":"open inline override fun add(a: Byte, b: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.add","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/add.html","searchKeys":["add","open inline override fun add(a: Byte, b: Byte): Byte","space.kscience.kmath.operations.ByteRing.add"]},{"name":"open inline override fun add(a: Double, b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.add","location":"kmath-core/space.kscience.kmath.operations/-double-field/add.html","searchKeys":["add","open inline override fun add(a: Double, b: Double): Double","space.kscience.kmath.operations.DoubleField.add"]},{"name":"open inline override fun add(a: Float, b: Float): Float","description":"space.kscience.kmath.operations.FloatField.add","location":"kmath-core/space.kscience.kmath.operations/-float-field/add.html","searchKeys":["add","open inline override fun add(a: Float, b: Float): Float","space.kscience.kmath.operations.FloatField.add"]},{"name":"open inline override fun add(a: Int, b: Int): Int","description":"space.kscience.kmath.operations.IntRing.add","location":"kmath-core/space.kscience.kmath.operations/-int-ring/add.html","searchKeys":["add","open inline override fun add(a: Int, b: Int): Int","space.kscience.kmath.operations.IntRing.add"]},{"name":"open inline override fun add(a: Long, b: Long): Long","description":"space.kscience.kmath.operations.LongRing.add","location":"kmath-core/space.kscience.kmath.operations/-long-ring/add.html","searchKeys":["add","open inline override fun add(a: Long, b: Long): Long","space.kscience.kmath.operations.LongRing.add"]},{"name":"open inline override fun add(a: Short, b: Short): Short","description":"space.kscience.kmath.operations.ShortRing.add","location":"kmath-core/space.kscience.kmath.operations/-short-ring/add.html","searchKeys":["add","open inline override fun add(a: Short, b: Short): Short","space.kscience.kmath.operations.ShortRing.add"]},{"name":"open inline override fun asin(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.asin","location":"kmath-core/space.kscience.kmath.operations/-double-field/asin.html","searchKeys":["asin","open inline override fun asin(arg: Double): Double","space.kscience.kmath.operations.DoubleField.asin"]},{"name":"open inline override fun asin(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.asin","location":"kmath-core/space.kscience.kmath.operations/-float-field/asin.html","searchKeys":["asin","open inline override fun asin(arg: Float): Float","space.kscience.kmath.operations.FloatField.asin"]},{"name":"open inline override fun asinh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.asinh","location":"kmath-core/space.kscience.kmath.operations/-double-field/asinh.html","searchKeys":["asinh","open inline override fun asinh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.asinh"]},{"name":"open inline override fun asinh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.asinh","location":"kmath-core/space.kscience.kmath.operations/-float-field/asinh.html","searchKeys":["asinh","open inline override fun asinh(arg: Float): Float","space.kscience.kmath.operations.FloatField.asinh"]},{"name":"open inline override fun atan(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.atan","location":"kmath-core/space.kscience.kmath.operations/-double-field/atan.html","searchKeys":["atan","open inline override fun atan(arg: Double): Double","space.kscience.kmath.operations.DoubleField.atan"]},{"name":"open inline override fun atan(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.atan","location":"kmath-core/space.kscience.kmath.operations/-float-field/atan.html","searchKeys":["atan","open inline override fun atan(arg: Float): Float","space.kscience.kmath.operations.FloatField.atan"]},{"name":"open inline override fun atanh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.atanh","location":"kmath-core/space.kscience.kmath.operations/-double-field/atanh.html","searchKeys":["atanh","open inline override fun atanh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.atanh"]},{"name":"open inline override fun atanh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.atanh","location":"kmath-core/space.kscience.kmath.operations/-float-field/atanh.html","searchKeys":["atanh","open inline override fun atanh(arg: Float): Float","space.kscience.kmath.operations.FloatField.atanh"]},{"name":"open inline override fun combine(a: StructureND<Double>, b: StructureND<Double>, transform: DoubleField.(Double, Double) -> Double): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.combine","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/combine.html","searchKeys":["combine","open inline override fun combine(a: StructureND<Double>, b: StructureND<Double>, transform: DoubleField.(Double, Double) -> Double): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.combine"]},{"name":"open inline override fun cos(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.cos","location":"kmath-core/space.kscience.kmath.operations/-double-field/cos.html","searchKeys":["cos","open inline override fun cos(arg: Double): Double","space.kscience.kmath.operations.DoubleField.cos"]},{"name":"open inline override fun cos(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.cos","location":"kmath-core/space.kscience.kmath.operations/-float-field/cos.html","searchKeys":["cos","open inline override fun cos(arg: Float): Float","space.kscience.kmath.operations.FloatField.cos"]},{"name":"open inline override fun cosh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.cosh","location":"kmath-core/space.kscience.kmath.operations/-double-field/cosh.html","searchKeys":["cosh","open inline override fun cosh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.cosh"]},{"name":"open inline override fun cosh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.cosh","location":"kmath-core/space.kscience.kmath.operations/-float-field/cosh.html","searchKeys":["cosh","open inline override fun cosh(arg: Float): Float","space.kscience.kmath.operations.FloatField.cosh"]},{"name":"open inline override fun divide(a: Double, b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.divide","location":"kmath-core/space.kscience.kmath.operations/-double-field/divide.html","searchKeys":["divide","open inline override fun divide(a: Double, b: Double): Double","space.kscience.kmath.operations.DoubleField.divide"]},{"name":"open inline override fun divide(a: Float, b: Float): Float","description":"space.kscience.kmath.operations.FloatField.divide","location":"kmath-core/space.kscience.kmath.operations/-float-field/divide.html","searchKeys":["divide","open inline override fun divide(a: Float, b: Float): Float","space.kscience.kmath.operations.FloatField.divide"]},{"name":"open inline override fun exp(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.exp","location":"kmath-core/space.kscience.kmath.operations/-double-field/exp.html","searchKeys":["exp","open inline override fun exp(arg: Double): Double","space.kscience.kmath.operations.DoubleField.exp"]},{"name":"open inline override fun exp(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.exp","location":"kmath-core/space.kscience.kmath.operations/-float-field/exp.html","searchKeys":["exp","open inline override fun exp(arg: Float): Float","space.kscience.kmath.operations.FloatField.exp"]},{"name":"open inline override fun ln(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.ln","location":"kmath-core/space.kscience.kmath.operations/-double-field/ln.html","searchKeys":["ln","open inline override fun ln(arg: Double): Double","space.kscience.kmath.operations.DoubleField.ln"]},{"name":"open inline override fun ln(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.ln","location":"kmath-core/space.kscience.kmath.operations/-float-field/ln.html","searchKeys":["ln","open inline override fun ln(arg: Float): Float","space.kscience.kmath.operations.FloatField.ln"]},{"name":"open inline override fun multiply(a: Byte, b: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.multiply","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Byte, b: Byte): Byte","space.kscience.kmath.operations.ByteRing.multiply"]},{"name":"open inline override fun multiply(a: Double, b: Double): Double","description":"space.kscience.kmath.operations.DoubleField.multiply","location":"kmath-core/space.kscience.kmath.operations/-double-field/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Double, b: Double): Double","space.kscience.kmath.operations.DoubleField.multiply"]},{"name":"open inline override fun multiply(a: Float, b: Float): Float","description":"space.kscience.kmath.operations.FloatField.multiply","location":"kmath-core/space.kscience.kmath.operations/-float-field/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Float, b: Float): Float","space.kscience.kmath.operations.FloatField.multiply"]},{"name":"open inline override fun multiply(a: Int, b: Int): Int","description":"space.kscience.kmath.operations.IntRing.multiply","location":"kmath-core/space.kscience.kmath.operations/-int-ring/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Int, b: Int): Int","space.kscience.kmath.operations.IntRing.multiply"]},{"name":"open inline override fun multiply(a: Long, b: Long): Long","description":"space.kscience.kmath.operations.LongRing.multiply","location":"kmath-core/space.kscience.kmath.operations/-long-ring/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Long, b: Long): Long","space.kscience.kmath.operations.LongRing.multiply"]},{"name":"open inline override fun multiply(a: Short, b: Short): Short","description":"space.kscience.kmath.operations.ShortRing.multiply","location":"kmath-core/space.kscience.kmath.operations/-short-ring/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Short, b: Short): Short","space.kscience.kmath.operations.ShortRing.multiply"]},{"name":"open inline override fun norm(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.norm","location":"kmath-core/space.kscience.kmath.operations/-double-field/norm.html","searchKeys":["norm","open inline override fun norm(arg: Double): Double","space.kscience.kmath.operations.DoubleField.norm"]},{"name":"open inline override fun norm(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.norm","location":"kmath-core/space.kscience.kmath.operations/-float-field/norm.html","searchKeys":["norm","open inline override fun norm(arg: Float): Float","space.kscience.kmath.operations.FloatField.norm"]},{"name":"open inline override fun norm(arg: Int): Int","description":"space.kscience.kmath.operations.IntRing.norm","location":"kmath-core/space.kscience.kmath.operations/-int-ring/norm.html","searchKeys":["norm","open inline override fun norm(arg: Int): Int","space.kscience.kmath.operations.IntRing.norm"]},{"name":"open inline override fun number(value: Number): Double","description":"space.kscience.kmath.operations.DoubleField.number","location":"kmath-core/space.kscience.kmath.operations/-double-field/number.html","searchKeys":["number","open inline override fun number(value: Number): Double","space.kscience.kmath.operations.DoubleField.number"]},{"name":"open inline override fun power(arg: Double, pow: Number): Double","description":"space.kscience.kmath.operations.DoubleField.power","location":"kmath-core/space.kscience.kmath.operations/-double-field/power.html","searchKeys":["power","open inline override fun power(arg: Double, pow: Number): Double","space.kscience.kmath.operations.DoubleField.power"]},{"name":"open inline override fun power(arg: Float, pow: Number): Float","description":"space.kscience.kmath.operations.FloatField.power","location":"kmath-core/space.kscience.kmath.operations/-float-field/power.html","searchKeys":["power","open inline override fun power(arg: Float, pow: Number): Float","space.kscience.kmath.operations.FloatField.power"]},{"name":"open inline override fun produce(initializer: DoubleField.(IntArray) -> Double): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.produce","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/produce.html","searchKeys":["produce","open inline override fun produce(initializer: DoubleField.(IntArray) -> Double): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.produce"]},{"name":"open inline override fun scale(a: Double, value: Double): Double","description":"space.kscience.kmath.operations.DoubleField.scale","location":"kmath-core/space.kscience.kmath.operations/-double-field/scale.html","searchKeys":["scale","open inline override fun scale(a: Double, value: Double): Double","space.kscience.kmath.operations.DoubleField.scale"]},{"name":"open inline override fun sin(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.sin","location":"kmath-core/space.kscience.kmath.operations/-double-field/sin.html","searchKeys":["sin","open inline override fun sin(arg: Double): Double","space.kscience.kmath.operations.DoubleField.sin"]},{"name":"open inline override fun sin(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.sin","location":"kmath-core/space.kscience.kmath.operations/-float-field/sin.html","searchKeys":["sin","open inline override fun sin(arg: Float): Float","space.kscience.kmath.operations.FloatField.sin"]},{"name":"open inline override fun sinh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.sinh","location":"kmath-core/space.kscience.kmath.operations/-double-field/sinh.html","searchKeys":["sinh","open inline override fun sinh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.sinh"]},{"name":"open inline override fun sinh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.sinh","location":"kmath-core/space.kscience.kmath.operations/-float-field/sinh.html","searchKeys":["sinh","open inline override fun sinh(arg: Float): Float","space.kscience.kmath.operations.FloatField.sinh"]},{"name":"open inline override fun sqrt(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.sqrt","location":"kmath-core/space.kscience.kmath.operations/-double-field/sqrt.html","searchKeys":["sqrt","open inline override fun sqrt(arg: Double): Double","space.kscience.kmath.operations.DoubleField.sqrt"]},{"name":"open inline override fun sqrt(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.sqrt","location":"kmath-core/space.kscience.kmath.operations/-float-field/sqrt.html","searchKeys":["sqrt","open inline override fun sqrt(arg: Float): Float","space.kscience.kmath.operations.FloatField.sqrt"]},{"name":"open inline override fun tan(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.tan","location":"kmath-core/space.kscience.kmath.operations/-double-field/tan.html","searchKeys":["tan","open inline override fun tan(arg: Double): Double","space.kscience.kmath.operations.DoubleField.tan"]},{"name":"open inline override fun tan(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.tan","location":"kmath-core/space.kscience.kmath.operations/-float-field/tan.html","searchKeys":["tan","open inline override fun tan(arg: Float): Float","space.kscience.kmath.operations.FloatField.tan"]},{"name":"open inline override fun tanh(arg: Double): Double","description":"space.kscience.kmath.operations.DoubleField.tanh","location":"kmath-core/space.kscience.kmath.operations/-double-field/tanh.html","searchKeys":["tanh","open inline override fun tanh(arg: Double): Double","space.kscience.kmath.operations.DoubleField.tanh"]},{"name":"open inline override fun tanh(arg: Float): Float","description":"space.kscience.kmath.operations.FloatField.tanh","location":"kmath-core/space.kscience.kmath.operations/-float-field/tanh.html","searchKeys":["tanh","open inline override fun tanh(arg: Float): Float","space.kscience.kmath.operations.FloatField.tanh"]},{"name":"open operator fun (T) -> T.invoke(structure: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.AlgebraND.invoke","location":"kmath-core/space.kscience.kmath.nd/-algebra-n-d/invoke.html","searchKeys":["invoke","open operator fun (T) -> T.invoke(structure: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.AlgebraND.invoke"]},{"name":"open operator fun <T> Array<T>.get(symbol: Symbol): T","description":"space.kscience.kmath.expressions.SymbolIndexer.get","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/get.html","searchKeys":["get","open operator fun <T> Array<T>.get(symbol: Symbol): T","space.kscience.kmath.expressions.SymbolIndexer.get"]},{"name":"open operator fun <T> List<T>.get(symbol: Symbol): T","description":"space.kscience.kmath.expressions.SymbolIndexer.get","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/get.html","searchKeys":["get","open operator fun <T> List<T>.get(symbol: Symbol): T","space.kscience.kmath.expressions.SymbolIndexer.get"]},{"name":"open operator fun <T> Point<T>.get(symbol: Symbol): T","description":"space.kscience.kmath.expressions.SymbolIndexer.get","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/get.html","searchKeys":["get","open operator fun <T> Point<T>.get(symbol: Symbol): T","space.kscience.kmath.expressions.SymbolIndexer.get"]},{"name":"open operator fun <T> Structure2D<T>.get(rowSymbol: Symbol, columnSymbol: Symbol): T","description":"space.kscience.kmath.expressions.SymbolIndexer.get","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/get.html","searchKeys":["get","open operator fun <T> Structure2D<T>.get(rowSymbol: Symbol, columnSymbol: Symbol): T","space.kscience.kmath.expressions.SymbolIndexer.get"]},{"name":"open operator fun DoubleArray.get(symbol: Symbol): Double","description":"space.kscience.kmath.expressions.SymbolIndexer.get","location":"kmath-core/space.kscience.kmath.expressions/-symbol-indexer/get.html","searchKeys":["get","open operator fun DoubleArray.get(symbol: Symbol): Double","space.kscience.kmath.expressions.SymbolIndexer.get"]},{"name":"open operator fun Matrix<T>.minus(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.minus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/minus.html","searchKeys":["minus","open operator fun Matrix<T>.minus(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSpace.minus"]},{"name":"open operator fun Matrix<T>.plus(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.plus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/plus.html","searchKeys":["plus","open operator fun Matrix<T>.plus(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSpace.plus"]},{"name":"open operator fun Matrix<T>.times(value: T): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-linear-space/times.html","searchKeys":["times","open operator fun Matrix<T>.times(value: T): Matrix<T>","space.kscience.kmath.linear.LinearSpace.times"]},{"name":"open operator fun Matrix<T>.unaryMinus(): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.unaryMinus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/unary-minus.html","searchKeys":["unaryMinus","open operator fun Matrix<T>.unaryMinus(): Matrix<T>","space.kscience.kmath.linear.LinearSpace.unaryMinus"]},{"name":"open operator fun Number.minus(b: T): T","description":"space.kscience.kmath.operations.NumbersAddOperations.minus","location":"kmath-core/space.kscience.kmath.operations/-numbers-add-operations/minus.html","searchKeys":["minus","open operator fun Number.minus(b: T): T","space.kscience.kmath.operations.NumbersAddOperations.minus"]},{"name":"open operator fun Number.plus(b: T): T","description":"space.kscience.kmath.operations.NumbersAddOperations.plus","location":"kmath-core/space.kscience.kmath.operations/-numbers-add-operations/plus.html","searchKeys":["plus","open operator fun Number.plus(b: T): T","space.kscience.kmath.operations.NumbersAddOperations.plus"]},{"name":"open operator fun Number.times(b: T): T","description":"space.kscience.kmath.operations.ScaleOperations.times","location":"kmath-core/space.kscience.kmath.operations/-scale-operations/times.html","searchKeys":["times","open operator fun Number.times(b: T): T","space.kscience.kmath.operations.ScaleOperations.times"]},{"name":"open operator fun Point<T>.minus(other: Point<T>): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.minus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/minus.html","searchKeys":["minus","open operator fun Point<T>.minus(other: Point<T>): Point<T>","space.kscience.kmath.linear.LinearSpace.minus"]},{"name":"open operator fun Point<T>.plus(other: Point<T>): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.plus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/plus.html","searchKeys":["plus","open operator fun Point<T>.plus(other: Point<T>): Point<T>","space.kscience.kmath.linear.LinearSpace.plus"]},{"name":"open operator fun Point<T>.times(value: T): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-linear-space/times.html","searchKeys":["times","open operator fun Point<T>.times(value: T): Point<T>","space.kscience.kmath.linear.LinearSpace.times"]},{"name":"open operator fun Point<T>.unaryMinus(): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.unaryMinus","location":"kmath-core/space.kscience.kmath.linear/-linear-space/unary-minus.html","searchKeys":["unaryMinus","open operator fun Point<T>.unaryMinus(): Point<T>","space.kscience.kmath.linear.LinearSpace.unaryMinus"]},{"name":"open operator fun StructureND<T>.div(arg: T): StructureND<T>","description":"space.kscience.kmath.nd.FieldND.div","location":"kmath-core/space.kscience.kmath.nd/-field-n-d/div.html","searchKeys":["div","open operator fun StructureND<T>.div(arg: T): StructureND<T>","space.kscience.kmath.nd.FieldND.div"]},{"name":"open operator fun StructureND<T>.minus(arg: T): StructureND<T>","description":"space.kscience.kmath.nd.GroupND.minus","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/minus.html","searchKeys":["minus","open operator fun StructureND<T>.minus(arg: T): StructureND<T>","space.kscience.kmath.nd.GroupND.minus"]},{"name":"open operator fun StructureND<T>.plus(arg: T): StructureND<T>","description":"space.kscience.kmath.nd.GroupND.plus","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/plus.html","searchKeys":["plus","open operator fun StructureND<T>.plus(arg: T): StructureND<T>","space.kscience.kmath.nd.GroupND.plus"]},{"name":"open operator fun StructureND<T>.times(arg: T): StructureND<T>","description":"space.kscience.kmath.nd.RingND.times","location":"kmath-core/space.kscience.kmath.nd/-ring-n-d/times.html","searchKeys":["times","open operator fun StructureND<T>.times(arg: T): StructureND<T>","space.kscience.kmath.nd.RingND.times"]},{"name":"open operator fun T.div(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.FieldND.div","location":"kmath-core/space.kscience.kmath.nd/-field-n-d/div.html","searchKeys":["div","open operator fun T.div(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.FieldND.div"]},{"name":"open operator fun T.div(b: T): T","description":"space.kscience.kmath.operations.FieldOperations.div","location":"kmath-core/space.kscience.kmath.operations/-field-operations/div.html","searchKeys":["div","open operator fun T.div(b: T): T","space.kscience.kmath.operations.FieldOperations.div"]},{"name":"open operator fun T.div(k: Number): T","description":"space.kscience.kmath.operations.ScaleOperations.div","location":"kmath-core/space.kscience.kmath.operations/-scale-operations/div.html","searchKeys":["div","open operator fun T.div(k: Number): T","space.kscience.kmath.operations.ScaleOperations.div"]},{"name":"open operator fun T.minus(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.GroupND.minus","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/minus.html","searchKeys":["minus","open operator fun T.minus(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.GroupND.minus"]},{"name":"open operator fun T.minus(b: Number): T","description":"space.kscience.kmath.operations.NumbersAddOperations.minus","location":"kmath-core/space.kscience.kmath.operations/-numbers-add-operations/minus.html","searchKeys":["minus","open operator fun T.minus(b: Number): T","space.kscience.kmath.operations.NumbersAddOperations.minus"]},{"name":"open operator fun T.minus(b: T): T","description":"space.kscience.kmath.operations.GroupOperations.minus","location":"kmath-core/space.kscience.kmath.operations/-group-operations/minus.html","searchKeys":["minus","open operator fun T.minus(b: T): T","space.kscience.kmath.operations.GroupOperations.minus"]},{"name":"open operator fun T.plus(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.GroupND.plus","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/plus.html","searchKeys":["plus","open operator fun T.plus(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.GroupND.plus"]},{"name":"open operator fun T.plus(b: Number): T","description":"space.kscience.kmath.operations.NumbersAddOperations.plus","location":"kmath-core/space.kscience.kmath.operations/-numbers-add-operations/plus.html","searchKeys":["plus","open operator fun T.plus(b: Number): T","space.kscience.kmath.operations.NumbersAddOperations.plus"]},{"name":"open operator fun T.plus(b: T): T","description":"space.kscience.kmath.operations.GroupOperations.plus","location":"kmath-core/space.kscience.kmath.operations/-group-operations/plus.html","searchKeys":["plus","open operator fun T.plus(b: T): T","space.kscience.kmath.operations.GroupOperations.plus"]},{"name":"open operator fun T.times(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.RingND.times","location":"kmath-core/space.kscience.kmath.nd/-ring-n-d/times.html","searchKeys":["times","open operator fun T.times(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.RingND.times"]},{"name":"open operator fun T.times(b: T): T","description":"space.kscience.kmath.operations.RingOperations.times","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/times.html","searchKeys":["times","open operator fun T.times(b: T): T","space.kscience.kmath.operations.RingOperations.times"]},{"name":"open operator fun T.times(k: Number): T","description":"space.kscience.kmath.operations.ScaleOperations.times","location":"kmath-core/space.kscience.kmath.operations/-scale-operations/times.html","searchKeys":["times","open operator fun T.times(k: Number): T","space.kscience.kmath.operations.ScaleOperations.times"]},{"name":"open operator fun T.times(m: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.LinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-linear-space/times.html","searchKeys":["times","open operator fun T.times(m: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.LinearSpace.times"]},{"name":"open operator fun T.times(v: Point<T>): Point<T>","description":"space.kscience.kmath.linear.LinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-linear-space/times.html","searchKeys":["times","open operator fun T.times(v: Point<T>): Point<T>","space.kscience.kmath.linear.LinearSpace.times"]},{"name":"open operator fun T.unaryPlus(): T","description":"space.kscience.kmath.operations.GroupOperations.unaryPlus","location":"kmath-core/space.kscience.kmath.operations/-group-operations/unary-plus.html","searchKeys":["unaryPlus","open operator fun T.unaryPlus(): T","space.kscience.kmath.operations.GroupOperations.unaryPlus"]},{"name":"open operator override fun AutoDiffValue<T>.unaryMinus(): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun AutoDiffValue<T>.unaryMinus(): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.unaryMinus"]},{"name":"open operator override fun BigDecimal.minus(b: BigDecimal): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.minus","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/minus.html","searchKeys":["minus","open operator override fun BigDecimal.minus(b: BigDecimal): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.minus"]},{"name":"open operator override fun BigDecimal.unaryMinus(): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/unary-minus.html","searchKeys":["unaryMinus","open operator override fun BigDecimal.unaryMinus(): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.unaryMinus"]},{"name":"open operator override fun BigInt.unaryMinus(): BigInt","description":"space.kscience.kmath.operations.BigIntField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun BigInt.unaryMinus(): BigInt","space.kscience.kmath.operations.BigIntField.unaryMinus"]},{"name":"open operator override fun BigInteger.minus(b: BigInteger): BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.minus","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/minus.html","searchKeys":["minus","open operator override fun BigInteger.minus(b: BigInteger): BigInteger","space.kscience.kmath.operations.JBigIntegerField.minus"]},{"name":"open operator override fun BigInteger.unaryMinus(): BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun BigInteger.unaryMinus(): BigInteger","space.kscience.kmath.operations.JBigIntegerField.unaryMinus"]},{"name":"open operator override fun Boolean.not(): Boolean","description":"space.kscience.kmath.operations.BooleanAlgebra.not","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/not.html","searchKeys":["not","open operator override fun Boolean.not(): Boolean","space.kscience.kmath.operations.BooleanAlgebra.not"]},{"name":"open operator override fun Buffer<Double>.minus(b: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.minus","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/minus.html","searchKeys":["minus","open operator override fun Buffer<Double>.minus(b: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.minus"]},{"name":"open operator override fun Buffer<Double>.plus(b: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.plus","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/plus.html","searchKeys":["plus","open operator override fun Buffer<Double>.plus(b: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.plus"]},{"name":"open operator override fun Buffer<Double>.unaryMinus(): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Buffer<Double>.unaryMinus(): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.unaryMinus"]},{"name":"open operator override fun Buffer<T>.unaryMinus(): Buffer<T>","description":"space.kscience.kmath.operations.BufferField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Buffer<T>.unaryMinus(): Buffer<T>","space.kscience.kmath.operations.BufferField.unaryMinus"]},{"name":"open operator override fun Double.times(v: Point<Double>): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/times.html","searchKeys":["times","open operator override fun Double.times(v: Point<Double>): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.times"]},{"name":"open operator override fun Expression<T>.unaryMinus(): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Expression<T>.unaryMinus(): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.unaryMinus"]},{"name":"open operator override fun MST.minus(b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.minus","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/minus.html","searchKeys":["minus","open operator override fun MST.minus(b: MST): MST.Binary","space.kscience.kmath.expressions.MstExtendedField.minus"]},{"name":"open operator override fun MST.minus(b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstField.minus","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/minus.html","searchKeys":["minus","open operator override fun MST.minus(b: MST): MST.Binary","space.kscience.kmath.expressions.MstField.minus"]},{"name":"open operator override fun MST.minus(b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstGroup.minus","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/minus.html","searchKeys":["minus","open operator override fun MST.minus(b: MST): MST.Binary","space.kscience.kmath.expressions.MstGroup.minus"]},{"name":"open operator override fun MST.minus(b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstRing.minus","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/minus.html","searchKeys":["minus","open operator override fun MST.minus(b: MST): MST.Binary","space.kscience.kmath.expressions.MstRing.minus"]},{"name":"open operator override fun MST.not(): MST","description":"space.kscience.kmath.expressions.MstLogicAlgebra.not","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/not.html","searchKeys":["not","open operator override fun MST.not(): MST","space.kscience.kmath.expressions.MstLogicAlgebra.not"]},{"name":"open operator override fun MST.unaryMinus(): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun MST.unaryMinus(): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.unaryMinus"]},{"name":"open operator override fun MST.unaryMinus(): MST.Unary","description":"space.kscience.kmath.expressions.MstField.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun MST.unaryMinus(): MST.Unary","space.kscience.kmath.expressions.MstField.unaryMinus"]},{"name":"open operator override fun MST.unaryMinus(): MST.Unary","description":"space.kscience.kmath.expressions.MstGroup.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/unary-minus.html","searchKeys":["unaryMinus","open operator override fun MST.unaryMinus(): MST.Unary","space.kscience.kmath.expressions.MstGroup.unaryMinus"]},{"name":"open operator override fun MST.unaryMinus(): MST.Unary","description":"space.kscience.kmath.expressions.MstRing.unaryMinus","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/unary-minus.html","searchKeys":["unaryMinus","open operator override fun MST.unaryMinus(): MST.Unary","space.kscience.kmath.expressions.MstRing.unaryMinus"]},{"name":"open operator override fun MST.unaryPlus(): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.unaryPlus","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/unary-plus.html","searchKeys":["unaryPlus","open operator override fun MST.unaryPlus(): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.unaryPlus"]},{"name":"open operator override fun MST.unaryPlus(): MST.Unary","description":"space.kscience.kmath.expressions.MstField.unaryPlus","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/unary-plus.html","searchKeys":["unaryPlus","open operator override fun MST.unaryPlus(): MST.Unary","space.kscience.kmath.expressions.MstField.unaryPlus"]},{"name":"open operator override fun MST.unaryPlus(): MST.Unary","description":"space.kscience.kmath.expressions.MstGroup.unaryPlus","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/unary-plus.html","searchKeys":["unaryPlus","open operator override fun MST.unaryPlus(): MST.Unary","space.kscience.kmath.expressions.MstGroup.unaryPlus"]},{"name":"open operator override fun MST.unaryPlus(): MST.Unary","description":"space.kscience.kmath.expressions.MstRing.unaryPlus","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/unary-plus.html","searchKeys":["unaryPlus","open operator override fun MST.unaryPlus(): MST.Unary","space.kscience.kmath.expressions.MstRing.unaryPlus"]},{"name":"open operator override fun Matrix<Double>.minus(other: Matrix<Double>): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.minus","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/minus.html","searchKeys":["minus","open operator override fun Matrix<Double>.minus(other: Matrix<Double>): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.minus"]},{"name":"open operator override fun Matrix<Double>.plus(other: Matrix<Double>): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.plus","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/plus.html","searchKeys":["plus","open operator override fun Matrix<Double>.plus(other: Matrix<Double>): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.plus"]},{"name":"open operator override fun Matrix<Double>.times(value: Double): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/times.html","searchKeys":["times","open operator override fun Matrix<Double>.times(value: Double): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.times"]},{"name":"open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.unaryMinus","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<Double>.unaryMinus(): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.unaryMinus"]},{"name":"open operator override fun Matrix<T>.minus(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.minus","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/minus.html","searchKeys":["minus","open operator override fun Matrix<T>.minus(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.minus"]},{"name":"open operator override fun Matrix<T>.plus(other: Matrix<T>): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.plus","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/plus.html","searchKeys":["plus","open operator override fun Matrix<T>.plus(other: Matrix<T>): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.plus"]},{"name":"open operator override fun Matrix<T>.times(value: T): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/times.html","searchKeys":["times","open operator override fun Matrix<T>.times(value: T): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.times"]},{"name":"open operator override fun Matrix<T>.unaryMinus(): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.unaryMinus","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Matrix<T>.unaryMinus(): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.unaryMinus"]},{"name":"open operator override fun Point<Double>.minus(other: Point<Double>): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.minus","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/minus.html","searchKeys":["minus","open operator override fun Point<Double>.minus(other: Point<Double>): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.minus"]},{"name":"open operator override fun Point<Double>.plus(other: Point<Double>): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.plus","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/plus.html","searchKeys":["plus","open operator override fun Point<Double>.plus(other: Point<Double>): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.plus"]},{"name":"open operator override fun Point<Double>.times(value: Double): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.times","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/times.html","searchKeys":["times","open operator override fun Point<Double>.times(value: Double): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.times"]},{"name":"open operator override fun StructureND<T>.unaryMinus(): StructureND<T>","description":"space.kscience.kmath.nd.BufferedGroupND.unaryMinus","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/unary-minus.html","searchKeys":["unaryMinus","open operator override fun StructureND<T>.unaryMinus(): StructureND<T>","space.kscience.kmath.nd.BufferedGroupND.unaryMinus"]},{"name":"open operator override fun compareTo(other: BigInt): Int","description":"space.kscience.kmath.operations.BigInt.compareTo","location":"kmath-core/space.kscience.kmath.operations/-big-int/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: BigInt): Int","space.kscience.kmath.operations.BigInt.compareTo"]},{"name":"open operator override fun contains(point: Point<Double>): Boolean","description":"space.kscience.kmath.domains.HyperSquareDomain.contains","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/contains.html","searchKeys":["contains","open operator override fun contains(point: Point<Double>): Boolean","space.kscience.kmath.domains.HyperSquareDomain.contains"]},{"name":"open operator override fun contains(point: Point<Double>): Boolean","description":"space.kscience.kmath.domains.UnconstrainedDomain.contains","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/contains.html","searchKeys":["contains","open operator override fun contains(point: Point<Double>): Boolean","space.kscience.kmath.domains.UnconstrainedDomain.contains"]},{"name":"open operator override fun contains(point: Point<Double>): Boolean","description":"space.kscience.kmath.domains.UnivariateDomain.contains","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/contains.html","searchKeys":["contains","open operator override fun contains(point: Point<Double>): Boolean","space.kscience.kmath.domains.UnivariateDomain.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.kmath.nd.DefaultStrides.equals","location":"kmath-core/space.kscience.kmath.nd/-default-strides/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.kmath.nd.DefaultStrides.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.kmath.operations.BigInt.equals","location":"kmath-core/space.kscience.kmath.operations/-big-int/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.kmath.operations.BigInt.equals"]},{"name":"open operator override fun get(i: Int, j: Int): T","description":"space.kscience.kmath.linear.VirtualMatrix.get","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/get.html","searchKeys":["get","open operator override fun get(i: Int, j: Int): T","space.kscience.kmath.linear.VirtualMatrix.get"]},{"name":"open operator override fun get(index: Int): Double","description":"space.kscience.kmath.structures.DoubleBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","space.kscience.kmath.structures.DoubleBuffer.get"]},{"name":"open operator override fun get(index: Int): Double?","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Double?","space.kscience.kmath.structures.FlaggedDoubleBuffer.get"]},{"name":"open operator override fun get(index: Int): Float","description":"space.kscience.kmath.structures.FloatBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Float","space.kscience.kmath.structures.FloatBuffer.get"]},{"name":"open operator override fun get(index: Int): Int","description":"space.kscience.kmath.structures.IntBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Int","space.kscience.kmath.structures.IntBuffer.get"]},{"name":"open operator override fun get(index: Int): Long","description":"space.kscience.kmath.structures.LongBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Long","space.kscience.kmath.structures.LongBuffer.get"]},{"name":"open operator override fun get(index: Int): Short","description":"space.kscience.kmath.structures.ShortBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Short","space.kscience.kmath.structures.ShortBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.ArrayBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.ArrayBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.ListBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.ListBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.MemoryBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.MemoryBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.MutableListBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.MutableListBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.ReadOnlyBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.ReadOnlyBuffer.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.structures.VirtualBuffer.get","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.structures.VirtualBuffer.get"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.nd.BufferND.get","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T","space.kscience.kmath.nd.BufferND.get"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.nd.Structure1D.get","location":"kmath-core/space.kscience.kmath.nd/-structure1-d/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T","space.kscience.kmath.nd.Structure1D.get"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.nd.Structure2D.get","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T","space.kscience.kmath.nd.Structure2D.get"]},{"name":"open operator override fun get(symbol: Symbol): Buffer<T>","description":"space.kscience.kmath.data.XYErrorColumnarData.get","location":"kmath-core/space.kscience.kmath.data/-x-y-error-columnar-data/get.html","searchKeys":["get","open operator override fun get(symbol: Symbol): Buffer<T>","space.kscience.kmath.data.XYErrorColumnarData.get"]},{"name":"open operator override fun get(symbol: Symbol): Buffer<T>?","description":"space.kscience.kmath.data.XYColumnarData.get","location":"kmath-core/space.kscience.kmath.data/-x-y-columnar-data/get.html","searchKeys":["get","open operator override fun get(symbol: Symbol): Buffer<T>?","space.kscience.kmath.data.XYColumnarData.get"]},{"name":"open operator override fun get(symbol: Symbol): Buffer<T>?","description":"space.kscience.kmath.data.XYZColumnarData.get","location":"kmath-core/space.kscience.kmath.data/-x-y-z-columnar-data/get.html","searchKeys":["get","open operator override fun get(symbol: Symbol): Buffer<T>?","space.kscience.kmath.data.XYZColumnarData.get"]},{"name":"open operator override fun invoke(arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression.invoke","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/invoke.html","searchKeys":["invoke","open operator override fun invoke(arguments: Map<Symbol, T>): T","space.kscience.kmath.expressions.SimpleAutoDiffExpression.invoke"]},{"name":"open operator override fun iterator(): DoubleIterator","description":"space.kscience.kmath.structures.DoubleBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): DoubleIterator","space.kscience.kmath.structures.DoubleBuffer.iterator"]},{"name":"open operator override fun iterator(): FloatIterator","description":"space.kscience.kmath.structures.FloatBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): FloatIterator","space.kscience.kmath.structures.FloatBuffer.iterator"]},{"name":"open operator override fun iterator(): IntIterator","description":"space.kscience.kmath.structures.IntBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): IntIterator","space.kscience.kmath.structures.IntBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<Double?>","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double?>","space.kscience.kmath.structures.FlaggedDoubleBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.nd.Structure1D.iterator","location":"kmath-core/space.kscience.kmath.nd/-structure1-d/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.nd.Structure1D.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.ArrayBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.ArrayBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.ListBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.ListBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.MemoryBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.MemoryBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.MutableListBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.MutableListBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.ReadOnlyBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.ReadOnlyBuffer.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.structures.VirtualBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.structures.VirtualBuffer.iterator"]},{"name":"open operator override fun iterator(): LongIterator","description":"space.kscience.kmath.structures.LongBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): LongIterator","space.kscience.kmath.structures.LongBuffer.iterator"]},{"name":"open operator override fun iterator(): ShortIterator","description":"space.kscience.kmath.structures.ShortBuffer.iterator","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): ShortIterator","space.kscience.kmath.structures.ShortBuffer.iterator"]},{"name":"open operator override fun set(index: Int, value: Double)","description":"space.kscience.kmath.structures.DoubleBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Double)","space.kscience.kmath.structures.DoubleBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Float)","description":"space.kscience.kmath.structures.FloatBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Float)","space.kscience.kmath.structures.FloatBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Int)","description":"space.kscience.kmath.structures.IntBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Int)","space.kscience.kmath.structures.IntBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Long)","description":"space.kscience.kmath.structures.LongBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Long)","space.kscience.kmath.structures.LongBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Short)","description":"space.kscience.kmath.structures.ShortBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Short)","space.kscience.kmath.structures.ShortBuffer.set"]},{"name":"open operator override fun set(index: Int, value: T)","description":"space.kscience.kmath.structures.ArrayBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: T)","space.kscience.kmath.structures.ArrayBuffer.set"]},{"name":"open operator override fun set(index: Int, value: T)","description":"space.kscience.kmath.structures.MutableListBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: T)","space.kscience.kmath.structures.MutableListBuffer.set"]},{"name":"open operator override fun set(index: Int, value: T)","description":"space.kscience.kmath.structures.MutableMemoryBuffer.set","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: T)","space.kscience.kmath.structures.MutableMemoryBuffer.set"]},{"name":"open operator override fun set(index: IntArray, value: T)","description":"space.kscience.kmath.nd.MutableBufferND.set","location":"kmath-core/space.kscience.kmath.nd/-mutable-buffer-n-d/set.html","searchKeys":["set","open operator override fun set(index: IntArray, value: T)","space.kscience.kmath.nd.MutableBufferND.set"]},{"name":"open operator override fun set(index: IntArray, value: T)","description":"space.kscience.kmath.nd.MutableStructure1D.set","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure1-d/set.html","searchKeys":["set","open operator override fun set(index: IntArray, value: T)","space.kscience.kmath.nd.MutableStructure1D.set"]},{"name":"open override fun <F : StructureFeature> getFeature(type: KClass<out F>): F?","description":"space.kscience.kmath.linear.MatrixWrapper.getFeature","location":"kmath-core/space.kscience.kmath.linear/-matrix-wrapper/get-feature.html","searchKeys":["getFeature","open override fun <F : StructureFeature> getFeature(type: KClass<out F>): F?","space.kscience.kmath.linear.MatrixWrapper.getFeature"]},{"name":"open override fun <F : StructureFeature> getFeature(type: KClass<out F>): F?","description":"space.kscience.kmath.nd.StructureND.getFeature","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/get-feature.html","searchKeys":["getFeature","open override fun <F : StructureFeature> getFeature(type: KClass<out F>): F?","space.kscience.kmath.nd.StructureND.getFeature"]},{"name":"open override fun <T : F> getFeature(type: FeatureKey<T>): T?","description":"space.kscience.kmath.misc.FeatureSet.getFeature","location":"kmath-core/space.kscience.kmath.misc/-feature-set/get-feature.html","searchKeys":["getFeature","open override fun <T : F> getFeature(type: FeatureKey<T>): T?","space.kscience.kmath.misc.FeatureSet.getFeature"]},{"name":"open override fun StructureND<T>.map(transform: A.(T) -> T): BufferND<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.map","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/map.html","searchKeys":["map","open override fun StructureND<T>.map(transform: A.(T) -> T): BufferND<T>","space.kscience.kmath.nd.BufferAlgebraND.map"]},{"name":"open override fun StructureND<T>.mapIndexed(transform: A.(index: IntArray, T) -> T): BufferND<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.mapIndexed","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/map-indexed.html","searchKeys":["mapIndexed","open override fun StructureND<T>.mapIndexed(transform: A.(index: IntArray, T) -> T): BufferND<T>","space.kscience.kmath.nd.BufferAlgebraND.mapIndexed"]},{"name":"open override fun acos(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.acos","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/acos.html","searchKeys":["acos","open override fun acos(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.acos"]},{"name":"open override fun acos(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.acos","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/acos.html","searchKeys":["acos","open override fun acos(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.acos"]},{"name":"open override fun acos(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.acos","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/acos.html","searchKeys":["acos","open override fun acos(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.acos"]},{"name":"open override fun acos(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.acos","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/acos.html","searchKeys":["acos","open override fun acos(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.acos"]},{"name":"open override fun acos(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.acos","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/acos.html","searchKeys":["acos","open override fun acos(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.acos"]},{"name":"open override fun acosh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.acosh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.acosh"]},{"name":"open override fun acosh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.acosh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.acosh"]},{"name":"open override fun acosh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.acosh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/acosh.html","searchKeys":["acosh","open override fun acosh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.acosh"]},{"name":"open override fun acosh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.acosh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.acosh"]},{"name":"open override fun acosh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.acosh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/acosh.html","searchKeys":["acosh","open override fun acosh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.acosh"]},{"name":"open override fun acosh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.acosh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: T): T","space.kscience.kmath.operations.ExtendedField.acosh"]},{"name":"open override fun add(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.add","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/add.html","searchKeys":["add","open override fun add(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.add"]},{"name":"open override fun add(a: BigDecimal, b: BigDecimal): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.add","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/add.html","searchKeys":["add","open override fun add(a: BigDecimal, b: BigDecimal): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.add"]},{"name":"open override fun add(a: BigInt, b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigIntField.add","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/add.html","searchKeys":["add","open override fun add(a: BigInt, b: BigInt): BigInt","space.kscience.kmath.operations.BigIntField.add"]},{"name":"open override fun add(a: BigInteger, b: BigInteger): BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.add","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/add.html","searchKeys":["add","open override fun add(a: BigInteger, b: BigInteger): BigInteger","space.kscience.kmath.operations.JBigIntegerField.add"]},{"name":"open override fun add(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.add","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/add.html","searchKeys":["add","open override fun add(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.add"]},{"name":"open override fun add(a: Buffer<T>, b: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.BufferField.add","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/add.html","searchKeys":["add","open override fun add(a: Buffer<T>, b: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.BufferField.add"]},{"name":"open override fun add(a: Expression<T>, b: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.add","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/add.html","searchKeys":["add","open override fun add(a: Expression<T>, b: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.add"]},{"name":"open override fun add(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.add","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/add.html","searchKeys":["add","open override fun add(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstExtendedField.add"]},{"name":"open override fun add(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstField.add","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/add.html","searchKeys":["add","open override fun add(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstField.add"]},{"name":"open override fun add(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstGroup.add","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/add.html","searchKeys":["add","open override fun add(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstGroup.add"]},{"name":"open override fun add(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstRing.add","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/add.html","searchKeys":["add","open override fun add(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstRing.add"]},{"name":"open override fun add(a: StructureND<T>, b: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.GroupND.add","location":"kmath-core/space.kscience.kmath.nd/-group-n-d/add.html","searchKeys":["add","open override fun add(a: StructureND<T>, b: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.GroupND.add"]},{"name":"open override fun asin(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.asin","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/asin.html","searchKeys":["asin","open override fun asin(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.asin"]},{"name":"open override fun asin(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.asin","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/asin.html","searchKeys":["asin","open override fun asin(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.asin"]},{"name":"open override fun asin(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.asin","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/asin.html","searchKeys":["asin","open override fun asin(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.asin"]},{"name":"open override fun asin(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.asin","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/asin.html","searchKeys":["asin","open override fun asin(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.asin"]},{"name":"open override fun asin(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.asin","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/asin.html","searchKeys":["asin","open override fun asin(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.asin"]},{"name":"open override fun asinh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.asinh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.asinh"]},{"name":"open override fun asinh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.asinh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.asinh"]},{"name":"open override fun asinh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.asinh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/asinh.html","searchKeys":["asinh","open override fun asinh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.asinh"]},{"name":"open override fun asinh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.asinh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.asinh"]},{"name":"open override fun asinh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.asinh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/asinh.html","searchKeys":["asinh","open override fun asinh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.asinh"]},{"name":"open override fun asinh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.asinh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: T): T","space.kscience.kmath.operations.ExtendedField.asinh"]},{"name":"open override fun atan(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.atan","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/atan.html","searchKeys":["atan","open override fun atan(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.atan"]},{"name":"open override fun atan(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.atan","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/atan.html","searchKeys":["atan","open override fun atan(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.atan"]},{"name":"open override fun atan(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.atan","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/atan.html","searchKeys":["atan","open override fun atan(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.atan"]},{"name":"open override fun atan(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.atan","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/atan.html","searchKeys":["atan","open override fun atan(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.atan"]},{"name":"open override fun atan(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.atan","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/atan.html","searchKeys":["atan","open override fun atan(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.atan"]},{"name":"open override fun atanh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.atanh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.atanh"]},{"name":"open override fun atanh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.atanh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.atanh"]},{"name":"open override fun atanh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.atanh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/atanh.html","searchKeys":["atanh","open override fun atanh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.atanh"]},{"name":"open override fun atanh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.atanh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.atanh"]},{"name":"open override fun atanh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.atanh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/atanh.html","searchKeys":["atanh","open override fun atanh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.atanh"]},{"name":"open override fun atanh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.atanh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: T): T","space.kscience.kmath.operations.ExtendedField.atanh"]},{"name":"open override fun binaryOperation(operation: String, left: T, right: T): T","description":"space.kscience.kmath.operations.LogicAlgebra.binaryOperation","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/binary-operation.html","searchKeys":["binaryOperation","open override fun binaryOperation(operation: String, left: T, right: T): T","space.kscience.kmath.operations.LogicAlgebra.binaryOperation"]},{"name":"open override fun binaryOperationFunction(operation: String): (T, T) -> T","description":"space.kscience.kmath.operations.FieldOperations.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-field-operations/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (T, T) -> T","space.kscience.kmath.operations.FieldOperations.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (T, T) -> T","description":"space.kscience.kmath.operations.GroupOperations.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-group-operations/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (T, T) -> T","space.kscience.kmath.operations.GroupOperations.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (T, T) -> T","description":"space.kscience.kmath.operations.LogicAlgebra.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (T, T) -> T","space.kscience.kmath.operations.LogicAlgebra.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (T, T) -> T","description":"space.kscience.kmath.operations.RingOperations.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-ring-operations/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (T, T) -> T","space.kscience.kmath.operations.RingOperations.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Buffer<T>, right: Buffer<T>) -> Buffer<T>","description":"space.kscience.kmath.operations.BufferAlgebra.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Buffer<T>, right: Buffer<T>) -> Buffer<T>","space.kscience.kmath.operations.BufferAlgebra.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Buffer<T>, right: Buffer<T>) -> Buffer<T>","description":"space.kscience.kmath.operations.BufferField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Buffer<T>, right: Buffer<T>) -> Buffer<T>","space.kscience.kmath.operations.BufferField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","description":"space.kscience.kmath.operations.DoubleField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-double-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","space.kscience.kmath.operations.DoubleField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Expression<T>, right: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Float, right: Float) -> Float","description":"space.kscience.kmath.operations.FloatField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-float-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Float, right: Float) -> Float","space.kscience.kmath.operations.FloatField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","space.kscience.kmath.expressions.MstExtendedField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","description":"space.kscience.kmath.expressions.MstField.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","space.kscience.kmath.expressions.MstField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","description":"space.kscience.kmath.expressions.MstGroup.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","space.kscience.kmath.expressions.MstGroup.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","description":"space.kscience.kmath.expressions.MstNumericAlgebra.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","space.kscience.kmath.expressions.MstNumericAlgebra.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","description":"space.kscience.kmath.expressions.MstRing.binaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: MST, right: MST) -> MST.Binary","space.kscience.kmath.expressions.MstRing.binaryOperationFunction"]},{"name":"open override fun bindSymbol(value: String): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.bindSymbol","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/bind-symbol.html","searchKeys":["bindSymbol","open override fun bindSymbol(value: String): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.bindSymbol"]},{"name":"open override fun bindSymbol(value: String): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.bindSymbol","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/bind-symbol.html","searchKeys":["bindSymbol","open override fun bindSymbol(value: String): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.bindSymbol"]},{"name":"open override fun bindSymbol(value: String): Symbol","description":"space.kscience.kmath.expressions.MstNumericAlgebra.bindSymbol","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/bind-symbol.html","searchKeys":["bindSymbol","open override fun bindSymbol(value: String): Symbol","space.kscience.kmath.expressions.MstNumericAlgebra.bindSymbol"]},{"name":"open override fun bindSymbolOrNull(value: String): AutoDiffValue<T>?","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): AutoDiffValue<T>?","space.kscience.kmath.expressions.SimpleAutoDiffField.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Expression<T>?","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Expression<T>?","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Expression<T>?","description":"space.kscience.kmath.expressions.FunctionalExpressionField.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Expression<T>?","space.kscience.kmath.expressions.FunctionalExpressionField.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): MST","description":"space.kscience.kmath.expressions.MstLogicAlgebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): MST","space.kscience.kmath.expressions.MstLogicAlgebra.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Symbol","description":"space.kscience.kmath.expressions.MstExtendedField.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Symbol","space.kscience.kmath.expressions.MstExtendedField.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Symbol","description":"space.kscience.kmath.expressions.MstField.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Symbol","space.kscience.kmath.expressions.MstField.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Symbol","description":"space.kscience.kmath.expressions.MstGroup.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Symbol","space.kscience.kmath.expressions.MstGroup.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Symbol","description":"space.kscience.kmath.expressions.MstNumericAlgebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Symbol","space.kscience.kmath.expressions.MstNumericAlgebra.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Symbol","description":"space.kscience.kmath.expressions.MstRing.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Symbol","space.kscience.kmath.expressions.MstRing.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): T?","description":"space.kscience.kmath.operations.LogicAlgebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): T?","space.kscience.kmath.operations.LogicAlgebra.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): T?","description":"space.kscience.kmath.operations.NumericAlgebra.bindSymbolOrNull","location":"kmath-core/space.kscience.kmath.operations/-numeric-algebra/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): T?","space.kscience.kmath.operations.NumericAlgebra.bindSymbolOrNull"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): Matrix<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.buildMatrix","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: A.(i: Int, j: Int) -> T): Matrix<T>","space.kscience.kmath.linear.BufferedLinearSpace.buildMatrix"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): Matrix<Double>","description":"space.kscience.kmath.linear.DoubleLinearSpace.buildMatrix","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): Matrix<Double>","space.kscience.kmath.linear.DoubleLinearSpace.buildMatrix"]},{"name":"open override fun buildVector(size: Int, initializer: A.(Int) -> T): Point<T>","description":"space.kscience.kmath.linear.BufferedLinearSpace.buildVector","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: A.(Int) -> T): Point<T>","space.kscience.kmath.linear.BufferedLinearSpace.buildVector"]},{"name":"open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.buildVector","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.buildVector"]},{"name":"open override fun combine(a: StructureND<T>, b: StructureND<T>, transform: A.(T, T) -> T): BufferND<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.combine","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/combine.html","searchKeys":["combine","open override fun combine(a: StructureND<T>, b: StructureND<T>, transform: A.(T, T) -> T): BufferND<T>","space.kscience.kmath.nd.BufferAlgebraND.combine"]},{"name":"open override fun const(boolean: Boolean): Boolean","description":"space.kscience.kmath.operations.BooleanAlgebra.const","location":"kmath-core/space.kscience.kmath.operations/-boolean-algebra/const.html","searchKeys":["const","open override fun const(boolean: Boolean): Boolean","space.kscience.kmath.operations.BooleanAlgebra.const"]},{"name":"open override fun const(boolean: Boolean): Symbol","description":"space.kscience.kmath.expressions.MstLogicAlgebra.const","location":"kmath-core/space.kscience.kmath.expressions/-mst-logic-algebra/const.html","searchKeys":["const","open override fun const(boolean: Boolean): Symbol","space.kscience.kmath.expressions.MstLogicAlgebra.const"]},{"name":"open override fun const(value: T): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.const","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/const.html","searchKeys":["const","open override fun const(value: T): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.const"]},{"name":"open override fun const(value: T): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.const","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/const.html","searchKeys":["const","open override fun const(value: T): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.const"]},{"name":"open override fun copy(): DoubleBuffer","description":"space.kscience.kmath.structures.DoubleBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/copy.html","searchKeys":["copy","open override fun copy(): DoubleBuffer","space.kscience.kmath.structures.DoubleBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<Float>","description":"space.kscience.kmath.structures.FloatBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<Float>","space.kscience.kmath.structures.FloatBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<Int>","description":"space.kscience.kmath.structures.IntBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<Int>","space.kscience.kmath.structures.IntBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<Long>","description":"space.kscience.kmath.structures.LongBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<Long>","space.kscience.kmath.structures.LongBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<Short>","description":"space.kscience.kmath.structures.ShortBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<Short>","space.kscience.kmath.structures.ShortBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<T>","description":"space.kscience.kmath.structures.ArrayBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<T>","space.kscience.kmath.structures.ArrayBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableListBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<T>","space.kscience.kmath.structures.MutableListBuffer.copy"]},{"name":"open override fun copy(): MutableBuffer<T>","description":"space.kscience.kmath.structures.MutableMemoryBuffer.copy","location":"kmath-core/space.kscience.kmath.structures/-mutable-memory-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<T>","space.kscience.kmath.structures.MutableMemoryBuffer.copy"]},{"name":"open override fun cos(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.cos","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/cos.html","searchKeys":["cos","open override fun cos(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.cos"]},{"name":"open override fun cos(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.cos","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/cos.html","searchKeys":["cos","open override fun cos(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.cos"]},{"name":"open override fun cos(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.cos","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/cos.html","searchKeys":["cos","open override fun cos(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.cos"]},{"name":"open override fun cos(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.cos","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/cos.html","searchKeys":["cos","open override fun cos(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.cos"]},{"name":"open override fun cos(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.cos","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/cos.html","searchKeys":["cos","open override fun cos(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.cos"]},{"name":"open override fun cosh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.cosh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.cosh"]},{"name":"open override fun cosh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.cosh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.cosh"]},{"name":"open override fun cosh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.cosh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/cosh.html","searchKeys":["cosh","open override fun cosh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.cosh"]},{"name":"open override fun cosh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.cosh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.cosh"]},{"name":"open override fun cosh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.cosh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/cosh.html","searchKeys":["cosh","open override fun cosh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.cosh"]},{"name":"open override fun cosh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.cosh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: T): T","space.kscience.kmath.operations.ExtendedField.cosh"]},{"name":"open override fun derivativeOrNull(symbol: Symbol): Expression<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression.derivativeOrNull","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","open override fun derivativeOrNull(symbol: Symbol): Expression<T>","space.kscience.kmath.expressions.SimpleAutoDiffExpression.derivativeOrNull"]},{"name":"open override fun divide(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.divide","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/divide.html","searchKeys":["divide","open override fun divide(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.divide"]},{"name":"open override fun divide(a: BigDecimal, b: BigDecimal): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.divide","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/divide.html","searchKeys":["divide","open override fun divide(a: BigDecimal, b: BigDecimal): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.divide"]},{"name":"open override fun divide(a: BigInt, b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigIntField.divide","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/divide.html","searchKeys":["divide","open override fun divide(a: BigInt, b: BigInt): BigInt","space.kscience.kmath.operations.BigIntField.divide"]},{"name":"open override fun divide(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.divide","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/divide.html","searchKeys":["divide","open override fun divide(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.divide"]},{"name":"open override fun divide(a: Buffer<T>, b: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.BufferField.divide","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/divide.html","searchKeys":["divide","open override fun divide(a: Buffer<T>, b: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.BufferField.divide"]},{"name":"open override fun divide(a: Expression<T>, b: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.divide","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/divide.html","searchKeys":["divide","open override fun divide(a: Expression<T>, b: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.divide"]},{"name":"open override fun divide(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.divide","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/divide.html","searchKeys":["divide","open override fun divide(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstExtendedField.divide"]},{"name":"open override fun divide(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstField.divide","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/divide.html","searchKeys":["divide","open override fun divide(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstField.divide"]},{"name":"open override fun divide(a: StructureND<T>, b: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.FieldND.divide","location":"kmath-core/space.kscience.kmath.nd/-field-n-d/divide.html","searchKeys":["divide","open override fun divide(a: StructureND<T>, b: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.FieldND.divide"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.nd.BufferND.elements","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.nd.BufferND.elements"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.nd.Structure2D.elements","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.nd.Structure2D.elements"]},{"name":"open override fun exp(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.exp","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/exp.html","searchKeys":["exp","open override fun exp(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.exp"]},{"name":"open override fun exp(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.exp","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/exp.html","searchKeys":["exp","open override fun exp(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.exp"]},{"name":"open override fun exp(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.exp","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/exp.html","searchKeys":["exp","open override fun exp(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.exp"]},{"name":"open override fun exp(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.exp","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/exp.html","searchKeys":["exp","open override fun exp(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.exp"]},{"name":"open override fun exp(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.exp","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/exp.html","searchKeys":["exp","open override fun exp(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.exp"]},{"name":"open override fun getFlag(index: Int): Byte","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.getFlag","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/get-flag.html","searchKeys":["getFlag","open override fun getFlag(index: Int): Byte","space.kscience.kmath.structures.FlaggedDoubleBuffer.getFlag"]},{"name":"open override fun getLowerBound(num: Int): Double","description":"space.kscience.kmath.domains.HyperSquareDomain.getLowerBound","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/get-lower-bound.html","searchKeys":["getLowerBound","open override fun getLowerBound(num: Int): Double","space.kscience.kmath.domains.HyperSquareDomain.getLowerBound"]},{"name":"open override fun getLowerBound(num: Int): Double","description":"space.kscience.kmath.domains.UnconstrainedDomain.getLowerBound","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/get-lower-bound.html","searchKeys":["getLowerBound","open override fun getLowerBound(num: Int): Double","space.kscience.kmath.domains.UnconstrainedDomain.getLowerBound"]},{"name":"open override fun getLowerBound(num: Int): Double","description":"space.kscience.kmath.domains.UnivariateDomain.getLowerBound","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/get-lower-bound.html","searchKeys":["getLowerBound","open override fun getLowerBound(num: Int): Double","space.kscience.kmath.domains.UnivariateDomain.getLowerBound"]},{"name":"open override fun getUpperBound(num: Int): Double","description":"space.kscience.kmath.domains.HyperSquareDomain.getUpperBound","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/get-upper-bound.html","searchKeys":["getUpperBound","open override fun getUpperBound(num: Int): Double","space.kscience.kmath.domains.HyperSquareDomain.getUpperBound"]},{"name":"open override fun getUpperBound(num: Int): Double","description":"space.kscience.kmath.domains.UnconstrainedDomain.getUpperBound","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/get-upper-bound.html","searchKeys":["getUpperBound","open override fun getUpperBound(num: Int): Double","space.kscience.kmath.domains.UnconstrainedDomain.getUpperBound"]},{"name":"open override fun getUpperBound(num: Int): Double","description":"space.kscience.kmath.domains.UnivariateDomain.getUpperBound","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/get-upper-bound.html","searchKeys":["getUpperBound","open override fun getUpperBound(num: Int): Double","space.kscience.kmath.domains.UnivariateDomain.getUpperBound"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.kmath.nd.DefaultStrides.hashCode","location":"kmath-core/space.kscience.kmath.nd/-default-strides/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.kmath.nd.DefaultStrides.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.kmath.operations.BigInt.hashCode","location":"kmath-core/space.kscience.kmath.operations/-big-int/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.kmath.operations.BigInt.hashCode"]},{"name":"open override fun index(offset: Int): IntArray","description":"space.kscience.kmath.nd.DefaultStrides.index","location":"kmath-core/space.kscience.kmath.nd/-default-strides/--index--.html","searchKeys":["index","open override fun index(offset: Int): IntArray","space.kscience.kmath.nd.DefaultStrides.index"]},{"name":"open override fun ln(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.ln","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/ln.html","searchKeys":["ln","open override fun ln(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.ln"]},{"name":"open override fun ln(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.ln","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/ln.html","searchKeys":["ln","open override fun ln(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.ln"]},{"name":"open override fun ln(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.ln","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/ln.html","searchKeys":["ln","open override fun ln(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.ln"]},{"name":"open override fun ln(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.ln","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/ln.html","searchKeys":["ln","open override fun ln(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.ln"]},{"name":"open override fun ln(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.ln","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/ln.html","searchKeys":["ln","open override fun ln(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.ln"]},{"name":"open override fun multiply(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.multiply","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: AutoDiffValue<T>, b: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.multiply"]},{"name":"open override fun multiply(a: BigDecimal, b: BigDecimal): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.multiply","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/multiply.html","searchKeys":["multiply","open override fun multiply(a: BigDecimal, b: BigDecimal): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.multiply"]},{"name":"open override fun multiply(a: BigInt, b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigIntField.multiply","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: BigInt, b: BigInt): BigInt","space.kscience.kmath.operations.BigIntField.multiply"]},{"name":"open override fun multiply(a: BigInteger, b: BigInteger): BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.multiply","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: BigInteger, b: BigInteger): BigInteger","space.kscience.kmath.operations.JBigIntegerField.multiply"]},{"name":"open override fun multiply(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.multiply","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/multiply.html","searchKeys":["multiply","open override fun multiply(a: Buffer<Double>, b: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.multiply"]},{"name":"open override fun multiply(a: Buffer<T>, b: Buffer<T>): Buffer<T>","description":"space.kscience.kmath.operations.BufferField.multiply","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: Buffer<T>, b: Buffer<T>): Buffer<T>","space.kscience.kmath.operations.BufferField.multiply"]},{"name":"open override fun multiply(a: Expression<T>, b: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.multiply","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/multiply.html","searchKeys":["multiply","open override fun multiply(a: Expression<T>, b: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.multiply"]},{"name":"open override fun multiply(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.multiply","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstExtendedField.multiply"]},{"name":"open override fun multiply(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstField.multiply","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstField.multiply"]},{"name":"open override fun multiply(a: MST, b: MST): MST.Binary","description":"space.kscience.kmath.expressions.MstRing.multiply","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/multiply.html","searchKeys":["multiply","open override fun multiply(a: MST, b: MST): MST.Binary","space.kscience.kmath.expressions.MstRing.multiply"]},{"name":"open override fun multiply(a: StructureND<T>, b: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd.RingND.multiply","location":"kmath-core/space.kscience.kmath.nd/-ring-n-d/multiply.html","searchKeys":["multiply","open override fun multiply(a: StructureND<T>, b: StructureND<T>): StructureND<T>","space.kscience.kmath.nd.RingND.multiply"]},{"name":"open override fun norm(arg: Buffer<Double>): Double","description":"space.kscience.kmath.operations.DoubleBufferOperations.norm","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/norm.html","searchKeys":["norm","open override fun norm(arg: Buffer<Double>): Double","space.kscience.kmath.operations.DoubleBufferOperations.norm"]},{"name":"open override fun norm(arg: Byte): Byte","description":"space.kscience.kmath.operations.ByteRing.norm","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/norm.html","searchKeys":["norm","open override fun norm(arg: Byte): Byte","space.kscience.kmath.operations.ByteRing.norm"]},{"name":"open override fun norm(arg: Long): Long","description":"space.kscience.kmath.operations.LongRing.norm","location":"kmath-core/space.kscience.kmath.operations/-long-ring/norm.html","searchKeys":["norm","open override fun norm(arg: Long): Long","space.kscience.kmath.operations.LongRing.norm"]},{"name":"open override fun norm(arg: Point<Double>): Double","description":"space.kscience.kmath.operations.DoubleL2Norm.norm","location":"kmath-core/space.kscience.kmath.operations/-double-l2-norm/norm.html","searchKeys":["norm","open override fun norm(arg: Point<Double>): Double","space.kscience.kmath.operations.DoubleL2Norm.norm"]},{"name":"open override fun norm(arg: Short): Short","description":"space.kscience.kmath.operations.ShortRing.norm","location":"kmath-core/space.kscience.kmath.operations/-short-ring/norm.html","searchKeys":["norm","open override fun norm(arg: Short): Short","space.kscience.kmath.operations.ShortRing.norm"]},{"name":"open override fun number(value: Number): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.number","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/number.html","searchKeys":["number","open override fun number(value: Number): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.number"]},{"name":"open override fun number(value: Number): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.number","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/number.html","searchKeys":["number","open override fun number(value: Number): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.number"]},{"name":"open override fun number(value: Number): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.number","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/number.html","searchKeys":["number","open override fun number(value: Number): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.number"]},{"name":"open override fun number(value: Number): BigInt","description":"space.kscience.kmath.operations.BigIntField.number","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/number.html","searchKeys":["number","open override fun number(value: Number): BigInt","space.kscience.kmath.operations.BigIntField.number"]},{"name":"open override fun number(value: Number): BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.number","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/number.html","searchKeys":["number","open override fun number(value: Number): BigInteger","space.kscience.kmath.operations.JBigIntegerField.number"]},{"name":"open override fun number(value: Number): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.number","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/number.html","searchKeys":["number","open override fun number(value: Number): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.number"]},{"name":"open override fun number(value: Number): BufferND<Short>","description":"space.kscience.kmath.nd.ShortRingND.number","location":"kmath-core/space.kscience.kmath.nd/-short-ring-n-d/number.html","searchKeys":["number","open override fun number(value: Number): BufferND<Short>","space.kscience.kmath.nd.ShortRingND.number"]},{"name":"open override fun number(value: Number): Byte","description":"space.kscience.kmath.operations.ByteRing.number","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/number.html","searchKeys":["number","open override fun number(value: Number): Byte","space.kscience.kmath.operations.ByteRing.number"]},{"name":"open override fun number(value: Number): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.number","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/number.html","searchKeys":["number","open override fun number(value: Number): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.number"]},{"name":"open override fun number(value: Number): Float","description":"space.kscience.kmath.operations.FloatField.number","location":"kmath-core/space.kscience.kmath.operations/-float-field/number.html","searchKeys":["number","open override fun number(value: Number): Float","space.kscience.kmath.operations.FloatField.number"]},{"name":"open override fun number(value: Number): Int","description":"space.kscience.kmath.operations.IntRing.number","location":"kmath-core/space.kscience.kmath.operations/-int-ring/number.html","searchKeys":["number","open override fun number(value: Number): Int","space.kscience.kmath.operations.IntRing.number"]},{"name":"open override fun number(value: Number): Long","description":"space.kscience.kmath.operations.LongRing.number","location":"kmath-core/space.kscience.kmath.operations/-long-ring/number.html","searchKeys":["number","open override fun number(value: Number): Long","space.kscience.kmath.operations.LongRing.number"]},{"name":"open override fun number(value: Number): MST.Numeric","description":"space.kscience.kmath.expressions.MstExtendedField.number","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/number.html","searchKeys":["number","open override fun number(value: Number): MST.Numeric","space.kscience.kmath.expressions.MstExtendedField.number"]},{"name":"open override fun number(value: Number): MST.Numeric","description":"space.kscience.kmath.expressions.MstField.number","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/number.html","searchKeys":["number","open override fun number(value: Number): MST.Numeric","space.kscience.kmath.expressions.MstField.number"]},{"name":"open override fun number(value: Number): MST.Numeric","description":"space.kscience.kmath.expressions.MstGroup.number","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/number.html","searchKeys":["number","open override fun number(value: Number): MST.Numeric","space.kscience.kmath.expressions.MstGroup.number"]},{"name":"open override fun number(value: Number): MST.Numeric","description":"space.kscience.kmath.expressions.MstNumericAlgebra.number","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/number.html","searchKeys":["number","open override fun number(value: Number): MST.Numeric","space.kscience.kmath.expressions.MstNumericAlgebra.number"]},{"name":"open override fun number(value: Number): MST.Numeric","description":"space.kscience.kmath.expressions.MstRing.number","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/number.html","searchKeys":["number","open override fun number(value: Number): MST.Numeric","space.kscience.kmath.expressions.MstRing.number"]},{"name":"open override fun number(value: Number): Short","description":"space.kscience.kmath.operations.ShortRing.number","location":"kmath-core/space.kscience.kmath.operations/-short-ring/number.html","searchKeys":["number","open override fun number(value: Number): Short","space.kscience.kmath.operations.ShortRing.number"]},{"name":"open override fun number(value: Number): T","description":"space.kscience.kmath.operations.Field.number","location":"kmath-core/space.kscience.kmath.operations/-field/number.html","searchKeys":["number","open override fun number(value: Number): T","space.kscience.kmath.operations.Field.number"]},{"name":"open override fun power(arg: AutoDiffValue<T>, pow: Number): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.power","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/power.html","searchKeys":["power","open override fun power(arg: AutoDiffValue<T>, pow: Number): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.power"]},{"name":"open override fun power(arg: BigDecimal, pow: Number): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.power","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/power.html","searchKeys":["power","open override fun power(arg: BigDecimal, pow: Number): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.power"]},{"name":"open override fun power(arg: Buffer<Double>, pow: Number): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.power","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/power.html","searchKeys":["power","open override fun power(arg: Buffer<Double>, pow: Number): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.power"]},{"name":"open override fun power(arg: Expression<T>, pow: Number): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.power","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/power.html","searchKeys":["power","open override fun power(arg: Expression<T>, pow: Number): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.power"]},{"name":"open override fun power(arg: MST, pow: Number): MST.Binary","description":"space.kscience.kmath.expressions.MstExtendedField.power","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/power.html","searchKeys":["power","open override fun power(arg: MST, pow: Number): MST.Binary","space.kscience.kmath.expressions.MstExtendedField.power"]},{"name":"open override fun power(arg: StructureND<Double>, pow: Number): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.power","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/power.html","searchKeys":["power","open override fun power(arg: StructureND<Double>, pow: Number): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.power"]},{"name":"open override fun produce(initializer: A.(IntArray) -> T): BufferND<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.produce","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/produce.html","searchKeys":["produce","open override fun produce(initializer: A.(IntArray) -> T): BufferND<T>","space.kscience.kmath.nd.BufferAlgebraND.produce"]},{"name":"open override fun rightSideNumberOperationFunction(operation: String): (T, right: Number) -> T","description":"space.kscience.kmath.operations.ExtendedField.rightSideNumberOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-extended-field/right-side-number-operation-function.html","searchKeys":["rightSideNumberOperationFunction","open override fun rightSideNumberOperationFunction(operation: String): (T, right: Number) -> T","space.kscience.kmath.operations.ExtendedField.rightSideNumberOperationFunction"]},{"name":"open override fun scale(a: AutoDiffValue<T>, value: Double): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.scale","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/scale.html","searchKeys":["scale","open override fun scale(a: AutoDiffValue<T>, value: Double): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.scale"]},{"name":"open override fun scale(a: AutoDiffValue<T>, value: Double): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.scale","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/scale.html","searchKeys":["scale","open override fun scale(a: AutoDiffValue<T>, value: Double): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.scale"]},{"name":"open override fun scale(a: BigDecimal, value: Double): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.scale","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/scale.html","searchKeys":["scale","open override fun scale(a: BigDecimal, value: Double): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.scale"]},{"name":"open override fun scale(a: BigInt, value: Double): BigInt","description":"space.kscience.kmath.operations.BigIntField.scale","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/scale.html","searchKeys":["scale","open override fun scale(a: BigInt, value: Double): BigInt","space.kscience.kmath.operations.BigIntField.scale"]},{"name":"open override fun scale(a: Buffer<Double>, value: Double): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.scale","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/scale.html","searchKeys":["scale","open override fun scale(a: Buffer<Double>, value: Double): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.scale"]},{"name":"open override fun scale(a: Buffer<T>, value: Double): Buffer<T>","description":"space.kscience.kmath.operations.BufferField.scale","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/scale.html","searchKeys":["scale","open override fun scale(a: Buffer<T>, value: Double): Buffer<T>","space.kscience.kmath.operations.BufferField.scale"]},{"name":"open override fun scale(a: Expression<T>, value: Double): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.scale","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/scale.html","searchKeys":["scale","open override fun scale(a: Expression<T>, value: Double): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.scale"]},{"name":"open override fun scale(a: Float, value: Double): Float","description":"space.kscience.kmath.operations.FloatField.scale","location":"kmath-core/space.kscience.kmath.operations/-float-field/scale.html","searchKeys":["scale","open override fun scale(a: Float, value: Double): Float","space.kscience.kmath.operations.FloatField.scale"]},{"name":"open override fun scale(a: MST, value: Double): MST","description":"space.kscience.kmath.expressions.MstExtendedField.scale","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/scale.html","searchKeys":["scale","open override fun scale(a: MST, value: Double): MST","space.kscience.kmath.expressions.MstExtendedField.scale"]},{"name":"open override fun scale(a: MST, value: Double): MST.Binary","description":"space.kscience.kmath.expressions.MstField.scale","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/scale.html","searchKeys":["scale","open override fun scale(a: MST, value: Double): MST.Binary","space.kscience.kmath.expressions.MstField.scale"]},{"name":"open override fun scale(a: MST, value: Double): MST.Binary","description":"space.kscience.kmath.expressions.MstGroup.scale","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/scale.html","searchKeys":["scale","open override fun scale(a: MST, value: Double): MST.Binary","space.kscience.kmath.expressions.MstGroup.scale"]},{"name":"open override fun scale(a: MST, value: Double): MST.Binary","description":"space.kscience.kmath.expressions.MstRing.scale","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/scale.html","searchKeys":["scale","open override fun scale(a: MST, value: Double): MST.Binary","space.kscience.kmath.expressions.MstRing.scale"]},{"name":"open override fun scale(a: StructureND<Double>, value: Double): StructureND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.scale","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<Double>, value: Double): StructureND<Double>","space.kscience.kmath.nd.DoubleFieldND.scale"]},{"name":"open override fun scale(a: StructureND<T>, value: Double): StructureND<T>","description":"space.kscience.kmath.nd.BufferedFieldND.scale","location":"kmath-core/space.kscience.kmath.nd/-buffered-field-n-d/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<T>, value: Double): StructureND<T>","space.kscience.kmath.nd.BufferedFieldND.scale"]},{"name":"open override fun scale(a: StructureND<T>, value: Double): StructureND<T>","description":"space.kscience.kmath.nd.FieldND.scale","location":"kmath-core/space.kscience.kmath.nd/-field-n-d/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<T>, value: Double): StructureND<T>","space.kscience.kmath.nd.FieldND.scale"]},{"name":"open override fun sin(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sin","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/sin.html","searchKeys":["sin","open override fun sin(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sin"]},{"name":"open override fun sin(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.sin","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/sin.html","searchKeys":["sin","open override fun sin(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.sin"]},{"name":"open override fun sin(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.sin","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/sin.html","searchKeys":["sin","open override fun sin(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.sin"]},{"name":"open override fun sin(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.sin","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/sin.html","searchKeys":["sin","open override fun sin(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.sin"]},{"name":"open override fun sin(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.sin","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/sin.html","searchKeys":["sin","open override fun sin(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.sin"]},{"name":"open override fun sinh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sinh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sinh"]},{"name":"open override fun sinh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.sinh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.sinh"]},{"name":"open override fun sinh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.sinh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/sinh.html","searchKeys":["sinh","open override fun sinh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.sinh"]},{"name":"open override fun sinh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.sinh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.sinh"]},{"name":"open override fun sinh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.sinh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/sinh.html","searchKeys":["sinh","open override fun sinh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.sinh"]},{"name":"open override fun sinh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.sinh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: T): T","space.kscience.kmath.operations.ExtendedField.sinh"]},{"name":"open override fun sqrt(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sqrt","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/sqrt.html","searchKeys":["sqrt","open override fun sqrt(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.sqrt"]},{"name":"open override fun sqrt(arg: BigDecimal): BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.sqrt","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/sqrt.html","searchKeys":["sqrt","open override fun sqrt(arg: BigDecimal): BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.sqrt"]},{"name":"open override fun sqrt(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.sqrt","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/sqrt.html","searchKeys":["sqrt","open override fun sqrt(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.sqrt"]},{"name":"open override fun sqrt(arg: MST): MST","description":"space.kscience.kmath.expressions.MstExtendedField.sqrt","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/sqrt.html","searchKeys":["sqrt","open override fun sqrt(arg: MST): MST","space.kscience.kmath.expressions.MstExtendedField.sqrt"]},{"name":"open override fun tan(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.tan","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/tan.html","searchKeys":["tan","open override fun tan(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.tan"]},{"name":"open override fun tan(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.tan","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/tan.html","searchKeys":["tan","open override fun tan(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.tan"]},{"name":"open override fun tan(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.tan","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/tan.html","searchKeys":["tan","open override fun tan(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.tan"]},{"name":"open override fun tan(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.tan","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/tan.html","searchKeys":["tan","open override fun tan(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.tan"]},{"name":"open override fun tan(arg: T): T","description":"space.kscience.kmath.operations.ExtendedFieldOperations.tan","location":"kmath-core/space.kscience.kmath.operations/-extended-field-operations/tan.html","searchKeys":["tan","open override fun tan(arg: T): T","space.kscience.kmath.operations.ExtendedFieldOperations.tan"]},{"name":"open override fun tanh(arg: AutoDiffValue<T>): AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.tanh","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-extended-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: AutoDiffValue<T>): AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExtendedField.tanh"]},{"name":"open override fun tanh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferField.tanh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferField.tanh"]},{"name":"open override fun tanh(arg: Buffer<Double>): DoubleBuffer","description":"space.kscience.kmath.operations.DoubleBufferOperations.tanh","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-operations/tanh.html","searchKeys":["tanh","open override fun tanh(arg: Buffer<Double>): DoubleBuffer","space.kscience.kmath.operations.DoubleBufferOperations.tanh"]},{"name":"open override fun tanh(arg: MST): MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.tanh","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: MST): MST.Unary","space.kscience.kmath.expressions.MstExtendedField.tanh"]},{"name":"open override fun tanh(arg: StructureND<Double>): BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.tanh","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/tanh.html","searchKeys":["tanh","open override fun tanh(arg: StructureND<Double>): BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.tanh"]},{"name":"open override fun tanh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedField.tanh","location":"kmath-core/space.kscience.kmath.operations/-extended-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: T): T","space.kscience.kmath.operations.ExtendedField.tanh"]},{"name":"open override fun tanh(arg: T): T","description":"space.kscience.kmath.operations.ExtendedFieldOperations.tanh","location":"kmath-core/space.kscience.kmath.operations/-extended-field-operations/tanh.html","searchKeys":["tanh","open override fun tanh(arg: T): T","space.kscience.kmath.operations.ExtendedFieldOperations.tanh"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.linear.MatrixWrapper.toString","location":"kmath-core/space.kscience.kmath.linear/-matrix-wrapper/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.linear.MatrixWrapper.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.misc.FeatureSet.toString","location":"kmath-core/space.kscience.kmath.misc/-feature-set/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.misc.FeatureSet.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.nd.BufferND.toString","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.nd.BufferND.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.operations.BigInt.toString","location":"kmath-core/space.kscience.kmath.operations/-big-int/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.operations.BigInt.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.ArrayBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.ArrayBuffer.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.DoubleBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.DoubleBuffer.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.FlaggedDoubleBuffer.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.ListBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.ListBuffer.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.MemoryBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.MemoryBuffer.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.structures.VirtualBuffer.toString","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.structures.VirtualBuffer.toString"]},{"name":"open override fun unaryOperation(operation: String, arg: T): T","description":"space.kscience.kmath.operations.LogicAlgebra.unaryOperation","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/unary-operation.html","searchKeys":["unaryOperation","open override fun unaryOperation(operation: String, arg: T): T","space.kscience.kmath.operations.LogicAlgebra.unaryOperation"]},{"name":"open override fun unaryOperationFunction(operation: String): (T) -> T","description":"space.kscience.kmath.operations.ExtendedFieldOperations.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-extended-field-operations/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (T) -> T","space.kscience.kmath.operations.ExtendedFieldOperations.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (T) -> T","description":"space.kscience.kmath.operations.GroupOperations.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-group-operations/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (T) -> T","space.kscience.kmath.operations.GroupOperations.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (T) -> T","description":"space.kscience.kmath.operations.LogicAlgebra.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (T) -> T","space.kscience.kmath.operations.LogicAlgebra.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Buffer<T>) -> Buffer<T>","description":"space.kscience.kmath.operations.BufferAlgebra.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-buffer-algebra/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Buffer<T>) -> Buffer<T>","space.kscience.kmath.operations.BufferAlgebra.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Buffer<T>) -> Buffer<T>","description":"space.kscience.kmath.operations.BufferField.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Buffer<T>) -> Buffer<T>","space.kscience.kmath.operations.BufferField.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionExtendedField.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-extended-field/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionExtendedField.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: Expression<T>) -> Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","description":"space.kscience.kmath.expressions.MstExtendedField.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","space.kscience.kmath.expressions.MstExtendedField.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","description":"space.kscience.kmath.expressions.MstField.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","space.kscience.kmath.expressions.MstField.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","description":"space.kscience.kmath.expressions.MstGroup.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","space.kscience.kmath.expressions.MstGroup.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","description":"space.kscience.kmath.expressions.MstNumericAlgebra.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-numeric-algebra/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","space.kscience.kmath.expressions.MstNumericAlgebra.unaryOperationFunction"]},{"name":"open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","description":"space.kscience.kmath.expressions.MstRing.unaryOperationFunction","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/unary-operation-function.html","searchKeys":["unaryOperationFunction","open override fun unaryOperationFunction(operation: String): (arg: MST) -> MST.Unary","space.kscience.kmath.expressions.MstRing.unaryOperationFunction"]},{"name":"open override fun volume(): Double","description":"space.kscience.kmath.domains.HyperSquareDomain.volume","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/volume.html","searchKeys":["volume","open override fun volume(): Double","space.kscience.kmath.domains.HyperSquareDomain.volume"]},{"name":"open override fun volume(): Double","description":"space.kscience.kmath.domains.UnconstrainedDomain.volume","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/volume.html","searchKeys":["volume","open override fun volume(): Double","space.kscience.kmath.domains.UnconstrainedDomain.volume"]},{"name":"open override fun volume(): Double","description":"space.kscience.kmath.domains.UnivariateDomain.volume","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/volume.html","searchKeys":["volume","open override fun volume(): Double","space.kscience.kmath.domains.UnivariateDomain.volume"]},{"name":"open override val StructureND<Double>.buffer: DoubleBuffer","description":"space.kscience.kmath.nd.DoubleFieldND.buffer","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/buffer.html","searchKeys":["buffer","open override val StructureND<Double>.buffer: DoubleBuffer","space.kscience.kmath.nd.DoubleFieldND.buffer"]},{"name":"open override val bufferFactory: BufferFactory<T>","description":"space.kscience.kmath.operations.BufferField.bufferFactory","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/buffer-factory.html","searchKeys":["bufferFactory","open override val bufferFactory: BufferFactory<T>","space.kscience.kmath.operations.BufferField.bufferFactory"]},{"name":"open override val colNum: Int","description":"space.kscience.kmath.linear.VirtualMatrix.colNum","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/col-num.html","searchKeys":["colNum","open override val colNum: Int","space.kscience.kmath.linear.VirtualMatrix.colNum"]},{"name":"open override val columns: List<MutableStructure1D<T>>","description":"space.kscience.kmath.nd.MutableStructure2D.columns","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure2-d/columns.html","searchKeys":["columns","open override val columns: List<MutableStructure1D<T>>","space.kscience.kmath.nd.MutableStructure2D.columns"]},{"name":"open override val determinant: T","description":"space.kscience.kmath.linear.LupDecomposition.determinant","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/determinant.html","searchKeys":["determinant","open override val determinant: T","space.kscience.kmath.linear.LupDecomposition.determinant"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.domains.HyperSquareDomain.dimension","location":"kmath-core/space.kscience.kmath.domains/-hyper-square-domain/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.domains.HyperSquareDomain.dimension"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.domains.UnconstrainedDomain.dimension","location":"kmath-core/space.kscience.kmath.domains/-unconstrained-domain/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.domains.UnconstrainedDomain.dimension"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.domains.UnivariateDomain.dimension","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.domains.UnivariateDomain.dimension"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.nd.Structure1D.dimension","location":"kmath-core/space.kscience.kmath.nd/-structure1-d/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.nd.Structure1D.dimension"]},{"name":"open override val elementAlgebra: A","description":"space.kscience.kmath.linear.BufferedLinearSpace.elementAlgebra","location":"kmath-core/space.kscience.kmath.linear/-buffered-linear-space/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: A","space.kscience.kmath.linear.BufferedLinearSpace.elementAlgebra"]},{"name":"open override val elementAlgebra: A","description":"space.kscience.kmath.operations.BufferField.elementAlgebra","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: A","space.kscience.kmath.operations.BufferField.elementAlgebra"]},{"name":"open override val elementAlgebra: DoubleField","description":"space.kscience.kmath.linear.DoubleLinearSpace.elementAlgebra","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: DoubleField","space.kscience.kmath.linear.DoubleLinearSpace.elementAlgebra"]},{"name":"open override val l: Matrix<T>","description":"space.kscience.kmath.linear.LupDecomposition.l","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/l.html","searchKeys":["l","open override val l: Matrix<T>","space.kscience.kmath.linear.LupDecomposition.l"]},{"name":"open override val linearSize: Int","description":"space.kscience.kmath.nd.DefaultStrides.linearSize","location":"kmath-core/space.kscience.kmath.nd/-default-strides/linear-size.html","searchKeys":["linearSize","open override val linearSize: Int","space.kscience.kmath.nd.DefaultStrides.linearSize"]},{"name":"open override val one: AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.one","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/one.html","searchKeys":["one","open override val one: AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.one"]},{"name":"open override val one: BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.one","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/one.html","searchKeys":["one","open override val one: BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.one"]},{"name":"open override val one: BigInt","description":"space.kscience.kmath.operations.BigIntField.one","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/one.html","searchKeys":["one","open override val one: BigInt","space.kscience.kmath.operations.BigIntField.one"]},{"name":"open override val one: BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.one","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/one.html","searchKeys":["one","open override val one: BigInteger","space.kscience.kmath.operations.JBigIntegerField.one"]},{"name":"open override val one: Buffer<Double>","description":"space.kscience.kmath.operations.DoubleBufferField.one","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/one.html","searchKeys":["one","open override val one: Buffer<Double>","space.kscience.kmath.operations.DoubleBufferField.one"]},{"name":"open override val one: Buffer<T>","description":"space.kscience.kmath.operations.BufferField.one","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/one.html","searchKeys":["one","open override val one: Buffer<T>","space.kscience.kmath.operations.BufferField.one"]},{"name":"open override val one: BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.one","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/one.html","searchKeys":["one","open override val one: BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.one"]},{"name":"open override val one: BufferND<Short>","description":"space.kscience.kmath.nd.ShortRingND.one","location":"kmath-core/space.kscience.kmath.nd/-short-ring-n-d/one.html","searchKeys":["one","open override val one: BufferND<Short>","space.kscience.kmath.nd.ShortRingND.one"]},{"name":"open override val one: BufferND<T>","description":"space.kscience.kmath.nd.BufferedRingND.one","location":"kmath-core/space.kscience.kmath.nd/-buffered-ring-n-d/one.html","searchKeys":["one","open override val one: BufferND<T>","space.kscience.kmath.nd.BufferedRingND.one"]},{"name":"open override val one: Byte","description":"space.kscience.kmath.operations.ByteRing.one","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/one.html","searchKeys":["one","open override val one: Byte","space.kscience.kmath.operations.ByteRing.one"]},{"name":"open override val one: Double","description":"space.kscience.kmath.operations.DoubleField.one","location":"kmath-core/space.kscience.kmath.operations/-double-field/one.html","searchKeys":["one","open override val one: Double","space.kscience.kmath.operations.DoubleField.one"]},{"name":"open override val one: Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.one","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/one.html","searchKeys":["one","open override val one: Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.one"]},{"name":"open override val one: Float","description":"space.kscience.kmath.operations.FloatField.one","location":"kmath-core/space.kscience.kmath.operations/-float-field/one.html","searchKeys":["one","open override val one: Float","space.kscience.kmath.operations.FloatField.one"]},{"name":"open override val one: Int","description":"space.kscience.kmath.operations.IntRing.one","location":"kmath-core/space.kscience.kmath.operations/-int-ring/one.html","searchKeys":["one","open override val one: Int","space.kscience.kmath.operations.IntRing.one"]},{"name":"open override val one: Long","description":"space.kscience.kmath.operations.LongRing.one","location":"kmath-core/space.kscience.kmath.operations/-long-ring/one.html","searchKeys":["one","open override val one: Long","space.kscience.kmath.operations.LongRing.one"]},{"name":"open override val one: MST.Numeric","description":"space.kscience.kmath.expressions.MstExtendedField.one","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/one.html","searchKeys":["one","open override val one: MST.Numeric","space.kscience.kmath.expressions.MstExtendedField.one"]},{"name":"open override val one: MST.Numeric","description":"space.kscience.kmath.expressions.MstField.one","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/one.html","searchKeys":["one","open override val one: MST.Numeric","space.kscience.kmath.expressions.MstField.one"]},{"name":"open override val one: MST.Numeric","description":"space.kscience.kmath.expressions.MstRing.one","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/one.html","searchKeys":["one","open override val one: MST.Numeric","space.kscience.kmath.expressions.MstRing.one"]},{"name":"open override val one: Short","description":"space.kscience.kmath.operations.ShortRing.one","location":"kmath-core/space.kscience.kmath.operations/-short-ring/one.html","searchKeys":["one","open override val one: Short","space.kscience.kmath.operations.ShortRing.one"]},{"name":"open override val p: Matrix<T>","description":"space.kscience.kmath.linear.LupDecomposition.p","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/p.html","searchKeys":["p","open override val p: Matrix<T>","space.kscience.kmath.linear.LupDecomposition.p"]},{"name":"open override val rowNum: Int","description":"space.kscience.kmath.linear.VirtualMatrix.rowNum","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/row-num.html","searchKeys":["rowNum","open override val rowNum: Int","space.kscience.kmath.linear.VirtualMatrix.rowNum"]},{"name":"open override val rows: List<MutableStructure1D<T>>","description":"space.kscience.kmath.nd.MutableStructure2D.rows","location":"kmath-core/space.kscience.kmath.nd/-mutable-structure2-d/rows.html","searchKeys":["rows","open override val rows: List<MutableStructure1D<T>>","space.kscience.kmath.nd.MutableStructure2D.rows"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.linear.VirtualMatrix.shape","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.linear.VirtualMatrix.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd.BufferND.shape","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd.BufferND.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd.DefaultStrides.shape","location":"kmath-core/space.kscience.kmath.nd/-default-strides/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd.DefaultStrides.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd.Structure2D.shape","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd.Structure2D.shape"]},{"name":"open override val size: Int","description":"space.kscience.kmath.operations.BufferField.size","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.operations.BufferField.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.ArrayBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-array-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.ArrayBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.DoubleBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.DoubleBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.FlaggedDoubleBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.FloatBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.FloatBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.IntBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.IntBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.ListBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.ListBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.LongBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.LongBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.MemoryBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-memory-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.MemoryBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.MutableListBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.MutableListBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.ReadOnlyBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.ReadOnlyBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.ShortBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.ShortBuffer.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.structures.VirtualBuffer.size","location":"kmath-core/space.kscience.kmath.structures/-virtual-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.structures.VirtualBuffer.size"]},{"name":"open override val strides: IntArray","description":"space.kscience.kmath.nd.DefaultStrides.strides","location":"kmath-core/space.kscience.kmath.nd/-default-strides/strides.html","searchKeys":["strides","open override val strides: IntArray","space.kscience.kmath.nd.DefaultStrides.strides"]},{"name":"open override val strides: Strides","description":"space.kscience.kmath.nd.BufferedGroupND.strides","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/strides.html","searchKeys":["strides","open override val strides: Strides","space.kscience.kmath.nd.BufferedGroupND.strides"]},{"name":"open override val symbols: List<Symbol>","description":"space.kscience.kmath.expressions.SimpleSymbolIndexer.symbols","location":"kmath-core/space.kscience.kmath.expressions/-simple-symbol-indexer/symbols.html","searchKeys":["symbols","open override val symbols: List<Symbol>","space.kscience.kmath.expressions.SimpleSymbolIndexer.symbols"]},{"name":"open override val u: Matrix<T>","description":"space.kscience.kmath.linear.LupDecomposition.u","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/u.html","searchKeys":["u","open override val u: Matrix<T>","space.kscience.kmath.linear.LupDecomposition.u"]},{"name":"open override val zero: AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.zero","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/zero.html","searchKeys":["zero","open override val zero: AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffField.zero"]},{"name":"open override val zero: BigDecimal","description":"space.kscience.kmath.operations.JBigDecimalFieldBase.zero","location":"kmath-core/space.kscience.kmath.operations/-j-big-decimal-field-base/zero.html","searchKeys":["zero","open override val zero: BigDecimal","space.kscience.kmath.operations.JBigDecimalFieldBase.zero"]},{"name":"open override val zero: BigInt","description":"space.kscience.kmath.operations.BigIntField.zero","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/zero.html","searchKeys":["zero","open override val zero: BigInt","space.kscience.kmath.operations.BigIntField.zero"]},{"name":"open override val zero: BigInteger","description":"space.kscience.kmath.operations.JBigIntegerField.zero","location":"kmath-core/space.kscience.kmath.operations/-j-big-integer-field/zero.html","searchKeys":["zero","open override val zero: BigInteger","space.kscience.kmath.operations.JBigIntegerField.zero"]},{"name":"open override val zero: Buffer<Double>","description":"space.kscience.kmath.operations.DoubleBufferField.zero","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/zero.html","searchKeys":["zero","open override val zero: Buffer<Double>","space.kscience.kmath.operations.DoubleBufferField.zero"]},{"name":"open override val zero: Buffer<T>","description":"space.kscience.kmath.operations.BufferField.zero","location":"kmath-core/space.kscience.kmath.operations/-buffer-field/zero.html","searchKeys":["zero","open override val zero: Buffer<T>","space.kscience.kmath.operations.BufferField.zero"]},{"name":"open override val zero: BufferND<Double>","description":"space.kscience.kmath.nd.DoubleFieldND.zero","location":"kmath-core/space.kscience.kmath.nd/-double-field-n-d/zero.html","searchKeys":["zero","open override val zero: BufferND<Double>","space.kscience.kmath.nd.DoubleFieldND.zero"]},{"name":"open override val zero: BufferND<Short>","description":"space.kscience.kmath.nd.ShortRingND.zero","location":"kmath-core/space.kscience.kmath.nd/-short-ring-n-d/zero.html","searchKeys":["zero","open override val zero: BufferND<Short>","space.kscience.kmath.nd.ShortRingND.zero"]},{"name":"open override val zero: BufferND<T>","description":"space.kscience.kmath.nd.BufferedGroupND.zero","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/zero.html","searchKeys":["zero","open override val zero: BufferND<T>","space.kscience.kmath.nd.BufferedGroupND.zero"]},{"name":"open override val zero: Byte","description":"space.kscience.kmath.operations.ByteRing.zero","location":"kmath-core/space.kscience.kmath.operations/-byte-ring/zero.html","searchKeys":["zero","open override val zero: Byte","space.kscience.kmath.operations.ByteRing.zero"]},{"name":"open override val zero: Double","description":"space.kscience.kmath.operations.DoubleField.zero","location":"kmath-core/space.kscience.kmath.operations/-double-field/zero.html","searchKeys":["zero","open override val zero: Double","space.kscience.kmath.operations.DoubleField.zero"]},{"name":"open override val zero: Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.zero","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/zero.html","searchKeys":["zero","open override val zero: Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.zero"]},{"name":"open override val zero: Float","description":"space.kscience.kmath.operations.FloatField.zero","location":"kmath-core/space.kscience.kmath.operations/-float-field/zero.html","searchKeys":["zero","open override val zero: Float","space.kscience.kmath.operations.FloatField.zero"]},{"name":"open override val zero: Int","description":"space.kscience.kmath.operations.IntRing.zero","location":"kmath-core/space.kscience.kmath.operations/-int-ring/zero.html","searchKeys":["zero","open override val zero: Int","space.kscience.kmath.operations.IntRing.zero"]},{"name":"open override val zero: Long","description":"space.kscience.kmath.operations.LongRing.zero","location":"kmath-core/space.kscience.kmath.operations/-long-ring/zero.html","searchKeys":["zero","open override val zero: Long","space.kscience.kmath.operations.LongRing.zero"]},{"name":"open override val zero: MST.Numeric","description":"space.kscience.kmath.expressions.MstExtendedField.zero","location":"kmath-core/space.kscience.kmath.expressions/-mst-extended-field/zero.html","searchKeys":["zero","open override val zero: MST.Numeric","space.kscience.kmath.expressions.MstExtendedField.zero"]},{"name":"open override val zero: MST.Numeric","description":"space.kscience.kmath.expressions.MstField.zero","location":"kmath-core/space.kscience.kmath.expressions/-mst-field/zero.html","searchKeys":["zero","open override val zero: MST.Numeric","space.kscience.kmath.expressions.MstField.zero"]},{"name":"open override val zero: MST.Numeric","description":"space.kscience.kmath.expressions.MstGroup.zero","location":"kmath-core/space.kscience.kmath.expressions/-mst-group/zero.html","searchKeys":["zero","open override val zero: MST.Numeric","space.kscience.kmath.expressions.MstGroup.zero"]},{"name":"open override val zero: MST.Numeric","description":"space.kscience.kmath.expressions.MstRing.zero","location":"kmath-core/space.kscience.kmath.expressions/-mst-ring/zero.html","searchKeys":["zero","open override val zero: MST.Numeric","space.kscience.kmath.expressions.MstRing.zero"]},{"name":"open override val zero: Short","description":"space.kscience.kmath.operations.ShortRing.zero","location":"kmath-core/space.kscience.kmath.operations/-short-ring/zero.html","searchKeys":["zero","open override val zero: Short","space.kscience.kmath.operations.ShortRing.zero"]},{"name":"open val StructureND<T>.buffer: Buffer<T>","description":"space.kscience.kmath.nd.BufferAlgebraND.buffer","location":"kmath-core/space.kscience.kmath.nd/-buffer-algebra-n-d/buffer.html","searchKeys":["buffer","open val StructureND<T>.buffer: Buffer<T>","space.kscience.kmath.nd.BufferAlgebraND.buffer"]},{"name":"open val columns: List<Buffer<T>>","description":"space.kscience.kmath.nd.Structure2D.columns","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/columns.html","searchKeys":["columns","open val columns: List<Buffer<T>>","space.kscience.kmath.nd.Structure2D.columns"]},{"name":"open val dimension: Int","description":"space.kscience.kmath.nd.StructureND.dimension","location":"kmath-core/space.kscience.kmath.nd/-structure-n-d/dimension.html","searchKeys":["dimension","open val dimension: Int","space.kscience.kmath.nd.StructureND.dimension"]},{"name":"open val key: FeatureKey<F>","description":"space.kscience.kmath.misc.Feature.key","location":"kmath-core/space.kscience.kmath.misc/-feature/key.html","searchKeys":["key","open val key: FeatureKey<F>","space.kscience.kmath.misc.Feature.key"]},{"name":"open val rows: List<Buffer<T>>","description":"space.kscience.kmath.nd.Structure2D.rows","location":"kmath-core/space.kscience.kmath.nd/-structure2-d/rows.html","searchKeys":["rows","open val rows: List<Buffer<T>>","space.kscience.kmath.nd.Structure2D.rows"]},{"name":"operator fun <T : Any> Matrix<T>.plus(newFeature: MatrixFeature): MatrixWrapper<T>","description":"space.kscience.kmath.linear.plus","location":"kmath-core/space.kscience.kmath.linear/plus.html","searchKeys":["plus","operator fun <T : Any> Matrix<T>.plus(newFeature: MatrixFeature): MatrixWrapper<T>","space.kscience.kmath.linear.plus"]},{"name":"operator fun <T> Expression<T>.invoke(): T","description":"space.kscience.kmath.expressions.invoke","location":"kmath-core/space.kscience.kmath.expressions/invoke.html","searchKeys":["invoke","operator fun <T> Expression<T>.invoke(): T","space.kscience.kmath.expressions.invoke"]},{"name":"operator fun <T> Expression<T>.invoke(vararg pairs: Pair<String, T>): T","description":"space.kscience.kmath.expressions.invoke","location":"kmath-core/space.kscience.kmath.expressions/invoke.html","searchKeys":["invoke","operator fun <T> Expression<T>.invoke(vararg pairs: Pair<String, T>): T","space.kscience.kmath.expressions.invoke"]},{"name":"operator fun <T> Expression<T>.invoke(vararg pairs: Pair<Symbol, T>): T","description":"space.kscience.kmath.expressions.invoke","location":"kmath-core/space.kscience.kmath.expressions/invoke.html","searchKeys":["invoke","operator fun <T> Expression<T>.invoke(vararg pairs: Pair<Symbol, T>): T","space.kscience.kmath.expressions.invoke"]},{"name":"operator fun <T> Map<String, T>.get(symbol: Symbol): T?","description":"space.kscience.kmath.expressions.get","location":"kmath-core/space.kscience.kmath.expressions/get.html","searchKeys":["get","operator fun <T> Map<String, T>.get(symbol: Symbol): T?","space.kscience.kmath.expressions.get"]},{"name":"operator fun <T> Map<Symbol, T>.get(string: String): T?","description":"space.kscience.kmath.expressions.get","location":"kmath-core/space.kscience.kmath.expressions/get.html","searchKeys":["get","operator fun <T> Map<Symbol, T>.get(string: String): T?","space.kscience.kmath.expressions.get"]},{"name":"operator fun <T> MutableMap<String, T>.set(symbol: Symbol, value: T)","description":"space.kscience.kmath.expressions.set","location":"kmath-core/space.kscience.kmath.expressions/set.html","searchKeys":["set","operator fun <T> MutableMap<String, T>.set(symbol: Symbol, value: T)","space.kscience.kmath.expressions.set"]},{"name":"operator fun <T> MutableMap<Symbol, T>.set(string: String, value: T)","description":"space.kscience.kmath.expressions.set","location":"kmath-core/space.kscience.kmath.expressions/set.html","searchKeys":["set","operator fun <T> MutableMap<Symbol, T>.set(string: String, value: T)","space.kscience.kmath.expressions.set"]},{"name":"operator fun <T> StructureND<T>.get(vararg index: Int): T","description":"space.kscience.kmath.nd.get","location":"kmath-core/space.kscience.kmath.nd/get.html","searchKeys":["get","operator fun <T> StructureND<T>.get(vararg index: Int): T","space.kscience.kmath.nd.get"]},{"name":"operator fun Expression<T>.div(arg: T): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.div","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/div.html","searchKeys":["div","operator fun Expression<T>.div(arg: T): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.div"]},{"name":"operator fun Expression<T>.minus(arg: T): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.minus","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/minus.html","searchKeys":["minus","operator fun Expression<T>.minus(arg: T): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.minus"]},{"name":"operator fun Expression<T>.plus(arg: T): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.plus","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/plus.html","searchKeys":["plus","operator fun Expression<T>.plus(arg: T): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.plus"]},{"name":"operator fun Expression<T>.times(arg: T): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.times","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/times.html","searchKeys":["times","operator fun Expression<T>.times(arg: T): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.times"]},{"name":"operator fun Point<Double>.div(value: Double): DoubleBuffer","description":"space.kscience.kmath.linear.DoubleLinearSpace.div","location":"kmath-core/space.kscience.kmath.linear/-double-linear-space/div.html","searchKeys":["div","operator fun Point<Double>.div(value: Double): DoubleBuffer","space.kscience.kmath.linear.DoubleLinearSpace.div"]},{"name":"operator fun String.unaryMinus(): BigInt","description":"space.kscience.kmath.operations.BigIntField.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/unary-minus.html","searchKeys":["unaryMinus","operator fun String.unaryMinus(): BigInt","space.kscience.kmath.operations.BigIntField.unaryMinus"]},{"name":"operator fun String.unaryPlus(): BigInt","description":"space.kscience.kmath.operations.BigIntField.unaryPlus","location":"kmath-core/space.kscience.kmath.operations/-big-int-field/unary-plus.html","searchKeys":["unaryPlus","operator fun String.unaryPlus(): BigInt","space.kscience.kmath.operations.BigIntField.unaryPlus"]},{"name":"operator fun T.div(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionField.div","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-field/div.html","searchKeys":["div","operator fun T.div(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionField.div"]},{"name":"operator fun T.minus(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.minus","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/minus.html","searchKeys":["minus","operator fun T.minus(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.minus"]},{"name":"operator fun T.plus(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionGroup.plus","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-group/plus.html","searchKeys":["plus","operator fun T.plus(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionGroup.plus"]},{"name":"operator fun T.times(arg: Expression<T>): Expression<T>","description":"space.kscience.kmath.expressions.FunctionalExpressionRing.times","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-ring/times.html","searchKeys":["times","operator fun T.times(arg: Expression<T>): Expression<T>","space.kscience.kmath.expressions.FunctionalExpressionRing.times"]},{"name":"operator fun contains(d: Double): Boolean","description":"space.kscience.kmath.domains.UnivariateDomain.contains","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/contains.html","searchKeys":["contains","operator fun contains(d: Double): Boolean","space.kscience.kmath.domains.UnivariateDomain.contains"]},{"name":"operator fun div(other: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.div","location":"kmath-core/space.kscience.kmath.operations/-big-int/div.html","searchKeys":["div","operator fun div(other: BigInt): BigInt","space.kscience.kmath.operations.BigInt.div"]},{"name":"operator fun div(other: Int): BigInt","description":"space.kscience.kmath.operations.BigInt.div","location":"kmath-core/space.kscience.kmath.operations/-big-int/div.html","searchKeys":["div","operator fun div(other: Int): BigInt","space.kscience.kmath.operations.BigInt.div"]},{"name":"operator fun div(other: UInt): BigInt","description":"space.kscience.kmath.operations.BigInt.div","location":"kmath-core/space.kscience.kmath.operations/-big-int/div.html","searchKeys":["div","operator fun div(other: UInt): BigInt","space.kscience.kmath.operations.BigInt.div"]},{"name":"operator fun invoke(shape: IntArray): Strides","description":"space.kscience.kmath.nd.DefaultStrides.Companion.invoke","location":"kmath-core/space.kscience.kmath.nd/-default-strides/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(shape: IntArray): Strides","space.kscience.kmath.nd.DefaultStrides.Companion.invoke"]},{"name":"operator fun invoke(vararg elements: T): Matrix<T>","description":"space.kscience.kmath.linear.MatrixBuilder.invoke","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/invoke.html","searchKeys":["invoke","operator fun invoke(vararg elements: T): Matrix<T>","space.kscience.kmath.linear.MatrixBuilder.invoke"]},{"name":"operator fun iterator(): Iterator<F>","description":"space.kscience.kmath.misc.FeatureSet.iterator","location":"kmath-core/space.kscience.kmath.misc/-feature-set/iterator.html","searchKeys":["iterator","operator fun iterator(): Iterator<F>","space.kscience.kmath.misc.FeatureSet.iterator"]},{"name":"operator fun minus(b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.minus","location":"kmath-core/space.kscience.kmath.operations/-big-int/minus.html","searchKeys":["minus","operator fun minus(b: BigInt): BigInt","space.kscience.kmath.operations.BigInt.minus"]},{"name":"operator fun plus(b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.plus","location":"kmath-core/space.kscience.kmath.operations/-big-int/plus.html","searchKeys":["plus","operator fun plus(b: BigInt): BigInt","space.kscience.kmath.operations.BigInt.plus"]},{"name":"operator fun rem(other: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.rem","location":"kmath-core/space.kscience.kmath.operations/-big-int/rem.html","searchKeys":["rem","operator fun rem(other: BigInt): BigInt","space.kscience.kmath.operations.BigInt.rem"]},{"name":"operator fun rem(other: Int): Int","description":"space.kscience.kmath.operations.BigInt.rem","location":"kmath-core/space.kscience.kmath.operations/-big-int/rem.html","searchKeys":["rem","operator fun rem(other: Int): Int","space.kscience.kmath.operations.BigInt.rem"]},{"name":"operator fun times(b: BigInt): BigInt","description":"space.kscience.kmath.operations.BigInt.times","location":"kmath-core/space.kscience.kmath.operations/-big-int/times.html","searchKeys":["times","operator fun times(b: BigInt): BigInt","space.kscience.kmath.operations.BigInt.times"]},{"name":"operator fun times(other: Int): BigInt","description":"space.kscience.kmath.operations.BigInt.times","location":"kmath-core/space.kscience.kmath.operations/-big-int/times.html","searchKeys":["times","operator fun times(other: Int): BigInt","space.kscience.kmath.operations.BigInt.times"]},{"name":"operator fun times(other: UInt): BigInt","description":"space.kscience.kmath.operations.BigInt.times","location":"kmath-core/space.kscience.kmath.operations/-big-int/times.html","searchKeys":["times","operator fun times(other: UInt): BigInt","space.kscience.kmath.operations.BigInt.times"]},{"name":"operator fun unaryMinus(): BigInt","description":"space.kscience.kmath.operations.BigInt.unaryMinus","location":"kmath-core/space.kscience.kmath.operations/-big-int/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): BigInt","space.kscience.kmath.operations.BigInt.unaryMinus"]},{"name":"override fun derivativeOrNull(symbols: List<Symbol>): Expression<T>?","description":"space.kscience.kmath.expressions.FirstDerivativeExpression.derivativeOrNull","location":"kmath-core/space.kscience.kmath.expressions/-first-derivative-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","override fun derivativeOrNull(symbols: List<Symbol>): Expression<T>?","space.kscience.kmath.expressions.FirstDerivativeExpression.derivativeOrNull"]},{"name":"override val bufferFactory: BufferFactory<T>","description":"space.kscience.kmath.nd.BufferedGroupND.bufferFactory","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/buffer-factory.html","searchKeys":["bufferFactory","override val bufferFactory: BufferFactory<T>","space.kscience.kmath.nd.BufferedGroupND.bufferFactory"]},{"name":"override val elementContext: A","description":"space.kscience.kmath.nd.BufferedGroupND.elementContext","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/element-context.html","searchKeys":["elementContext","override val elementContext: A","space.kscience.kmath.nd.BufferedGroupND.elementContext"]},{"name":"override val shape: IntArray","description":"space.kscience.kmath.nd.BufferedGroupND.shape","location":"kmath-core/space.kscience.kmath.nd/-buffered-group-n-d/shape.html","searchKeys":["shape","override val shape: IntArray","space.kscience.kmath.nd.BufferedGroupND.shape"]},{"name":"val <T : Any> Matrix<T>.origin: Matrix<T>","description":"space.kscience.kmath.linear.origin","location":"kmath-core/space.kscience.kmath.linear/origin.html","searchKeys":["origin","val <T : Any> Matrix<T>.origin: Matrix<T>","space.kscience.kmath.linear.origin"]},{"name":"val <T, E> ExpressionAlgebra<T, E>.binding: ReadOnlyProperty<Any?, E>","description":"space.kscience.kmath.expressions.binding","location":"kmath-core/space.kscience.kmath.expressions/binding.html","searchKeys":["binding","val <T, E> ExpressionAlgebra<T, E>.binding: ReadOnlyProperty<Any?, E>","space.kscience.kmath.expressions.binding"]},{"name":"val <T> NumericAlgebra<T>.e: T","description":"space.kscience.kmath.operations.e","location":"kmath-core/space.kscience.kmath.operations/e.html","searchKeys":["e","val <T> NumericAlgebra<T>.e: T","space.kscience.kmath.operations.e"]},{"name":"val <T> NumericAlgebra<T>.pi: T","description":"space.kscience.kmath.operations.pi","location":"kmath-core/space.kscience.kmath.operations/pi.html","searchKeys":["pi","val <T> NumericAlgebra<T>.pi: T","space.kscience.kmath.operations.pi"]},{"name":"val BigInt.algebra: BigIntField","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val BigInt.algebra: BigIntField","space.kscience.kmath.operations.algebra"]},{"name":"val Buffer<*>.indices: IntRange","description":"space.kscience.kmath.structures.indices","location":"kmath-core/space.kscience.kmath.structures/indices.html","searchKeys":["indices","val Buffer<*>.indices: IntRange","space.kscience.kmath.structures.indices"]},{"name":"val Byte.Companion.algebra: ByteRing","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Byte.Companion.algebra: ByteRing","space.kscience.kmath.operations.algebra"]},{"name":"val ColumnarData<*>.indices: IntRange","description":"space.kscience.kmath.data.indices","location":"kmath-core/space.kscience.kmath.data/indices.html","searchKeys":["indices","val ColumnarData<*>.indices: IntRange","space.kscience.kmath.data.indices"]},{"name":"val Double.Companion.algebra: DoubleField","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Double.Companion.algebra: DoubleField","space.kscience.kmath.operations.algebra"]},{"name":"val DoubleField.linearSpace: DoubleLinearSpace","description":"space.kscience.kmath.linear.linearSpace","location":"kmath-core/space.kscience.kmath.linear/linear-space.html","searchKeys":["linearSpace","val DoubleField.linearSpace: DoubleLinearSpace","space.kscience.kmath.linear.linearSpace"]},{"name":"val FALSE: Symbol","description":"space.kscience.kmath.operations.LogicAlgebra.Companion.FALSE","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/-companion/-f-a-l-s-e.html","searchKeys":["FALSE","val FALSE: Symbol","space.kscience.kmath.operations.LogicAlgebra.Companion.FALSE"]},{"name":"val Float.Companion.algebra: FloatField","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Float.Companion.algebra: FloatField","space.kscience.kmath.operations.algebra"]},{"name":"val Int.Companion.algebra: IntRing","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Int.Companion.algebra: IntRing","space.kscience.kmath.operations.algebra"]},{"name":"val Long.Companion.algebra: LongRing","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Long.Companion.algebra: LongRing","space.kscience.kmath.operations.algebra"]},{"name":"val ONE: BigInt","description":"space.kscience.kmath.operations.BigInt.Companion.ONE","location":"kmath-core/space.kscience.kmath.operations/-big-int/-companion/-o-n-e.html","searchKeys":["ONE","val ONE: BigInt","space.kscience.kmath.operations.BigInt.Companion.ONE"]},{"name":"val Short.Companion.algebra: ShortRing","description":"space.kscience.kmath.operations.algebra","location":"kmath-core/space.kscience.kmath.operations/algebra.html","searchKeys":["algebra","val Short.Companion.algebra: ShortRing","space.kscience.kmath.operations.algebra"]},{"name":"val TRUE: Symbol","description":"space.kscience.kmath.operations.LogicAlgebra.Companion.TRUE","location":"kmath-core/space.kscience.kmath.operations/-logic-algebra/-companion/-t-r-u-e.html","searchKeys":["TRUE","val TRUE: Symbol","space.kscience.kmath.operations.LogicAlgebra.Companion.TRUE"]},{"name":"val ZERO: BigInt","description":"space.kscience.kmath.operations.BigInt.Companion.ZERO","location":"kmath-core/space.kscience.kmath.operations/-big-int/-companion/-z-e-r-o.html","searchKeys":["ZERO","val ZERO: BigInt","space.kscience.kmath.operations.BigInt.Companion.ZERO"]},{"name":"val actual: IntArray","description":"space.kscience.kmath.nd.ShapeMismatchException.actual","location":"kmath-core/space.kscience.kmath.nd/-shape-mismatch-exception/actual.html","searchKeys":["actual","val actual: IntArray","space.kscience.kmath.nd.ShapeMismatchException.actual"]},{"name":"val algebra: A","description":"space.kscience.kmath.expressions.FunctionalExpressionAlgebra.algebra","location":"kmath-core/space.kscience.kmath.expressions/-functional-expression-algebra/algebra.html","searchKeys":["algebra","val algebra: A","space.kscience.kmath.expressions.FunctionalExpressionAlgebra.algebra"]},{"name":"val array: DoubleArray","description":"space.kscience.kmath.structures.DoubleBuffer.array","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/array.html","searchKeys":["array","val array: DoubleArray","space.kscience.kmath.structures.DoubleBuffer.array"]},{"name":"val array: FloatArray","description":"space.kscience.kmath.structures.FloatBuffer.array","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/array.html","searchKeys":["array","val array: FloatArray","space.kscience.kmath.structures.FloatBuffer.array"]},{"name":"val array: IntArray","description":"space.kscience.kmath.structures.IntBuffer.array","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/array.html","searchKeys":["array","val array: IntArray","space.kscience.kmath.structures.IntBuffer.array"]},{"name":"val array: LongArray","description":"space.kscience.kmath.structures.LongBuffer.array","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/array.html","searchKeys":["array","val array: LongArray","space.kscience.kmath.structures.LongBuffer.array"]},{"name":"val array: ShortArray","description":"space.kscience.kmath.structures.ShortBuffer.array","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/array.html","searchKeys":["array","val array: ShortArray","space.kscience.kmath.structures.ShortBuffer.array"]},{"name":"val buffer: Buffer<T>","description":"space.kscience.kmath.nd.BufferND.buffer","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/buffer.html","searchKeys":["buffer","val buffer: Buffer<T>","space.kscience.kmath.nd.BufferND.buffer"]},{"name":"val buffer: MutableBuffer<T>","description":"space.kscience.kmath.structures.ReadOnlyBuffer.buffer","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/buffer.html","searchKeys":["buffer","val buffer: MutableBuffer<T>","space.kscience.kmath.structures.ReadOnlyBuffer.buffer"]},{"name":"val columns: Int","description":"space.kscience.kmath.linear.MatrixBuilder.columns","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/columns.html","searchKeys":["columns","val columns: Int","space.kscience.kmath.linear.MatrixBuilder.columns"]},{"name":"val console: Loggable","description":"space.kscience.kmath.misc.Loggable.Companion.console","location":"kmath-core/space.kscience.kmath.misc/-loggable/-companion/console.html","searchKeys":["console","val console: Loggable","space.kscience.kmath.misc.Loggable.Companion.console"]},{"name":"val context: F","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.context","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/context.html","searchKeys":["context","val context: F","space.kscience.kmath.expressions.SimpleAutoDiffField.context"]},{"name":"val context: Field<T>","description":"space.kscience.kmath.expressions.DerivationResult.context","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/context.html","searchKeys":["context","val context: Field<T>","space.kscience.kmath.expressions.DerivationResult.context"]},{"name":"val context: LinearSpace<T, *>","description":"space.kscience.kmath.linear.LupDecomposition.context","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/context.html","searchKeys":["context","val context: LinearSpace<T, *>","space.kscience.kmath.linear.LupDecomposition.context"]},{"name":"val double: LinearSpace<Double, DoubleField>","description":"space.kscience.kmath.linear.LinearSpace.Companion.double","location":"kmath-core/space.kscience.kmath.linear/-linear-space/-companion/double.html","searchKeys":["double","val double: LinearSpace<Double, DoubleField>","space.kscience.kmath.linear.LinearSpace.Companion.double"]},{"name":"val elementContext: Field<T>","description":"space.kscience.kmath.linear.LupDecomposition.elementContext","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/element-context.html","searchKeys":["elementContext","val elementContext: Field<T>","space.kscience.kmath.linear.LupDecomposition.elementContext"]},{"name":"val expected: IntArray","description":"space.kscience.kmath.nd.ShapeMismatchException.expected","location":"kmath-core/space.kscience.kmath.nd/-shape-mismatch-exception/expected.html","searchKeys":["expected","val expected: IntArray","space.kscience.kmath.nd.ShapeMismatchException.expected"]},{"name":"val features: FeatureSet<StructureFeature>","description":"space.kscience.kmath.linear.MatrixWrapper.features","location":"kmath-core/space.kscience.kmath.linear/-matrix-wrapper/features.html","searchKeys":["features","val features: FeatureSet<StructureFeature>","space.kscience.kmath.linear.MatrixWrapper.features"]},{"name":"val features: Map<FeatureKey<F>, F>","description":"space.kscience.kmath.misc.FeatureSet.features","location":"kmath-core/space.kscience.kmath.misc/-feature-set/features.html","searchKeys":["features","val features: Map<FeatureKey<F>, F>","space.kscience.kmath.misc.FeatureSet.features"]},{"name":"val field: F","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression.field","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/field.html","searchKeys":["field","val field: F","space.kscience.kmath.expressions.SimpleAutoDiffExpression.field"]},{"name":"val flags: ByteArray","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.flags","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/flags.html","searchKeys":["flags","val flags: ByteArray","space.kscience.kmath.structures.FlaggedDoubleBuffer.flags"]},{"name":"val function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>","description":"space.kscience.kmath.expressions.SimpleAutoDiffExpression.function","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-expression/function.html","searchKeys":["function","val function: SimpleAutoDiffField<T, F>.() -> AutoDiffValue<T>","space.kscience.kmath.expressions.SimpleAutoDiffExpression.function"]},{"name":"val generator: (i: Int, j: Int) -> T","description":"space.kscience.kmath.linear.VirtualMatrix.generator","location":"kmath-core/space.kscience.kmath.linear/-virtual-matrix/generator.html","searchKeys":["generator","val generator: (i: Int, j: Int) -> T","space.kscience.kmath.linear.VirtualMatrix.generator"]},{"name":"val left: MST","description":"space.kscience.kmath.expressions.MST.Binary.left","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-binary/left.html","searchKeys":["left","val left: MST","space.kscience.kmath.expressions.MST.Binary.left"]},{"name":"val linearSpace: LinearSpace<T, A>","description":"space.kscience.kmath.linear.MatrixBuilder.linearSpace","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/linear-space.html","searchKeys":["linearSpace","val linearSpace: LinearSpace<T, A>","space.kscience.kmath.linear.MatrixBuilder.linearSpace"]},{"name":"val list: List<T>","description":"space.kscience.kmath.structures.ListBuffer.list","location":"kmath-core/space.kscience.kmath.structures/-list-buffer/list.html","searchKeys":["list","val list: List<T>","space.kscience.kmath.structures.ListBuffer.list"]},{"name":"val list: MutableList<T>","description":"space.kscience.kmath.structures.MutableListBuffer.list","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/list.html","searchKeys":["list","val list: MutableList<T>","space.kscience.kmath.structures.MutableListBuffer.list"]},{"name":"val lu: Matrix<T>","description":"space.kscience.kmath.linear.LupDecomposition.lu","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/lu.html","searchKeys":["lu","val lu: Matrix<T>","space.kscience.kmath.linear.LupDecomposition.lu"]},{"name":"val mask: Byte","description":"space.kscience.kmath.structures.ValueFlag.MISSING.mask","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-m-i-s-s-i-n-g/mask.html","searchKeys":["mask","val mask: Byte","space.kscience.kmath.structures.ValueFlag.MISSING.mask"]},{"name":"val mask: Byte","description":"space.kscience.kmath.structures.ValueFlag.NAN.mask","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-a-n/mask.html","searchKeys":["mask","val mask: Byte","space.kscience.kmath.structures.ValueFlag.NAN.mask"]},{"name":"val mask: Byte","description":"space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.mask","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-e-g-a-t-i-v-e_-i-n-f-i-n-i-t-y/mask.html","searchKeys":["mask","val mask: Byte","space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.mask"]},{"name":"val mask: Byte","description":"space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.mask","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-p-o-s-i-t-i-v-e_-i-n-f-i-n-i-t-y/mask.html","searchKeys":["mask","val mask: Byte","space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.mask"]},{"name":"val mask: Byte","description":"space.kscience.kmath.structures.ValueFlag.mask","location":"kmath-core/space.kscience.kmath.structures/-value-flag/mask.html","searchKeys":["mask","val mask: Byte","space.kscience.kmath.structures.ValueFlag.mask"]},{"name":"val message: String","description":"space.kscience.kmath.misc.PerformancePitfall.message","location":"kmath-core/space.kscience.kmath.misc/-performance-pitfall/message.html","searchKeys":["message","val message: String","space.kscience.kmath.misc.PerformancePitfall.message"]},{"name":"val mutableBuffer: MutableBuffer<T>","description":"space.kscience.kmath.nd.MutableBufferND.mutableBuffer","location":"kmath-core/space.kscience.kmath.nd/-mutable-buffer-n-d/mutable-buffer.html","searchKeys":["mutableBuffer","val mutableBuffer: MutableBuffer<T>","space.kscience.kmath.nd.MutableBufferND.mutableBuffer"]},{"name":"val name: String","description":"space.kscience.kmath.structures.ValueFlag.MISSING.name","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-m-i-s-s-i-n-g/name.html","searchKeys":["name","val name: String","space.kscience.kmath.structures.ValueFlag.MISSING.name"]},{"name":"val name: String","description":"space.kscience.kmath.structures.ValueFlag.NAN.name","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-a-n/name.html","searchKeys":["name","val name: String","space.kscience.kmath.structures.ValueFlag.NAN.name"]},{"name":"val name: String","description":"space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.name","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-e-g-a-t-i-v-e_-i-n-f-i-n-i-t-y/name.html","searchKeys":["name","val name: String","space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.name"]},{"name":"val name: String","description":"space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.name","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-p-o-s-i-t-i-v-e_-i-n-f-i-n-i-t-y/name.html","searchKeys":["name","val name: String","space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.name"]},{"name":"val operation: String","description":"space.kscience.kmath.expressions.MST.Binary.operation","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-binary/operation.html","searchKeys":["operation","val operation: String","space.kscience.kmath.expressions.MST.Binary.operation"]},{"name":"val operation: String","description":"space.kscience.kmath.expressions.MST.Unary.operation","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-unary/operation.html","searchKeys":["operation","val operation: String","space.kscience.kmath.expressions.MST.Unary.operation"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.structures.ValueFlag.MISSING.ordinal","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-m-i-s-s-i-n-g/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.structures.ValueFlag.MISSING.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.structures.ValueFlag.NAN.ordinal","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-a-n/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.structures.ValueFlag.NAN.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.ordinal","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-n-e-g-a-t-i-v-e_-i-n-f-i-n-i-t-y/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.structures.ValueFlag.NEGATIVE_INFINITY.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.ordinal","location":"kmath-core/space.kscience.kmath.structures/-value-flag/-p-o-s-i-t-i-v-e_-i-n-f-i-n-i-t-y/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.structures.ValueFlag.POSITIVE_INFINITY.ordinal"]},{"name":"val origin: Matrix<T>","description":"space.kscience.kmath.linear.MatrixWrapper.origin","location":"kmath-core/space.kscience.kmath.linear/-matrix-wrapper/origin.html","searchKeys":["origin","val origin: Matrix<T>","space.kscience.kmath.linear.MatrixWrapper.origin"]},{"name":"val original: Matrix<T>","description":"space.kscience.kmath.linear.TransposedFeature.original","location":"kmath-core/space.kscience.kmath.linear/-transposed-feature/original.html","searchKeys":["original","val original: Matrix<T>","space.kscience.kmath.linear.TransposedFeature.original"]},{"name":"val pivot: IntArray","description":"space.kscience.kmath.linear.LupDecomposition.pivot","location":"kmath-core/space.kscience.kmath.linear/-lup-decomposition/pivot.html","searchKeys":["pivot","val pivot: IntArray","space.kscience.kmath.linear.LupDecomposition.pivot"]},{"name":"val range: ClosedFloatingPointRange<Double>","description":"space.kscience.kmath.domains.UnivariateDomain.range","location":"kmath-core/space.kscience.kmath.domains/-univariate-domain/range.html","searchKeys":["range","val range: ClosedFloatingPointRange<Double>","space.kscience.kmath.domains.UnivariateDomain.range"]},{"name":"val right: MST","description":"space.kscience.kmath.expressions.MST.Binary.right","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-binary/right.html","searchKeys":["right","val right: MST","space.kscience.kmath.expressions.MST.Binary.right"]},{"name":"val rows: Int","description":"space.kscience.kmath.linear.MatrixBuilder.rows","location":"kmath-core/space.kscience.kmath.linear/-matrix-builder/rows.html","searchKeys":["rows","val rows: Int","space.kscience.kmath.linear.MatrixBuilder.rows"]},{"name":"val size: Int","description":"space.kscience.kmath.operations.DoubleBufferField.size","location":"kmath-core/space.kscience.kmath.operations/-double-buffer-field/size.html","searchKeys":["size","val size: Int","space.kscience.kmath.operations.DoubleBufferField.size"]},{"name":"val strides: Strides","description":"space.kscience.kmath.nd.BufferND.strides","location":"kmath-core/space.kscience.kmath.nd/-buffer-n-d/strides.html","searchKeys":["strides","val strides: Strides","space.kscience.kmath.nd.BufferND.strides"]},{"name":"val symbol: ReadOnlyProperty<Any?, Symbol>","description":"space.kscience.kmath.expressions.symbol","location":"kmath-core/space.kscience.kmath.expressions/symbol.html","searchKeys":["symbol","val symbol: ReadOnlyProperty<Any?, Symbol>","space.kscience.kmath.expressions.symbol"]},{"name":"val value: MST","description":"space.kscience.kmath.expressions.MST.Unary.value","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-unary/value.html","searchKeys":["value","val value: MST","space.kscience.kmath.expressions.MST.Unary.value"]},{"name":"val value: Number","description":"space.kscience.kmath.expressions.MST.Numeric.value","location":"kmath-core/space.kscience.kmath.expressions/-m-s-t/-numeric/value.html","searchKeys":["value","val value: Number","space.kscience.kmath.expressions.MST.Numeric.value"]},{"name":"val value: T","description":"space.kscience.kmath.expressions.AutoDiffValue.value","location":"kmath-core/space.kscience.kmath.expressions/-auto-diff-value/value.html","searchKeys":["value","val value: T","space.kscience.kmath.expressions.AutoDiffValue.value"]},{"name":"val value: T","description":"space.kscience.kmath.expressions.DerivationResult.value","location":"kmath-core/space.kscience.kmath.expressions/-derivation-result/value.html","searchKeys":["value","val value: T","space.kscience.kmath.expressions.DerivationResult.value"]},{"name":"val values: DoubleArray","description":"space.kscience.kmath.structures.FlaggedDoubleBuffer.values","location":"kmath-core/space.kscience.kmath.structures/-flagged-double-buffer/values.html","searchKeys":["values","val values: DoubleArray","space.kscience.kmath.structures.FlaggedDoubleBuffer.values"]},{"name":"val x: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.x","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/x.html","searchKeys":["x","val x: Symbol","space.kscience.kmath.expressions.Symbol.Companion.x"]},{"name":"val xError: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.xError","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/x-error.html","searchKeys":["xError","val xError: Symbol","space.kscience.kmath.expressions.Symbol.Companion.xError"]},{"name":"val y: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.y","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/y.html","searchKeys":["y","val y: Symbol","space.kscience.kmath.expressions.Symbol.Companion.y"]},{"name":"val yError: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.yError","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/y-error.html","searchKeys":["yError","val yError: Symbol","space.kscience.kmath.expressions.Symbol.Companion.yError"]},{"name":"val z: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.z","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/z.html","searchKeys":["z","val z: Symbol","space.kscience.kmath.expressions.Symbol.Companion.z"]},{"name":"val zError: Symbol","description":"space.kscience.kmath.expressions.Symbol.Companion.zError","location":"kmath-core/space.kscience.kmath.expressions/-symbol/-companion/z-error.html","searchKeys":["zError","val zError: Symbol","space.kscience.kmath.expressions.Symbol.Companion.zError"]},{"name":"value class DoubleBuffer(array: DoubleArray) : MutableBuffer<Double> ","description":"space.kscience.kmath.structures.DoubleBuffer","location":"kmath-core/space.kscience.kmath.structures/-double-buffer/index.html","searchKeys":["DoubleBuffer","value class DoubleBuffer(array: DoubleArray) : MutableBuffer<Double> ","space.kscience.kmath.structures.DoubleBuffer"]},{"name":"value class FeatureSet<F : Feature<F>> : Featured<F> ","description":"space.kscience.kmath.misc.FeatureSet","location":"kmath-core/space.kscience.kmath.misc/-feature-set/index.html","searchKeys":["FeatureSet","value class FeatureSet<F : Feature<F>> : Featured<F> ","space.kscience.kmath.misc.FeatureSet"]},{"name":"value class FloatBuffer(array: FloatArray) : MutableBuffer<Float> ","description":"space.kscience.kmath.structures.FloatBuffer","location":"kmath-core/space.kscience.kmath.structures/-float-buffer/index.html","searchKeys":["FloatBuffer","value class FloatBuffer(array: FloatArray) : MutableBuffer<Float> ","space.kscience.kmath.structures.FloatBuffer"]},{"name":"value class IntBuffer(array: IntArray) : MutableBuffer<Int> ","description":"space.kscience.kmath.structures.IntBuffer","location":"kmath-core/space.kscience.kmath.structures/-int-buffer/index.html","searchKeys":["IntBuffer","value class IntBuffer(array: IntArray) : MutableBuffer<Int> ","space.kscience.kmath.structures.IntBuffer"]},{"name":"value class LongBuffer(array: LongArray) : MutableBuffer<Long> ","description":"space.kscience.kmath.structures.LongBuffer","location":"kmath-core/space.kscience.kmath.structures/-long-buffer/index.html","searchKeys":["LongBuffer","value class LongBuffer(array: LongArray) : MutableBuffer<Long> ","space.kscience.kmath.structures.LongBuffer"]},{"name":"value class MutableListBuffer<T>(list: MutableList<T>) : MutableBuffer<T> ","description":"space.kscience.kmath.structures.MutableListBuffer","location":"kmath-core/space.kscience.kmath.structures/-mutable-list-buffer/index.html","searchKeys":["MutableListBuffer","value class MutableListBuffer<T>(list: MutableList<T>) : MutableBuffer<T> ","space.kscience.kmath.structures.MutableListBuffer"]},{"name":"value class ReadOnlyBuffer<T>(buffer: MutableBuffer<T>) : Buffer<T> ","description":"space.kscience.kmath.structures.ReadOnlyBuffer","location":"kmath-core/space.kscience.kmath.structures/-read-only-buffer/index.html","searchKeys":["ReadOnlyBuffer","value class ReadOnlyBuffer<T>(buffer: MutableBuffer<T>) : Buffer<T> ","space.kscience.kmath.structures.ReadOnlyBuffer"]},{"name":"value class ShortBuffer(array: ShortArray) : MutableBuffer<Short> ","description":"space.kscience.kmath.structures.ShortBuffer","location":"kmath-core/space.kscience.kmath.structures/-short-buffer/index.html","searchKeys":["ShortBuffer","value class ShortBuffer(array: ShortArray) : MutableBuffer<Short> ","space.kscience.kmath.structures.ShortBuffer"]},{"name":"value class SimpleSymbolIndexer(symbols: List<Symbol>) : SymbolIndexer","description":"space.kscience.kmath.expressions.SimpleSymbolIndexer","location":"kmath-core/space.kscience.kmath.expressions/-simple-symbol-indexer/index.html","searchKeys":["SimpleSymbolIndexer","value class SimpleSymbolIndexer(symbols: List<Symbol>) : SymbolIndexer","space.kscience.kmath.expressions.SimpleSymbolIndexer"]},{"name":"var AutoDiffValue<T>.d: T","description":"space.kscience.kmath.expressions.SimpleAutoDiffField.d","location":"kmath-core/space.kscience.kmath.expressions/-simple-auto-diff-field/d.html","searchKeys":["d","var AutoDiffValue<T>.d: T","space.kscience.kmath.expressions.SimpleAutoDiffField.d"]},{"name":"fun Number.toMst(): MST.Numeric","description":"space.kscience.kmath.jupyter.toMst","location":"kmath-jupyter/space.kscience.kmath.jupyter/to-mst.html","searchKeys":["toMst","fun Number.toMst(): MST.Numeric","space.kscience.kmath.jupyter.toMst"]},{"name":"abstract fun INDArray.wrap(): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/wrap.html","searchKeys":["wrap","abstract fun INDArray.wrap(): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.wrap"]},{"name":"abstract fun INDArray.wrap(): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/wrap.html","searchKeys":["wrap","abstract fun INDArray.wrap(): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.wrap"]},{"name":"abstract val StructureND<T>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/nd-array.html","searchKeys":["ndArray","abstract val StructureND<T>.ndArray: INDArray","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.ndArray"]},{"name":"abstract val StructureND<T>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/nd-array.html","searchKeys":["ndArray","abstract val StructureND<T>.ndArray: INDArray","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ndArray"]},{"name":"abstract val ndArray: INDArray","description":"space.kscience.kmath.nd4j.Nd4jArrayStructure.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-structure/nd-array.html","searchKeys":["ndArray","abstract val ndArray: INDArray","space.kscience.kmath.nd4j.Nd4jArrayStructure.ndArray"]},{"name":"class DoubleNd4jArrayField(shape: IntArray) : Nd4jArrayExtendedField<Double, DoubleField> ","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/index.html","searchKeys":["DoubleNd4jArrayField","class DoubleNd4jArrayField(shape: IntArray) : Nd4jArrayExtendedField<Double, DoubleField> ","space.kscience.kmath.nd4j.DoubleNd4jArrayField"]},{"name":"class FloatNd4jArrayField(shape: IntArray) : Nd4jArrayExtendedField<Float, FloatField> ","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/index.html","searchKeys":["FloatNd4jArrayField","class FloatNd4jArrayField(shape: IntArray) : Nd4jArrayExtendedField<Float, FloatField> ","space.kscience.kmath.nd4j.FloatNd4jArrayField"]},{"name":"class IntNd4jArrayRing(shape: IntArray) : Nd4jArrayRing<Int, IntRing> ","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/index.html","searchKeys":["IntNd4jArrayRing","class IntNd4jArrayRing(shape: IntArray) : Nd4jArrayRing<Int, IntRing> ","space.kscience.kmath.nd4j.IntNd4jArrayRing"]},{"name":"fun DoubleField.nd4j(vararg shape: Int): DoubleNd4jArrayField","description":"space.kscience.kmath.nd4j.nd4j","location":"kmath-nd4j/space.kscience.kmath.nd4j/nd4j.html","searchKeys":["nd4j","fun DoubleField.nd4j(vararg shape: Int): DoubleNd4jArrayField","space.kscience.kmath.nd4j.nd4j"]},{"name":"fun DoubleNd4jArrayField(shape: IntArray)","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.DoubleNd4jArrayField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/-double-nd4j-array-field.html","searchKeys":["DoubleNd4jArrayField","fun DoubleNd4jArrayField(shape: IntArray)","space.kscience.kmath.nd4j.DoubleNd4jArrayField.DoubleNd4jArrayField"]},{"name":"fun FloatNd4jArrayField(shape: IntArray)","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.FloatNd4jArrayField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/-float-nd4j-array-field.html","searchKeys":["FloatNd4jArrayField","fun FloatNd4jArrayField(shape: IntArray)","space.kscience.kmath.nd4j.FloatNd4jArrayField.FloatNd4jArrayField"]},{"name":"fun INDArray.asDoubleStructure(): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.asDoubleStructure","location":"kmath-nd4j/space.kscience.kmath.nd4j/as-double-structure.html","searchKeys":["asDoubleStructure","fun INDArray.asDoubleStructure(): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.asDoubleStructure"]},{"name":"fun INDArray.asFloatStructure(): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.asFloatStructure","location":"kmath-nd4j/space.kscience.kmath.nd4j/as-float-structure.html","searchKeys":["asFloatStructure","fun INDArray.asFloatStructure(): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.asFloatStructure"]},{"name":"fun INDArray.asIntStructure(): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.asIntStructure","location":"kmath-nd4j/space.kscience.kmath.nd4j/as-int-structure.html","searchKeys":["asIntStructure","fun INDArray.asIntStructure(): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.asIntStructure"]},{"name":"fun IntNd4jArrayRing(shape: IntArray)","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.IntNd4jArrayRing","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/-int-nd4j-array-ring.html","searchKeys":["IntNd4jArrayRing","fun IntNd4jArrayRing(shape: IntArray)","space.kscience.kmath.nd4j.IntNd4jArrayRing.IntNd4jArrayRing"]},{"name":"fun float(vararg shape: Int): Nd4jArrayRing<Float, FloatField>","description":"space.kscience.kmath.nd4j.Nd4jArrayField.Companion.float","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/-companion/float.html","searchKeys":["float","fun float(vararg shape: Int): Nd4jArrayRing<Float, FloatField>","space.kscience.kmath.nd4j.Nd4jArrayField.Companion.float"]},{"name":"fun int(vararg shape: Int): Nd4jArrayRing<Int, IntRing>","description":"space.kscience.kmath.nd4j.Nd4jArrayRing.Companion.int","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/-companion/int.html","searchKeys":["int","fun int(vararg shape: Int): Nd4jArrayRing<Int, IntRing>","space.kscience.kmath.nd4j.Nd4jArrayRing.Companion.int"]},{"name":"fun real(vararg shape: Int): Nd4jArrayRing<Double, DoubleField>","description":"space.kscience.kmath.nd4j.Nd4jArrayField.Companion.real","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/-companion/real.html","searchKeys":["real","fun real(vararg shape: Int): Nd4jArrayRing<Double, DoubleField>","space.kscience.kmath.nd4j.Nd4jArrayField.Companion.real"]},{"name":"inline fun <T : Any> auto(vararg shape: Int): Nd4jArrayField<T, Field<T>>","description":"space.kscience.kmath.nd4j.Nd4jArrayField.Companion.auto","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/-companion/auto.html","searchKeys":["auto","inline fun <T : Any> auto(vararg shape: Int): Nd4jArrayField<T, Field<T>>","space.kscience.kmath.nd4j.Nd4jArrayField.Companion.auto"]},{"name":"inline fun <T : Number> auto(vararg shape: Int): Nd4jArrayRing<T, Ring<T>>","description":"space.kscience.kmath.nd4j.Nd4jArrayRing.Companion.auto","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/-companion/auto.html","searchKeys":["auto","inline fun <T : Number> auto(vararg shape: Int): Nd4jArrayRing<T, Ring<T>>","space.kscience.kmath.nd4j.Nd4jArrayRing.Companion.auto"]},{"name":"interface Nd4jArrayAlgebra<T, out C : Algebra<T>> : AlgebraND<T, C> ","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/index.html","searchKeys":["Nd4jArrayAlgebra","interface Nd4jArrayAlgebra<T, out C : Algebra<T>> : AlgebraND<T, C> ","space.kscience.kmath.nd4j.Nd4jArrayAlgebra"]},{"name":"interface Nd4jArrayExtendedField<T, out F : ExtendedField<T>> : ExtendedField<StructureND<T>> , Nd4jArrayField<T, F> ","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/index.html","searchKeys":["Nd4jArrayExtendedField","interface Nd4jArrayExtendedField<T, out F : ExtendedField<T>> : ExtendedField<StructureND<T>> , Nd4jArrayField<T, F> ","space.kscience.kmath.nd4j.Nd4jArrayExtendedField"]},{"name":"interface Nd4jArrayField<T, out F : Field<T>> : FieldND<T, F> , Nd4jArrayRing<T, F> ","description":"space.kscience.kmath.nd4j.Nd4jArrayField","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/index.html","searchKeys":["Nd4jArrayField","interface Nd4jArrayField<T, out F : Field<T>> : FieldND<T, F> , Nd4jArrayRing<T, F> ","space.kscience.kmath.nd4j.Nd4jArrayField"]},{"name":"interface Nd4jArrayGroup<T, out S : Ring<T>> : GroupND<T, S> , Nd4jArrayAlgebra<T, S> ","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/index.html","searchKeys":["Nd4jArrayGroup","interface Nd4jArrayGroup<T, out S : Ring<T>> : GroupND<T, S> , Nd4jArrayAlgebra<T, S> ","space.kscience.kmath.nd4j.Nd4jArrayGroup"]},{"name":"interface Nd4jArrayRing<T, out R : Ring<T>> : RingND<T, R> , Nd4jArrayGroup<T, R> ","description":"space.kscience.kmath.nd4j.Nd4jArrayRing","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/index.html","searchKeys":["Nd4jArrayRing","interface Nd4jArrayRing<T, out R : Ring<T>> : RingND<T, R> , Nd4jArrayGroup<T, R> ","space.kscience.kmath.nd4j.Nd4jArrayRing"]},{"name":"interface Nd4jTensorAlgebra<T : Number> : AnalyticTensorAlgebra<T> ","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/index.html","searchKeys":["Nd4jTensorAlgebra","interface Nd4jTensorAlgebra<T : Number> : AnalyticTensorAlgebra<T> ","space.kscience.kmath.nd4j.Nd4jTensorAlgebra"]},{"name":"object Companion","description":"space.kscience.kmath.nd4j.Nd4jArrayField.Companion","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd4j.Nd4jArrayField.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.nd4j.Nd4jArrayRing.Companion","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.nd4j.Nd4jArrayRing.Companion"]},{"name":"object DoubleNd4jTensorAlgebra : Nd4jTensorAlgebra<Double> ","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/index.html","searchKeys":["DoubleNd4jTensorAlgebra","object DoubleNd4jTensorAlgebra : Nd4jTensorAlgebra<Double> ","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra"]},{"name":"open fun multiply(a: StructureND<T>, k: Number): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup.multiply","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/multiply.html","searchKeys":["multiply","open fun multiply(a: StructureND<T>, k: Number): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayGroup.multiply"]},{"name":"open infix override fun Tensor<T>.dot(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.dot","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/dot.html","searchKeys":["dot","open infix override fun Tensor<T>.dot(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.dot"]},{"name":"open operator fun Number.div(b: StructureND<T>): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayField.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/div.html","searchKeys":["div","open operator fun Number.div(b: StructureND<T>): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayField.div"]},{"name":"open operator override fun Double.div(arg: StructureND<Double>): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/div.html","searchKeys":["div","open operator override fun Double.div(arg: StructureND<Double>): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.div"]},{"name":"open operator override fun Double.minus(arg: StructureND<Double>): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/minus.html","searchKeys":["minus","open operator override fun Double.minus(arg: StructureND<Double>): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.minus"]},{"name":"open operator override fun Float.div(arg: StructureND<Float>): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/div.html","searchKeys":["div","open operator override fun Float.div(arg: StructureND<Float>): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.div"]},{"name":"open operator override fun Float.minus(arg: StructureND<Float>): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/minus.html","searchKeys":["minus","open operator override fun Float.minus(arg: StructureND<Float>): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.minus"]},{"name":"open operator override fun Int.minus(arg: StructureND<Int>): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/minus.html","searchKeys":["minus","open operator override fun Int.minus(arg: StructureND<Int>): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.IntNd4jArrayRing.minus"]},{"name":"open operator override fun StructureND<Double>.div(arg: Double): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/div.html","searchKeys":["div","open operator override fun StructureND<Double>.div(arg: Double): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.div"]},{"name":"open operator override fun StructureND<Double>.minus(arg: Double): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/minus.html","searchKeys":["minus","open operator override fun StructureND<Double>.minus(arg: Double): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.minus"]},{"name":"open operator override fun StructureND<Double>.plus(arg: Double): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/plus.html","searchKeys":["plus","open operator override fun StructureND<Double>.plus(arg: Double): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.plus"]},{"name":"open operator override fun StructureND<Double>.times(arg: Double): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/times.html","searchKeys":["times","open operator override fun StructureND<Double>.times(arg: Double): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.times"]},{"name":"open operator override fun StructureND<Float>.div(arg: Float): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/div.html","searchKeys":["div","open operator override fun StructureND<Float>.div(arg: Float): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.div"]},{"name":"open operator override fun StructureND<Float>.minus(arg: Float): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/minus.html","searchKeys":["minus","open operator override fun StructureND<Float>.minus(arg: Float): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.minus"]},{"name":"open operator override fun StructureND<Float>.plus(arg: Float): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/plus.html","searchKeys":["plus","open operator override fun StructureND<Float>.plus(arg: Float): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.plus"]},{"name":"open operator override fun StructureND<Float>.times(arg: Float): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/times.html","searchKeys":["times","open operator override fun StructureND<Float>.times(arg: Float): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.times"]},{"name":"open operator override fun StructureND<Int>.minus(arg: Int): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/minus.html","searchKeys":["minus","open operator override fun StructureND<Int>.minus(arg: Int): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.IntNd4jArrayRing.minus"]},{"name":"open operator override fun StructureND<Int>.plus(arg: Int): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/plus.html","searchKeys":["plus","open operator override fun StructureND<Int>.plus(arg: Int): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.IntNd4jArrayRing.plus"]},{"name":"open operator override fun StructureND<Int>.times(arg: Int): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/times.html","searchKeys":["times","open operator override fun StructureND<Int>.times(arg: Int): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.IntNd4jArrayRing.times"]},{"name":"open operator override fun StructureND<T>.minus(b: StructureND<T>): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/minus.html","searchKeys":["minus","open operator override fun StructureND<T>.minus(b: StructureND<T>): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayGroup.minus"]},{"name":"open operator override fun StructureND<T>.unaryMinus(): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup.unaryMinus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/unary-minus.html","searchKeys":["unaryMinus","open operator override fun StructureND<T>.unaryMinus(): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayGroup.unaryMinus"]},{"name":"open operator override fun T.div(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/div.html","searchKeys":["div","open operator override fun T.div(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div"]},{"name":"open operator override fun T.minus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun T.minus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus"]},{"name":"open operator override fun T.plus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun T.plus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus"]},{"name":"open operator override fun T.times(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/times.html","searchKeys":["times","open operator override fun T.times(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times"]},{"name":"open operator override fun Tensor<T>.div(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/div.html","searchKeys":["div","open operator override fun Tensor<T>.div(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div"]},{"name":"open operator override fun Tensor<T>.div(value: T): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/div.html","searchKeys":["div","open operator override fun Tensor<T>.div(value: T): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.div"]},{"name":"open operator override fun Tensor<T>.divAssign(other: Tensor<T>)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.divAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/div-assign.html","searchKeys":["divAssign","open operator override fun Tensor<T>.divAssign(other: Tensor<T>)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.divAssign"]},{"name":"open operator override fun Tensor<T>.divAssign(value: T)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.divAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/div-assign.html","searchKeys":["divAssign","open operator override fun Tensor<T>.divAssign(value: T)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.divAssign"]},{"name":"open operator override fun Tensor<T>.get(i: Int): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.get","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/get.html","searchKeys":["get","open operator override fun Tensor<T>.get(i: Int): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.get"]},{"name":"open operator override fun Tensor<T>.minus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Tensor<T>.minus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus"]},{"name":"open operator override fun Tensor<T>.minus(value: T): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Tensor<T>.minus(value: T): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minus"]},{"name":"open operator override fun Tensor<T>.minusAssign(other: Tensor<T>)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minusAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","open operator override fun Tensor<T>.minusAssign(other: Tensor<T>)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minusAssign"]},{"name":"open operator override fun Tensor<T>.minusAssign(value: T)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minusAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","open operator override fun Tensor<T>.minusAssign(value: T)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.minusAssign"]},{"name":"open operator override fun Tensor<T>.plus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Tensor<T>.plus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus"]},{"name":"open operator override fun Tensor<T>.plus(value: T): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Tensor<T>.plus(value: T): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plus"]},{"name":"open operator override fun Tensor<T>.plusAssign(other: Tensor<T>)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plusAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","open operator override fun Tensor<T>.plusAssign(other: Tensor<T>)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plusAssign"]},{"name":"open operator override fun Tensor<T>.plusAssign(value: T)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plusAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","open operator override fun Tensor<T>.plusAssign(value: T)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.plusAssign"]},{"name":"open operator override fun Tensor<T>.times(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/times.html","searchKeys":["times","open operator override fun Tensor<T>.times(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times"]},{"name":"open operator override fun Tensor<T>.times(value: T): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/times.html","searchKeys":["times","open operator override fun Tensor<T>.times(value: T): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.times"]},{"name":"open operator override fun Tensor<T>.timesAssign(other: Tensor<T>)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.timesAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/times-assign.html","searchKeys":["timesAssign","open operator override fun Tensor<T>.timesAssign(other: Tensor<T>)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.timesAssign"]},{"name":"open operator override fun Tensor<T>.timesAssign(value: T)","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.timesAssign","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/times-assign.html","searchKeys":["timesAssign","open operator override fun Tensor<T>.timesAssign(value: T)","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.timesAssign"]},{"name":"open operator override fun Tensor<T>.unaryMinus(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.unaryMinus","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Tensor<T>.unaryMinus(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.unaryMinus"]},{"name":"open override fun INDArray.wrap(): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/wrap.html","searchKeys":["wrap","open override fun INDArray.wrap(): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.wrap"]},{"name":"open override fun INDArray.wrap(): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/wrap.html","searchKeys":["wrap","open override fun INDArray.wrap(): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.wrap"]},{"name":"open override fun INDArray.wrap(): Nd4jArrayStructure<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/wrap.html","searchKeys":["wrap","open override fun INDArray.wrap(): Nd4jArrayStructure<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.wrap"]},{"name":"open override fun INDArray.wrap(): Nd4jArrayStructure<Int>","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.wrap","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/wrap.html","searchKeys":["wrap","open override fun INDArray.wrap(): Nd4jArrayStructure<Int>","space.kscience.kmath.nd4j.IntNd4jArrayRing.wrap"]},{"name":"open override fun StructureND<T>.map(transform: C.(T) -> T): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.map","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/map.html","searchKeys":["map","open override fun StructureND<T>.map(transform: C.(T) -> T): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.map"]},{"name":"open override fun StructureND<T>.mapIndexed(transform: C.(index: IntArray, T) -> T): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.mapIndexed","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/map-indexed.html","searchKeys":["mapIndexed","open override fun StructureND<T>.mapIndexed(transform: C.(index: IntArray, T) -> T): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.mapIndexed"]},{"name":"open override fun Tensor<Double>.max(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.max","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/max.html","searchKeys":["max","open override fun Tensor<Double>.max(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.max"]},{"name":"open override fun Tensor<Double>.mean(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.mean","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/mean.html","searchKeys":["mean","open override fun Tensor<Double>.mean(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.mean"]},{"name":"open override fun Tensor<Double>.min(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.min","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/min.html","searchKeys":["min","open override fun Tensor<Double>.min(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.min"]},{"name":"open override fun Tensor<Double>.std(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.std","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/std.html","searchKeys":["std","open override fun Tensor<Double>.std(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.std"]},{"name":"open override fun Tensor<Double>.sum(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.sum","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/sum.html","searchKeys":["sum","open override fun Tensor<Double>.sum(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.sum"]},{"name":"open override fun Tensor<Double>.valueOrNull(): Double?","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.valueOrNull","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/value-or-null.html","searchKeys":["valueOrNull","open override fun Tensor<Double>.valueOrNull(): Double?","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.valueOrNull"]},{"name":"open override fun Tensor<Double>.variance(): Double","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.variance","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/variance.html","searchKeys":["variance","open override fun Tensor<Double>.variance(): Double","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.variance"]},{"name":"open override fun Tensor<T>.acos(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.acos","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/acos.html","searchKeys":["acos","open override fun Tensor<T>.acos(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.acos"]},{"name":"open override fun Tensor<T>.acosh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.acosh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/acosh.html","searchKeys":["acosh","open override fun Tensor<T>.acosh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.acosh"]},{"name":"open override fun Tensor<T>.argMax(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.argMax","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/arg-max.html","searchKeys":["argMax","open override fun Tensor<T>.argMax(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.argMax"]},{"name":"open override fun Tensor<T>.asin(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.asin","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/asin.html","searchKeys":["asin","open override fun Tensor<T>.asin(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.asin"]},{"name":"open override fun Tensor<T>.asinh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.asinh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/asinh.html","searchKeys":["asinh","open override fun Tensor<T>.asinh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.asinh"]},{"name":"open override fun Tensor<T>.atan(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.atan","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/atan.html","searchKeys":["atan","open override fun Tensor<T>.atan(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.atan"]},{"name":"open override fun Tensor<T>.atanh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.atanh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/atanh.html","searchKeys":["atanh","open override fun Tensor<T>.atanh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.atanh"]},{"name":"open override fun Tensor<T>.ceil(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ceil","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/ceil.html","searchKeys":["ceil","open override fun Tensor<T>.ceil(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ceil"]},{"name":"open override fun Tensor<T>.cos(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.cos","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/cos.html","searchKeys":["cos","open override fun Tensor<T>.cos(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.cos"]},{"name":"open override fun Tensor<T>.cosh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.cosh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/cosh.html","searchKeys":["cosh","open override fun Tensor<T>.cosh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.cosh"]},{"name":"open override fun Tensor<T>.exp(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.exp","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/exp.html","searchKeys":["exp","open override fun Tensor<T>.exp(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.exp"]},{"name":"open override fun Tensor<T>.floor(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.floor","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/floor.html","searchKeys":["floor","open override fun Tensor<T>.floor(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.floor"]},{"name":"open override fun Tensor<T>.ln(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ln","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/ln.html","searchKeys":["ln","open override fun Tensor<T>.ln(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.ln"]},{"name":"open override fun Tensor<T>.max(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.max","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/max.html","searchKeys":["max","open override fun Tensor<T>.max(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.max"]},{"name":"open override fun Tensor<T>.mean(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.mean","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/mean.html","searchKeys":["mean","open override fun Tensor<T>.mean(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.mean"]},{"name":"open override fun Tensor<T>.min(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.min","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/min.html","searchKeys":["min","open override fun Tensor<T>.min(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.min"]},{"name":"open override fun Tensor<T>.sin(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sin","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/sin.html","searchKeys":["sin","open override fun Tensor<T>.sin(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sin"]},{"name":"open override fun Tensor<T>.sinh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sinh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/sinh.html","searchKeys":["sinh","open override fun Tensor<T>.sinh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sinh"]},{"name":"open override fun Tensor<T>.sqrt(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sqrt","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/sqrt.html","searchKeys":["sqrt","open override fun Tensor<T>.sqrt(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sqrt"]},{"name":"open override fun Tensor<T>.std(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.std","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/std.html","searchKeys":["std","open override fun Tensor<T>.std(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.std"]},{"name":"open override fun Tensor<T>.sum(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sum","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/sum.html","searchKeys":["sum","open override fun Tensor<T>.sum(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.sum"]},{"name":"open override fun Tensor<T>.tan(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.tan","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/tan.html","searchKeys":["tan","open override fun Tensor<T>.tan(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.tan"]},{"name":"open override fun Tensor<T>.tanh(): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.tanh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/tanh.html","searchKeys":["tanh","open override fun Tensor<T>.tanh(): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.tanh"]},{"name":"open override fun Tensor<T>.transpose(i: Int, j: Int): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.transpose","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/transpose.html","searchKeys":["transpose","open override fun Tensor<T>.transpose(i: Int, j: Int): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.transpose"]},{"name":"open override fun Tensor<T>.variance(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.variance","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/variance.html","searchKeys":["variance","open override fun Tensor<T>.variance(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.variance"]},{"name":"open override fun Tensor<T>.view(shape: IntArray): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.view","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/view.html","searchKeys":["view","open override fun Tensor<T>.view(shape: IntArray): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.view"]},{"name":"open override fun Tensor<T>.viewAs(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.nd4j.Nd4jTensorAlgebra.viewAs","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-tensor-algebra/view-as.html","searchKeys":["viewAs","open override fun Tensor<T>.viewAs(other: Tensor<T>): Tensor<T>","space.kscience.kmath.nd4j.Nd4jTensorAlgebra.viewAs"]},{"name":"open override fun acos(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.acos","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/acos.html","searchKeys":["acos","open override fun acos(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.acos"]},{"name":"open override fun acosh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.acosh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.acosh"]},{"name":"open override fun add(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup.add","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/add.html","searchKeys":["add","open override fun add(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayGroup.add"]},{"name":"open override fun asin(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.asin","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/asin.html","searchKeys":["asin","open override fun asin(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.asin"]},{"name":"open override fun asinh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.asinh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.asinh"]},{"name":"open override fun atan(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.atan","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/atan.html","searchKeys":["atan","open override fun atan(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.atan"]},{"name":"open override fun atanh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.atanh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.atanh"]},{"name":"open override fun combine(a: StructureND<T>, b: StructureND<T>, transform: C.(T, T) -> T): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.combine","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/combine.html","searchKeys":["combine","open override fun combine(a: StructureND<T>, b: StructureND<T>, transform: C.(T, T) -> T): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.combine"]},{"name":"open override fun cos(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.cos","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/cos.html","searchKeys":["cos","open override fun cos(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.cos"]},{"name":"open override fun cosh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.cosh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.cosh"]},{"name":"open override fun diagonalEmbedding(diagonalEntries: Tensor<Double>, offset: Int, dim1: Int, dim2: Int): Tensor<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.diagonalEmbedding","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/diagonal-embedding.html","searchKeys":["diagonalEmbedding","open override fun diagonalEmbedding(diagonalEntries: Tensor<Double>, offset: Int, dim1: Int, dim2: Int): Tensor<Double>","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.diagonalEmbedding"]},{"name":"open override fun divide(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayField.divide","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-field/divide.html","searchKeys":["divide","open override fun divide(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayField.divide"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.nd4j.Nd4jArrayStructure.elements","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-structure/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.nd4j.Nd4jArrayStructure.elements"]},{"name":"open override fun exp(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.exp","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/exp.html","searchKeys":["exp","open override fun exp(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.exp"]},{"name":"open override fun ln(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.ln","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/ln.html","searchKeys":["ln","open override fun ln(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.ln"]},{"name":"open override fun multiply(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayRing.multiply","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/multiply.html","searchKeys":["multiply","open override fun multiply(a: StructureND<T>, b: StructureND<T>): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayRing.multiply"]},{"name":"open override fun power(arg: StructureND<T>, pow: Number): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.power","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/power.html","searchKeys":["power","open override fun power(arg: StructureND<T>, pow: Number): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.power"]},{"name":"open override fun produce(initializer: C.(IntArray) -> T): Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayAlgebra.produce","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-algebra/produce.html","searchKeys":["produce","open override fun produce(initializer: C.(IntArray) -> T): Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayAlgebra.produce"]},{"name":"open override fun scale(a: StructureND<Double>, value: Double): Nd4jArrayStructure<Double>","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.scale","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<Double>, value: Double): Nd4jArrayStructure<Double>","space.kscience.kmath.nd4j.DoubleNd4jArrayField.scale"]},{"name":"open override fun scale(a: StructureND<Float>, value: Double): StructureND<Float>","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.scale","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<Float>, value: Double): StructureND<Float>","space.kscience.kmath.nd4j.FloatNd4jArrayField.scale"]},{"name":"open override fun sin(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sin","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/sin.html","searchKeys":["sin","open override fun sin(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sin"]},{"name":"open override fun sinh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sinh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sinh"]},{"name":"open override fun sqrt(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sqrt","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/sqrt.html","searchKeys":["sqrt","open override fun sqrt(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.sqrt"]},{"name":"open override fun tanh(arg: StructureND<T>): StructureND<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayExtendedField.tanh","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-extended-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: StructureND<T>): StructureND<T>","space.kscience.kmath.nd4j.Nd4jArrayExtendedField.tanh"]},{"name":"open override val StructureND<Double>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/nd-array.html","searchKeys":["ndArray","open override val StructureND<Double>.ndArray: INDArray","space.kscience.kmath.nd4j.DoubleNd4jArrayField.ndArray"]},{"name":"open override val StructureND<Double>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-tensor-algebra/nd-array.html","searchKeys":["ndArray","open override val StructureND<Double>.ndArray: INDArray","space.kscience.kmath.nd4j.DoubleNd4jTensorAlgebra.ndArray"]},{"name":"open override val StructureND<Float>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/nd-array.html","searchKeys":["ndArray","open override val StructureND<Float>.ndArray: INDArray","space.kscience.kmath.nd4j.FloatNd4jArrayField.ndArray"]},{"name":"open override val StructureND<Int>.ndArray: INDArray","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.ndArray","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/nd-array.html","searchKeys":["ndArray","open override val StructureND<Int>.ndArray: INDArray","space.kscience.kmath.nd4j.IntNd4jArrayRing.ndArray"]},{"name":"open override val elementContext: DoubleField","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.elementContext","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/element-context.html","searchKeys":["elementContext","open override val elementContext: DoubleField","space.kscience.kmath.nd4j.DoubleNd4jArrayField.elementContext"]},{"name":"open override val elementContext: FloatField","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.elementContext","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/element-context.html","searchKeys":["elementContext","open override val elementContext: FloatField","space.kscience.kmath.nd4j.FloatNd4jArrayField.elementContext"]},{"name":"open override val elementContext: IntRing","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.elementContext","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/element-context.html","searchKeys":["elementContext","open override val elementContext: IntRing","space.kscience.kmath.nd4j.IntNd4jArrayRing.elementContext"]},{"name":"open override val one: Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayRing.one","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-ring/one.html","searchKeys":["one","open override val one: Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayRing.one"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd4j.DoubleNd4jArrayField.shape","location":"kmath-nd4j/space.kscience.kmath.nd4j/-double-nd4j-array-field/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd4j.DoubleNd4jArrayField.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd4j.FloatNd4jArrayField.shape","location":"kmath-nd4j/space.kscience.kmath.nd4j/-float-nd4j-array-field/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd4j.FloatNd4jArrayField.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd4j.IntNd4jArrayRing.shape","location":"kmath-nd4j/space.kscience.kmath.nd4j/-int-nd4j-array-ring/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd4j.IntNd4jArrayRing.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.nd4j.Nd4jArrayStructure.shape","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-structure/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.nd4j.Nd4jArrayStructure.shape"]},{"name":"open override val zero: Nd4jArrayStructure<T>","description":"space.kscience.kmath.nd4j.Nd4jArrayGroup.zero","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-group/zero.html","searchKeys":["zero","open override val zero: Nd4jArrayStructure<T>","space.kscience.kmath.nd4j.Nd4jArrayGroup.zero"]},{"name":"sealed class Nd4jArrayStructure<T> : MutableStructureND<T> ","description":"space.kscience.kmath.nd4j.Nd4jArrayStructure","location":"kmath-nd4j/space.kscience.kmath.nd4j/-nd4j-array-structure/index.html","searchKeys":["Nd4jArrayStructure","sealed class Nd4jArrayStructure<T> : MutableStructureND<T> ","space.kscience.kmath.nd4j.Nd4jArrayStructure"]},{"name":"abstract fun nextBlocking(): T","description":"space.kscience.kmath.chains.BlockingChain.nextBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-chain/next-blocking.html","searchKeys":["nextBlocking","abstract fun nextBlocking(): T","space.kscience.kmath.chains.BlockingChain.nextBlocking"]},{"name":"abstract fun nextBufferBlocking(size: Int): Buffer<T>","description":"space.kscience.kmath.chains.BlockingBufferChain.nextBufferBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-buffer-chain/next-buffer-blocking.html","searchKeys":["nextBufferBlocking","abstract fun nextBufferBlocking(size: Int): Buffer<T>","space.kscience.kmath.chains.BlockingBufferChain.nextBufferBlocking"]},{"name":"abstract override fun nextBufferBlocking(size: Int): DoubleBuffer","description":"space.kscience.kmath.chains.BlockingDoubleChain.nextBufferBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-double-chain/next-buffer-blocking.html","searchKeys":["nextBufferBlocking","abstract override fun nextBufferBlocking(size: Int): DoubleBuffer","space.kscience.kmath.chains.BlockingDoubleChain.nextBufferBlocking"]},{"name":"abstract override fun nextBufferBlocking(size: Int): IntBuffer","description":"space.kscience.kmath.chains.BlockingIntChain.nextBufferBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/next-buffer-blocking.html","searchKeys":["nextBufferBlocking","abstract override fun nextBufferBlocking(size: Int): IntBuffer","space.kscience.kmath.chains.BlockingIntChain.nextBufferBlocking"]},{"name":"abstract suspend fun fork(): Chain<T>","description":"space.kscience.kmath.chains.Chain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/fork.html","searchKeys":["fork","abstract suspend fun fork(): Chain<T>","space.kscience.kmath.chains.Chain.fork"]},{"name":"abstract suspend fun next(): T","description":"space.kscience.kmath.chains.Chain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/next.html","searchKeys":["next","abstract suspend fun next(): T","space.kscience.kmath.chains.Chain.next"]},{"name":"abstract suspend fun nextBuffer(size: Int): Buffer<T>","description":"space.kscience.kmath.chains.BufferChain.nextBuffer","location":"kmath-coroutines/space.kscience.kmath.chains/-buffer-chain/next-buffer.html","searchKeys":["nextBuffer","abstract suspend fun nextBuffer(size: Int): Buffer<T>","space.kscience.kmath.chains.BufferChain.nextBuffer"]},{"name":"abstract suspend override fun fork(): BlockingBufferChain<T>","description":"space.kscience.kmath.chains.BlockingBufferChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-buffer-chain/fork.html","searchKeys":["fork","abstract suspend override fun fork(): BlockingBufferChain<T>","space.kscience.kmath.chains.BlockingBufferChain.fork"]},{"name":"abstract suspend override fun fork(): BlockingChain<T>","description":"space.kscience.kmath.chains.BlockingChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-chain/fork.html","searchKeys":["fork","abstract suspend override fun fork(): BlockingChain<T>","space.kscience.kmath.chains.BlockingChain.fork"]},{"name":"abstract suspend override fun fork(): BlockingDoubleChain","description":"space.kscience.kmath.chains.BlockingDoubleChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-double-chain/fork.html","searchKeys":["fork","abstract suspend override fun fork(): BlockingDoubleChain","space.kscience.kmath.chains.BlockingDoubleChain.fork"]},{"name":"abstract suspend override fun fork(): BlockingIntChain","description":"space.kscience.kmath.chains.BlockingIntChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/fork.html","searchKeys":["fork","abstract suspend override fun fork(): BlockingIntChain","space.kscience.kmath.chains.BlockingIntChain.fork"]},{"name":"abstract suspend override fun fork(): BufferChain<T>","description":"space.kscience.kmath.chains.BufferChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-buffer-chain/fork.html","searchKeys":["fork","abstract suspend override fun fork(): BufferChain<T>","space.kscience.kmath.chains.BufferChain.fork"]},{"name":"class AsyncFlow<out T> : Flow<T> ","description":"space.kscience.kmath.coroutines.AsyncFlow","location":"kmath-coroutines/space.kscience.kmath.coroutines/-async-flow/index.html","searchKeys":["AsyncFlow","class AsyncFlow<out T> : Flow<T> ","space.kscience.kmath.coroutines.AsyncFlow"]},{"name":"class ConstantChain<out T>(value: T) : Chain<T> ","description":"space.kscience.kmath.chains.ConstantChain","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/index.html","searchKeys":["ConstantChain","class ConstantChain<out T>(value: T) : Chain<T> ","space.kscience.kmath.chains.ConstantChain"]},{"name":"class LazyStructureND<out T>(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T) : StructureND<T> ","description":"space.kscience.kmath.structures.LazyStructureND","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/index.html","searchKeys":["LazyStructureND","class LazyStructureND<out T>(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T) : StructureND<T> ","space.kscience.kmath.structures.LazyStructureND"]},{"name":"class MarkovChain<out R : Any>(seed: suspend () -> R, gen: suspend (R) -> R) : Chain<R> ","description":"space.kscience.kmath.chains.MarkovChain","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/index.html","searchKeys":["MarkovChain","class MarkovChain<out R : Any>(seed: suspend () -> R, gen: suspend (R) -> R) : Chain<R> ","space.kscience.kmath.chains.MarkovChain"]},{"name":"class RingBuffer<T>(buffer: MutableBuffer<T?>, startIndex: Int, size: Int) : Buffer<T> ","description":"space.kscience.kmath.streaming.RingBuffer","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/index.html","searchKeys":["RingBuffer","class RingBuffer<T>(buffer: MutableBuffer<T?>, startIndex: Int, size: Int) : Buffer<T> ","space.kscience.kmath.streaming.RingBuffer"]},{"name":"class SimpleChain<out R>(gen: suspend () -> R) : Chain<R> ","description":"space.kscience.kmath.chains.SimpleChain","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/index.html","searchKeys":["SimpleChain","class SimpleChain<out R>(gen: suspend () -> R) : Chain<R> ","space.kscience.kmath.chains.SimpleChain"]},{"name":"class StatefulChain<S, out R>(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R) : Chain<R> ","description":"space.kscience.kmath.chains.StatefulChain","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/index.html","searchKeys":["StatefulChain","class StatefulChain<S, out R>(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R) : Chain<R> ","space.kscience.kmath.chains.StatefulChain"]},{"name":"fun <R> Chain<R>.asSequence(): Sequence<R>","description":"space.kscience.kmath.chains.asSequence","location":"kmath-coroutines/space.kscience.kmath.chains/as-sequence.html","searchKeys":["asSequence","fun <R> Chain<R>.asSequence(): Sequence<R>","space.kscience.kmath.chains.asSequence"]},{"name":"fun <S, out R> StatefulChain(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R)","description":"space.kscience.kmath.chains.StatefulChain.StatefulChain","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/-stateful-chain.html","searchKeys":["StatefulChain","fun <S, out R> StatefulChain(state: S, seed: S.() -> R, forkState: (S) -> S, gen: suspend S.(R) -> R)","space.kscience.kmath.chains.StatefulChain.StatefulChain"]},{"name":"fun <T, R> Chain<T>.collect(mapper: suspend (Chain<T>) -> R): Chain<R>","description":"space.kscience.kmath.chains.collect","location":"kmath-coroutines/space.kscience.kmath.chains/collect.html","searchKeys":["collect","fun <T, R> Chain<T>.collect(mapper: suspend (Chain<T>) -> R): Chain<R>","space.kscience.kmath.chains.collect"]},{"name":"fun <T, R> Chain<T>.map(func: suspend (T) -> R): Chain<R>","description":"space.kscience.kmath.chains.map","location":"kmath-coroutines/space.kscience.kmath.chains/map.html","searchKeys":["map","fun <T, R> Chain<T>.map(func: suspend (T) -> R): Chain<R>","space.kscience.kmath.chains.map"]},{"name":"fun <T, S : Ring<T>, ScaleOperations<T>> Flow<T>.mean(space: S): Flow<T>","description":"space.kscience.kmath.chains.mean","location":"kmath-coroutines/space.kscience.kmath.chains/mean.html","searchKeys":["mean","fun <T, S : Ring<T>, ScaleOperations<T>> Flow<T>.mean(space: S): Flow<T>","space.kscience.kmath.chains.mean"]},{"name":"fun <T, S, R> Chain<T>.collectWithState(state: S, stateFork: (S) -> S, mapper: suspend S.(Chain<T>) -> R): Chain<R>","description":"space.kscience.kmath.chains.collectWithState","location":"kmath-coroutines/space.kscience.kmath.chains/collect-with-state.html","searchKeys":["collectWithState","fun <T, S, R> Chain<T>.collectWithState(state: S, stateFork: (S) -> S, mapper: suspend S.(Chain<T>) -> R): Chain<R>","space.kscience.kmath.chains.collectWithState"]},{"name":"fun <T, U, R> Chain<T>.zip(other: Chain<U>, block: suspend (T, U) -> R): Chain<R>","description":"space.kscience.kmath.chains.zip","location":"kmath-coroutines/space.kscience.kmath.chains/zip.html","searchKeys":["zip","fun <T, U, R> Chain<T>.zip(other: Chain<U>, block: suspend (T, U) -> R): Chain<R>","space.kscience.kmath.chains.zip"]},{"name":"fun <T> Buffer<T>.asFlow(): Flow<T>","description":"space.kscience.kmath.streaming.asFlow","location":"kmath-coroutines/space.kscience.kmath.streaming/as-flow.html","searchKeys":["asFlow","fun <T> Buffer<T>.asFlow(): Flow<T>","space.kscience.kmath.streaming.asFlow"]},{"name":"fun <T> Chain<T>.filter(block: (T) -> Boolean): Chain<T>","description":"space.kscience.kmath.chains.filter","location":"kmath-coroutines/space.kscience.kmath.chains/filter.html","searchKeys":["filter","fun <T> Chain<T>.filter(block: (T) -> Boolean): Chain<T>","space.kscience.kmath.chains.filter"]},{"name":"fun <T> Flow<Buffer<T>>.spread(): Flow<T>","description":"space.kscience.kmath.streaming.spread","location":"kmath-coroutines/space.kscience.kmath.streaming/spread.html","searchKeys":["spread","fun <T> Flow<Buffer<T>>.spread(): Flow<T>","space.kscience.kmath.streaming.spread"]},{"name":"fun <T> Flow<T>.chunked(bufferSize: Int, bufferFactory: BufferFactory<T>): Flow<Buffer<T>>","description":"space.kscience.kmath.streaming.chunked","location":"kmath-coroutines/space.kscience.kmath.streaming/chunked.html","searchKeys":["chunked","fun <T> Flow<T>.chunked(bufferSize: Int, bufferFactory: BufferFactory<T>): Flow<Buffer<T>>","space.kscience.kmath.streaming.chunked"]},{"name":"fun <T> Flow<T>.cumulativeSum(group: GroupOperations<T>): Flow<T>","description":"space.kscience.kmath.chains.cumulativeSum","location":"kmath-coroutines/space.kscience.kmath.chains/cumulative-sum.html","searchKeys":["cumulativeSum","fun <T> Flow<T>.cumulativeSum(group: GroupOperations<T>): Flow<T>","space.kscience.kmath.chains.cumulativeSum"]},{"name":"fun <T> Flow<T>.windowed(window: Int): Flow<Buffer<T>>","description":"space.kscience.kmath.streaming.windowed","location":"kmath-coroutines/space.kscience.kmath.streaming/windowed.html","searchKeys":["windowed","fun <T> Flow<T>.windowed(window: Int): Flow<Buffer<T>>","space.kscience.kmath.streaming.windowed"]},{"name":"fun <T> Iterator<T>.asChain(): Chain<T>","description":"space.kscience.kmath.chains.asChain","location":"kmath-coroutines/space.kscience.kmath.chains/as-chain.html","searchKeys":["asChain","fun <T> Iterator<T>.asChain(): Chain<T>","space.kscience.kmath.chains.asChain"]},{"name":"fun <T> RingBuffer(buffer: MutableBuffer<T?>, startIndex: Int = 0, size: Int = 0)","description":"space.kscience.kmath.streaming.RingBuffer.RingBuffer","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-ring-buffer.html","searchKeys":["RingBuffer","fun <T> RingBuffer(buffer: MutableBuffer<T?>, startIndex: Int = 0, size: Int = 0)","space.kscience.kmath.streaming.RingBuffer.RingBuffer"]},{"name":"fun <T> Sequence<T>.asChain(): Chain<T>","description":"space.kscience.kmath.chains.asChain","location":"kmath-coroutines/space.kscience.kmath.chains/as-chain.html","searchKeys":["asChain","fun <T> Sequence<T>.asChain(): Chain<T>","space.kscience.kmath.chains.asChain"]},{"name":"fun <T> StructureND<T>.deferred(index: IntArray): Deferred<T>","description":"space.kscience.kmath.structures.deferred","location":"kmath-coroutines/space.kscience.kmath.structures/deferred.html","searchKeys":["deferred","fun <T> StructureND<T>.deferred(index: IntArray): Deferred<T>","space.kscience.kmath.structures.deferred"]},{"name":"fun <T> boxing(size: Int): RingBuffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.Companion.boxing","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/boxing.html","searchKeys":["boxing","fun <T> boxing(size: Int): RingBuffer<T>","space.kscience.kmath.streaming.RingBuffer.Companion.boxing"]},{"name":"fun <out R : Any> MarkovChain(seed: suspend () -> R, gen: suspend (R) -> R)","description":"space.kscience.kmath.chains.MarkovChain.MarkovChain","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/-markov-chain.html","searchKeys":["MarkovChain","fun <out R : Any> MarkovChain(seed: suspend () -> R, gen: suspend (R) -> R)","space.kscience.kmath.chains.MarkovChain.MarkovChain"]},{"name":"fun <out R> SimpleChain(gen: suspend () -> R)","description":"space.kscience.kmath.chains.SimpleChain.SimpleChain","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/-simple-chain.html","searchKeys":["SimpleChain","fun <out R> SimpleChain(gen: suspend () -> R)","space.kscience.kmath.chains.SimpleChain.SimpleChain"]},{"name":"fun <out T> ConstantChain(value: T)","description":"space.kscience.kmath.chains.ConstantChain.ConstantChain","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/-constant-chain.html","searchKeys":["ConstantChain","fun <out T> ConstantChain(value: T)","space.kscience.kmath.chains.ConstantChain.ConstantChain"]},{"name":"fun <out T> LazyStructureND(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T)","description":"space.kscience.kmath.structures.LazyStructureND.LazyStructureND","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/-lazy-structure-n-d.html","searchKeys":["LazyStructureND","fun <out T> LazyStructureND(scope: CoroutineScope, shape: IntArray, function: suspend (IntArray) -> T)","space.kscience.kmath.structures.LazyStructureND.LazyStructureND"]},{"name":"fun BlockingDoubleChain.map(transform: (Double) -> Double): BlockingDoubleChain","description":"space.kscience.kmath.chains.map","location":"kmath-coroutines/space.kscience.kmath.chains/map.html","searchKeys":["map","fun BlockingDoubleChain.map(transform: (Double) -> Double): BlockingDoubleChain","space.kscience.kmath.chains.map"]},{"name":"fun Flow<Double>.chunked(bufferSize: Int): Flow<DoubleBuffer>","description":"space.kscience.kmath.streaming.chunked","location":"kmath-coroutines/space.kscience.kmath.streaming/chunked.html","searchKeys":["chunked","fun Flow<Double>.chunked(bufferSize: Int): Flow<DoubleBuffer>","space.kscience.kmath.streaming.chunked"]},{"name":"fun deferred(index: IntArray): Deferred<T>","description":"space.kscience.kmath.structures.LazyStructureND.deferred","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/deferred.html","searchKeys":["deferred","fun deferred(index: IntArray): Deferred<T>","space.kscience.kmath.structures.LazyStructureND.deferred"]},{"name":"fun isFull(): Boolean","description":"space.kscience.kmath.streaming.RingBuffer.isFull","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/is-full.html","searchKeys":["isFull","fun isFull(): Boolean","space.kscience.kmath.streaming.RingBuffer.isFull"]},{"name":"fun value(): R?","description":"space.kscience.kmath.chains.MarkovChain.value","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/value.html","searchKeys":["value","fun value(): R?","space.kscience.kmath.chains.MarkovChain.value"]},{"name":"fun value(): R?","description":"space.kscience.kmath.chains.StatefulChain.value","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/value.html","searchKeys":["value","fun value(): R?","space.kscience.kmath.chains.StatefulChain.value"]},{"name":"inline fun <T : Any> BlockingChain<T>.nextBufferBlocking(size: Int): Buffer<T>","description":"space.kscience.kmath.chains.nextBufferBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/next-buffer-blocking.html","searchKeys":["nextBufferBlocking","inline fun <T : Any> BlockingChain<T>.nextBufferBlocking(size: Int): Buffer<T>","space.kscience.kmath.chains.nextBufferBlocking"]},{"name":"inline fun <T : Any> build(size: Int, empty: T): RingBuffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.Companion.build","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/build.html","searchKeys":["build","inline fun <T : Any> build(size: Int, empty: T): RingBuffer<T>","space.kscience.kmath.streaming.RingBuffer.Companion.build"]},{"name":"inline fun <T, R> AsyncFlow<T>.map(crossinline action: (T) -> R): AsyncFlow<R>","description":"space.kscience.kmath.coroutines.map","location":"kmath-coroutines/space.kscience.kmath.coroutines/map.html","searchKeys":["map","inline fun <T, R> AsyncFlow<T>.map(crossinline action: (T) -> R): AsyncFlow<R>","space.kscience.kmath.coroutines.map"]},{"name":"inline fun <T, R> Flow<T>.async(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline block: suspend CoroutineScope.(T) -> R): AsyncFlow<R>","description":"space.kscience.kmath.coroutines.async","location":"kmath-coroutines/space.kscience.kmath.coroutines/async.html","searchKeys":["async","inline fun <T, R> Flow<T>.async(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline block: suspend CoroutineScope.(T) -> R): AsyncFlow<R>","space.kscience.kmath.coroutines.async"]},{"name":"inline fun <T, R> Flow<T>.mapParallel(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline transform: suspend (T) -> R): Flow<R>","description":"space.kscience.kmath.coroutines.mapParallel","location":"kmath-coroutines/space.kscience.kmath.coroutines/map-parallel.html","searchKeys":["mapParallel","inline fun <T, R> Flow<T>.mapParallel(dispatcher: CoroutineDispatcher = Dispatchers.Default, crossinline transform: suspend (T) -> R): Flow<R>","space.kscience.kmath.coroutines.mapParallel"]},{"name":"inline fun <T, R> StructureND<T>.mapAsync(scope: CoroutineScope, crossinline function: suspend (T) -> R): LazyStructureND<R>","description":"space.kscience.kmath.structures.mapAsync","location":"kmath-coroutines/space.kscience.kmath.structures/map-async.html","searchKeys":["mapAsync","inline fun <T, R> StructureND<T>.mapAsync(scope: CoroutineScope, crossinline function: suspend (T) -> R): LazyStructureND<R>","space.kscience.kmath.structures.mapAsync"]},{"name":"inline fun <T, R> StructureND<T>.mapAsyncIndexed(scope: CoroutineScope, crossinline function: suspend (T, index: IntArray) -> R): LazyStructureND<R>","description":"space.kscience.kmath.structures.mapAsyncIndexed","location":"kmath-coroutines/space.kscience.kmath.structures/map-async-indexed.html","searchKeys":["mapAsyncIndexed","inline fun <T, R> StructureND<T>.mapAsyncIndexed(scope: CoroutineScope, crossinline function: suspend (T, index: IntArray) -> R): LazyStructureND<R>","space.kscience.kmath.structures.mapAsyncIndexed"]},{"name":"inline suspend fun <T : Any> Chain<T>.nextBuffer(size: Int): Buffer<T>","description":"space.kscience.kmath.chains.nextBuffer","location":"kmath-coroutines/space.kscience.kmath.chains/next-buffer.html","searchKeys":["nextBuffer","inline suspend fun <T : Any> Chain<T>.nextBuffer(size: Int): Buffer<T>","space.kscience.kmath.chains.nextBuffer"]},{"name":"inline suspend fun <T> AsyncFlow<T>.collect(concurrency: Int, crossinline action: suspend (T) -> Unit)","description":"space.kscience.kmath.coroutines.collect","location":"kmath-coroutines/space.kscience.kmath.coroutines/collect.html","searchKeys":["collect","inline suspend fun <T> AsyncFlow<T>.collect(concurrency: Int, crossinline action: suspend (T) -> Unit)","space.kscience.kmath.coroutines.collect"]},{"name":"interface BlockingBufferChain<out T> : BlockingChain<T> , BufferChain<T> ","description":"space.kscience.kmath.chains.BlockingBufferChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-buffer-chain/index.html","searchKeys":["BlockingBufferChain","interface BlockingBufferChain<out T> : BlockingChain<T> , BufferChain<T> ","space.kscience.kmath.chains.BlockingBufferChain"]},{"name":"interface BlockingChain<out T> : Chain<T> ","description":"space.kscience.kmath.chains.BlockingChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-chain/index.html","searchKeys":["BlockingChain","interface BlockingChain<out T> : Chain<T> ","space.kscience.kmath.chains.BlockingChain"]},{"name":"interface BlockingDoubleChain : BlockingBufferChain<Double> ","description":"space.kscience.kmath.chains.BlockingDoubleChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-double-chain/index.html","searchKeys":["BlockingDoubleChain","interface BlockingDoubleChain : BlockingBufferChain<Double> ","space.kscience.kmath.chains.BlockingDoubleChain"]},{"name":"interface BlockingIntChain : BlockingBufferChain<Int> ","description":"space.kscience.kmath.chains.BlockingIntChain","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-int-chain/index.html","searchKeys":["BlockingIntChain","interface BlockingIntChain : BlockingBufferChain<Int> ","space.kscience.kmath.chains.BlockingIntChain"]},{"name":"interface BufferChain<out T> : Chain<T> ","description":"space.kscience.kmath.chains.BufferChain","location":"kmath-coroutines/space.kscience.kmath.chains/-buffer-chain/index.html","searchKeys":["BufferChain","interface BufferChain<out T> : Chain<T> ","space.kscience.kmath.chains.BufferChain"]},{"name":"interface Chain<out T> : Flow<T> ","description":"space.kscience.kmath.chains.Chain","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/index.html","searchKeys":["Chain","interface Chain<out T> : Flow<T> ","space.kscience.kmath.chains.Chain"]},{"name":"object Companion","description":"space.kscience.kmath.chains.BlockingDoubleChain.Companion","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-double-chain/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.chains.BlockingDoubleChain.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.chains.Chain.Companion","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.chains.Chain.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.streaming.RingBuffer.Companion","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.streaming.RingBuffer.Companion"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.streaming.RingBuffer.get","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.streaming.RingBuffer.get"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.structures.LazyStructureND.get","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T","space.kscience.kmath.structures.LazyStructureND.get"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.streaming.RingBuffer.iterator","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.streaming.RingBuffer.iterator"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.structures.LazyStructureND.elements","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.structures.LazyStructureND.elements"]},{"name":"open override fun nextBlocking(): T","description":"space.kscience.kmath.chains.BlockingBufferChain.nextBlocking","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-buffer-chain/next-blocking.html","searchKeys":["nextBlocking","open override fun nextBlocking(): T","space.kscience.kmath.chains.BlockingBufferChain.nextBlocking"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.streaming.RingBuffer.toString","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.streaming.RingBuffer.toString"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.structures.LazyStructureND.shape","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.structures.LazyStructureND.shape"]},{"name":"open override var size: Int","description":"space.kscience.kmath.streaming.RingBuffer.size","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/size.html","searchKeys":["size","open override var size: Int","space.kscience.kmath.streaming.RingBuffer.size"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"space.kscience.kmath.chains.Chain.collect","location":"kmath-coroutines/space.kscience.kmath.chains/-chain/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","space.kscience.kmath.chains.Chain.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"space.kscience.kmath.coroutines.AsyncFlow.collect","location":"kmath-coroutines/space.kscience.kmath.coroutines/-async-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","space.kscience.kmath.coroutines.AsyncFlow.collect"]},{"name":"open suspend override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.MarkovChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): Chain<R>","space.kscience.kmath.chains.MarkovChain.fork"]},{"name":"open suspend override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.SimpleChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): Chain<R>","space.kscience.kmath.chains.SimpleChain.fork"]},{"name":"open suspend override fun fork(): Chain<R>","description":"space.kscience.kmath.chains.StatefulChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): Chain<R>","space.kscience.kmath.chains.StatefulChain.fork"]},{"name":"open suspend override fun fork(): Chain<T>","description":"space.kscience.kmath.chains.ConstantChain.fork","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): Chain<T>","space.kscience.kmath.chains.ConstantChain.fork"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.MarkovChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/next.html","searchKeys":["next","open suspend override fun next(): R","space.kscience.kmath.chains.MarkovChain.next"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.SimpleChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-simple-chain/next.html","searchKeys":["next","open suspend override fun next(): R","space.kscience.kmath.chains.SimpleChain.next"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.chains.StatefulChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/next.html","searchKeys":["next","open suspend override fun next(): R","space.kscience.kmath.chains.StatefulChain.next"]},{"name":"open suspend override fun next(): T","description":"space.kscience.kmath.chains.BlockingChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-chain/next.html","searchKeys":["next","open suspend override fun next(): T","space.kscience.kmath.chains.BlockingChain.next"]},{"name":"open suspend override fun next(): T","description":"space.kscience.kmath.chains.ConstantChain.next","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/next.html","searchKeys":["next","open suspend override fun next(): T","space.kscience.kmath.chains.ConstantChain.next"]},{"name":"open suspend override fun nextBuffer(size: Int): Buffer<T>","description":"space.kscience.kmath.chains.BlockingBufferChain.nextBuffer","location":"kmath-coroutines/space.kscience.kmath.chains/-blocking-buffer-chain/next-buffer.html","searchKeys":["nextBuffer","open suspend override fun nextBuffer(size: Int): Buffer<T>","space.kscience.kmath.chains.BlockingBufferChain.nextBuffer"]},{"name":"operator fun <R> Chain<R>.iterator(): Iterator<R>","description":"space.kscience.kmath.chains.iterator","location":"kmath-coroutines/space.kscience.kmath.chains/iterator.html","searchKeys":["iterator","operator fun <R> Chain<R>.iterator(): Iterator<R>","space.kscience.kmath.chains.iterator"]},{"name":"suspend fun <T> AsyncFlow<T>.collect(concurrency: Int, collector: FlowCollector<T>)","description":"space.kscience.kmath.coroutines.collect","location":"kmath-coroutines/space.kscience.kmath.coroutines/collect.html","searchKeys":["collect","suspend fun <T> AsyncFlow<T>.collect(concurrency: Int, collector: FlowCollector<T>)","space.kscience.kmath.coroutines.collect"]},{"name":"suspend fun <T> StructureND<T>.await(index: IntArray): T","description":"space.kscience.kmath.structures.await","location":"kmath-coroutines/space.kscience.kmath.structures/await.html","searchKeys":["await","suspend fun <T> StructureND<T>.await(index: IntArray): T","space.kscience.kmath.structures.await"]},{"name":"suspend fun await(index: IntArray): T","description":"space.kscience.kmath.structures.LazyStructureND.await","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/await.html","searchKeys":["await","suspend fun await(index: IntArray): T","space.kscience.kmath.structures.LazyStructureND.await"]},{"name":"suspend fun push(element: T)","description":"space.kscience.kmath.streaming.RingBuffer.push","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/push.html","searchKeys":["push","suspend fun push(element: T)","space.kscience.kmath.streaming.RingBuffer.push"]},{"name":"suspend fun snapshot(): Buffer<T>","description":"space.kscience.kmath.streaming.RingBuffer.snapshot","location":"kmath-coroutines/space.kscience.kmath.streaming/-ring-buffer/snapshot.html","searchKeys":["snapshot","suspend fun snapshot(): Buffer<T>","space.kscience.kmath.streaming.RingBuffer.snapshot"]},{"name":"val Dispatchers.Math: CoroutineDispatcher","description":"space.kscience.kmath.coroutines.Math","location":"kmath-coroutines/space.kscience.kmath.coroutines/-math.html","searchKeys":["Math","val Dispatchers.Math: CoroutineDispatcher","space.kscience.kmath.coroutines.Math"]},{"name":"val cache: MutableMap<IntArray, Deferred<T>>","description":"space.kscience.kmath.structures.LazyStructureND.cache","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/cache.html","searchKeys":["cache","val cache: MutableMap<IntArray, Deferred<T>>","space.kscience.kmath.structures.LazyStructureND.cache"]},{"name":"val function: suspend (IntArray) -> T","description":"space.kscience.kmath.structures.LazyStructureND.function","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/function.html","searchKeys":["function","val function: suspend (IntArray) -> T","space.kscience.kmath.structures.LazyStructureND.function"]},{"name":"val gen: suspend (R) -> R","description":"space.kscience.kmath.chains.MarkovChain.gen","location":"kmath-coroutines/space.kscience.kmath.chains/-markov-chain/gen.html","searchKeys":["gen","val gen: suspend (R) -> R","space.kscience.kmath.chains.MarkovChain.gen"]},{"name":"val gen: suspend S.(R) -> R","description":"space.kscience.kmath.chains.StatefulChain.gen","location":"kmath-coroutines/space.kscience.kmath.chains/-stateful-chain/gen.html","searchKeys":["gen","val gen: suspend S.(R) -> R","space.kscience.kmath.chains.StatefulChain.gen"]},{"name":"val scope: CoroutineScope","description":"space.kscience.kmath.structures.LazyStructureND.scope","location":"kmath-coroutines/space.kscience.kmath.structures/-lazy-structure-n-d/scope.html","searchKeys":["scope","val scope: CoroutineScope","space.kscience.kmath.structures.LazyStructureND.scope"]},{"name":"val value: T","description":"space.kscience.kmath.chains.ConstantChain.value","location":"kmath-coroutines/space.kscience.kmath.chains/-constant-chain/value.html","searchKeys":["value","val value: T","space.kscience.kmath.chains.ConstantChain.value"]},{"name":"class ViktorFieldND(shape: IntArray) : FieldND<Double, DoubleField> , NumbersAddOperations<StructureND<Double>> , ExtendedField<StructureND<Double>> , ScaleOperations<StructureND<Double>> ","description":"space.kscience.kmath.viktor.ViktorFieldND","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/index.html","searchKeys":["ViktorFieldND","class ViktorFieldND(shape: IntArray) : FieldND<Double, DoubleField> , NumbersAddOperations<StructureND<Double>> , ExtendedField<StructureND<Double>> , ScaleOperations<StructureND<Double>> ","space.kscience.kmath.viktor.ViktorFieldND"]},{"name":"class ViktorStructureND(f64Buffer: F64Array) : MutableStructureND<Double> ","description":"space.kscience.kmath.viktor.ViktorStructureND","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/index.html","searchKeys":["ViktorStructureND","class ViktorStructureND(f64Buffer: F64Array) : MutableStructureND<Double> ","space.kscience.kmath.viktor.ViktorStructureND"]},{"name":"fun F64Array.asStructure(): ViktorStructureND","description":"space.kscience.kmath.viktor.asStructure","location":"kmath-viktor/space.kscience.kmath.viktor/as-structure.html","searchKeys":["asStructure","fun F64Array.asStructure(): ViktorStructureND","space.kscience.kmath.viktor.asStructure"]},{"name":"fun ViktorBuffer(flatArray: F64FlatArray)","description":"space.kscience.kmath.viktor.ViktorBuffer.ViktorBuffer","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/-viktor-buffer.html","searchKeys":["ViktorBuffer","fun ViktorBuffer(flatArray: F64FlatArray)","space.kscience.kmath.viktor.ViktorBuffer.ViktorBuffer"]},{"name":"fun ViktorFieldND(shape: IntArray)","description":"space.kscience.kmath.viktor.ViktorFieldND.ViktorFieldND","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/-viktor-field-n-d.html","searchKeys":["ViktorFieldND","fun ViktorFieldND(shape: IntArray)","space.kscience.kmath.viktor.ViktorFieldND.ViktorFieldND"]},{"name":"fun ViktorNDField(vararg shape: Int): ViktorFieldND","description":"space.kscience.kmath.viktor.ViktorNDField","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-n-d-field.html","searchKeys":["ViktorNDField","fun ViktorNDField(vararg shape: Int): ViktorFieldND","space.kscience.kmath.viktor.ViktorNDField"]},{"name":"fun ViktorStructureND(f64Buffer: F64Array)","description":"space.kscience.kmath.viktor.ViktorStructureND.ViktorStructureND","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/-viktor-structure-n-d.html","searchKeys":["ViktorStructureND","fun ViktorStructureND(f64Buffer: F64Array)","space.kscience.kmath.viktor.ViktorStructureND.ViktorStructureND"]},{"name":"open inline operator override fun StructureND<Double>.minus(b: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.minus","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/minus.html","searchKeys":["minus","open inline operator override fun StructureND<Double>.minus(b: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.minus"]},{"name":"open inline operator override fun StructureND<Double>.plus(arg: Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.plus","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/plus.html","searchKeys":["plus","open inline operator override fun StructureND<Double>.plus(arg: Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.plus"]},{"name":"open inline operator override fun StructureND<Double>.plus(b: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.plus","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/plus.html","searchKeys":["plus","open inline operator override fun StructureND<Double>.plus(b: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.plus"]},{"name":"open inline operator override fun StructureND<Double>.times(k: Number): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.times","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/times.html","searchKeys":["times","open inline operator override fun StructureND<Double>.times(k: Number): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.times"]},{"name":"open inline operator override fun get(index: Int): Double","description":"space.kscience.kmath.viktor.ViktorBuffer.get","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/get.html","searchKeys":["get","open inline operator override fun get(index: Int): Double","space.kscience.kmath.viktor.ViktorBuffer.get"]},{"name":"open inline operator override fun get(index: IntArray): Double","description":"space.kscience.kmath.viktor.ViktorStructureND.get","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/get.html","searchKeys":["get","open inline operator override fun get(index: IntArray): Double","space.kscience.kmath.viktor.ViktorStructureND.get"]},{"name":"open inline operator override fun set(index: Int, value: Double)","description":"space.kscience.kmath.viktor.ViktorBuffer.set","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/set.html","searchKeys":["set","open inline operator override fun set(index: Int, value: Double)","space.kscience.kmath.viktor.ViktorBuffer.set"]},{"name":"open inline operator override fun set(index: IntArray, value: Double)","description":"space.kscience.kmath.viktor.ViktorStructureND.set","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/set.html","searchKeys":["set","open inline operator override fun set(index: IntArray, value: Double)","space.kscience.kmath.viktor.ViktorStructureND.set"]},{"name":"open operator override fun StructureND<Double>.unaryMinus(): StructureND<Double>","description":"space.kscience.kmath.viktor.ViktorFieldND.unaryMinus","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/unary-minus.html","searchKeys":["unaryMinus","open operator override fun StructureND<Double>.unaryMinus(): StructureND<Double>","space.kscience.kmath.viktor.ViktorFieldND.unaryMinus"]},{"name":"open operator override fun iterator(): Iterator<Double>","description":"space.kscience.kmath.viktor.ViktorBuffer.iterator","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double>","space.kscience.kmath.viktor.ViktorBuffer.iterator"]},{"name":"open override fun StructureND<Double>.map(transform: DoubleField.(Double) -> Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.map","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/map.html","searchKeys":["map","open override fun StructureND<Double>.map(transform: DoubleField.(Double) -> Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.map"]},{"name":"open override fun StructureND<Double>.mapIndexed(transform: DoubleField.(index: IntArray, Double) -> Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.mapIndexed","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/map-indexed.html","searchKeys":["mapIndexed","open override fun StructureND<Double>.mapIndexed(transform: DoubleField.(index: IntArray, Double) -> Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.mapIndexed"]},{"name":"open override fun acos(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.acos","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/acos.html","searchKeys":["acos","open override fun acos(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.acos"]},{"name":"open override fun add(a: StructureND<Double>, b: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.add","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/add.html","searchKeys":["add","open override fun add(a: StructureND<Double>, b: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.add"]},{"name":"open override fun asin(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.asin","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/asin.html","searchKeys":["asin","open override fun asin(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.asin"]},{"name":"open override fun atan(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.atan","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/atan.html","searchKeys":["atan","open override fun atan(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.atan"]},{"name":"open override fun combine(a: StructureND<Double>, b: StructureND<Double>, transform: DoubleField.(Double, Double) -> Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.combine","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/combine.html","searchKeys":["combine","open override fun combine(a: StructureND<Double>, b: StructureND<Double>, transform: DoubleField.(Double, Double) -> Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.combine"]},{"name":"open override fun copy(): MutableBuffer<Double>","description":"space.kscience.kmath.viktor.ViktorBuffer.copy","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/copy.html","searchKeys":["copy","open override fun copy(): MutableBuffer<Double>","space.kscience.kmath.viktor.ViktorBuffer.copy"]},{"name":"open override fun cos(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.cos","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/cos.html","searchKeys":["cos","open override fun cos(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.cos"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, Double>>","description":"space.kscience.kmath.viktor.ViktorStructureND.elements","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, Double>>","space.kscience.kmath.viktor.ViktorStructureND.elements"]},{"name":"open override fun exp(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.exp","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/exp.html","searchKeys":["exp","open override fun exp(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.exp"]},{"name":"open override fun ln(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.ln","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/ln.html","searchKeys":["ln","open override fun ln(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.ln"]},{"name":"open override fun number(value: Number): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.number","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/number.html","searchKeys":["number","open override fun number(value: Number): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.number"]},{"name":"open override fun power(arg: StructureND<Double>, pow: Number): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.power","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/power.html","searchKeys":["power","open override fun power(arg: StructureND<Double>, pow: Number): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.power"]},{"name":"open override fun produce(initializer: DoubleField.(IntArray) -> Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.produce","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/produce.html","searchKeys":["produce","open override fun produce(initializer: DoubleField.(IntArray) -> Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.produce"]},{"name":"open override fun scale(a: StructureND<Double>, value: Double): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.scale","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/scale.html","searchKeys":["scale","open override fun scale(a: StructureND<Double>, value: Double): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.scale"]},{"name":"open override fun sin(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.sin","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/sin.html","searchKeys":["sin","open override fun sin(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.sin"]},{"name":"open override fun tan(arg: StructureND<Double>): ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.tan","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/tan.html","searchKeys":["tan","open override fun tan(arg: StructureND<Double>): ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.tan"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.viktor.ViktorBuffer.toString","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.viktor.ViktorBuffer.toString"]},{"name":"open override val elementContext: DoubleField","description":"space.kscience.kmath.viktor.ViktorFieldND.elementContext","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/element-context.html","searchKeys":["elementContext","open override val elementContext: DoubleField","space.kscience.kmath.viktor.ViktorFieldND.elementContext"]},{"name":"open override val one: ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.one","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/one.html","searchKeys":["one","open override val one: ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.one"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.viktor.ViktorFieldND.shape","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.viktor.ViktorFieldND.shape"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.viktor.ViktorStructureND.shape","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.viktor.ViktorStructureND.shape"]},{"name":"open override val size: Int","description":"space.kscience.kmath.viktor.ViktorBuffer.size","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.viktor.ViktorBuffer.size"]},{"name":"open override val zero: ViktorStructureND","description":"space.kscience.kmath.viktor.ViktorFieldND.zero","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/zero.html","searchKeys":["zero","open override val zero: ViktorStructureND","space.kscience.kmath.viktor.ViktorFieldND.zero"]},{"name":"val StructureND<Double>.f64Buffer: F64Array","description":"space.kscience.kmath.viktor.ViktorFieldND.f64Buffer","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-field-n-d/f64-buffer.html","searchKeys":["f64Buffer","val StructureND<Double>.f64Buffer: F64Array","space.kscience.kmath.viktor.ViktorFieldND.f64Buffer"]},{"name":"val f64Buffer: F64Array","description":"space.kscience.kmath.viktor.ViktorStructureND.f64Buffer","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-structure-n-d/f64-buffer.html","searchKeys":["f64Buffer","val f64Buffer: F64Array","space.kscience.kmath.viktor.ViktorStructureND.f64Buffer"]},{"name":"val flatArray: F64FlatArray","description":"space.kscience.kmath.viktor.ViktorBuffer.flatArray","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/flat-array.html","searchKeys":["flatArray","val flatArray: F64FlatArray","space.kscience.kmath.viktor.ViktorBuffer.flatArray"]},{"name":"value class ViktorBuffer(flatArray: F64FlatArray) : MutableBuffer<Double> ","description":"space.kscience.kmath.viktor.ViktorBuffer","location":"kmath-viktor/space.kscience.kmath.viktor/-viktor-buffer/index.html","searchKeys":["ViktorBuffer","value class ViktorBuffer(flatArray: F64FlatArray) : MutableBuffer<Double> ","space.kscience.kmath.viktor.ViktorBuffer"]},{"name":"abstract fun Tensor<T>.acos(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.acos","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/acos.html","searchKeys":["acos","abstract fun Tensor<T>.acos(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.acos"]},{"name":"abstract fun Tensor<T>.acosh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.acosh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/acosh.html","searchKeys":["acosh","abstract fun Tensor<T>.acosh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.acosh"]},{"name":"abstract fun Tensor<T>.argMax(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.argMax","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/arg-max.html","searchKeys":["argMax","abstract fun Tensor<T>.argMax(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.argMax"]},{"name":"abstract fun Tensor<T>.asin(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.asin","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/asin.html","searchKeys":["asin","abstract fun Tensor<T>.asin(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.asin"]},{"name":"abstract fun Tensor<T>.asinh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.asinh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/asinh.html","searchKeys":["asinh","abstract fun Tensor<T>.asinh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.asinh"]},{"name":"abstract fun Tensor<T>.atan(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.atan","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/atan.html","searchKeys":["atan","abstract fun Tensor<T>.atan(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.atan"]},{"name":"abstract fun Tensor<T>.atanh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.atanh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/atanh.html","searchKeys":["atanh","abstract fun Tensor<T>.atanh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.atanh"]},{"name":"abstract fun Tensor<T>.ceil(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.ceil","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/ceil.html","searchKeys":["ceil","abstract fun Tensor<T>.ceil(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.ceil"]},{"name":"abstract fun Tensor<T>.cholesky(): Tensor<T>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.cholesky","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/cholesky.html","searchKeys":["cholesky","abstract fun Tensor<T>.cholesky(): Tensor<T>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.cholesky"]},{"name":"abstract fun Tensor<T>.cos(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.cos","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/cos.html","searchKeys":["cos","abstract fun Tensor<T>.cos(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.cos"]},{"name":"abstract fun Tensor<T>.cosh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.cosh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/cosh.html","searchKeys":["cosh","abstract fun Tensor<T>.cosh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.cosh"]},{"name":"abstract fun Tensor<T>.det(): Tensor<T>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.det","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/det.html","searchKeys":["det","abstract fun Tensor<T>.det(): Tensor<T>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.det"]},{"name":"abstract fun Tensor<T>.exp(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.exp","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/exp.html","searchKeys":["exp","abstract fun Tensor<T>.exp(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.exp"]},{"name":"abstract fun Tensor<T>.floor(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.floor","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/floor.html","searchKeys":["floor","abstract fun Tensor<T>.floor(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.floor"]},{"name":"abstract fun Tensor<T>.inv(): Tensor<T>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.inv","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/inv.html","searchKeys":["inv","abstract fun Tensor<T>.inv(): Tensor<T>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.inv"]},{"name":"abstract fun Tensor<T>.ln(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.ln","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/ln.html","searchKeys":["ln","abstract fun Tensor<T>.ln(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.ln"]},{"name":"abstract fun Tensor<T>.lu(): Triple<Tensor<T>, Tensor<T>, Tensor<T>>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.lu","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/lu.html","searchKeys":["lu","abstract fun Tensor<T>.lu(): Triple<Tensor<T>, Tensor<T>, Tensor<T>>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.lu"]},{"name":"abstract fun Tensor<T>.max(): T","description":"space.kscience.kmath.tensors.api.TensorAlgebra.max","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/max.html","searchKeys":["max","abstract fun Tensor<T>.max(): T","space.kscience.kmath.tensors.api.TensorAlgebra.max"]},{"name":"abstract fun Tensor<T>.max(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.max","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/max.html","searchKeys":["max","abstract fun Tensor<T>.max(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.max"]},{"name":"abstract fun Tensor<T>.mean(): T","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.mean","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/mean.html","searchKeys":["mean","abstract fun Tensor<T>.mean(): T","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.mean"]},{"name":"abstract fun Tensor<T>.mean(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.mean","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/mean.html","searchKeys":["mean","abstract fun Tensor<T>.mean(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.mean"]},{"name":"abstract fun Tensor<T>.min(): T","description":"space.kscience.kmath.tensors.api.TensorAlgebra.min","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/min.html","searchKeys":["min","abstract fun Tensor<T>.min(): T","space.kscience.kmath.tensors.api.TensorAlgebra.min"]},{"name":"abstract fun Tensor<T>.min(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.min","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/min.html","searchKeys":["min","abstract fun Tensor<T>.min(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.min"]},{"name":"abstract fun Tensor<T>.qr(): Pair<Tensor<T>, Tensor<T>>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.qr","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/qr.html","searchKeys":["qr","abstract fun Tensor<T>.qr(): Pair<Tensor<T>, Tensor<T>>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.qr"]},{"name":"abstract fun Tensor<T>.sin(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sin","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/sin.html","searchKeys":["sin","abstract fun Tensor<T>.sin(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sin"]},{"name":"abstract fun Tensor<T>.sinh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sinh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/sinh.html","searchKeys":["sinh","abstract fun Tensor<T>.sinh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sinh"]},{"name":"abstract fun Tensor<T>.sqrt(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sqrt","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/sqrt.html","searchKeys":["sqrt","abstract fun Tensor<T>.sqrt(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.sqrt"]},{"name":"abstract fun Tensor<T>.std(): T","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.std","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/std.html","searchKeys":["std","abstract fun Tensor<T>.std(): T","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.std"]},{"name":"abstract fun Tensor<T>.std(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.std","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/std.html","searchKeys":["std","abstract fun Tensor<T>.std(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.std"]},{"name":"abstract fun Tensor<T>.sum(): T","description":"space.kscience.kmath.tensors.api.TensorAlgebra.sum","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/sum.html","searchKeys":["sum","abstract fun Tensor<T>.sum(): T","space.kscience.kmath.tensors.api.TensorAlgebra.sum"]},{"name":"abstract fun Tensor<T>.sum(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.sum","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/sum.html","searchKeys":["sum","abstract fun Tensor<T>.sum(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.sum"]},{"name":"abstract fun Tensor<T>.svd(): Triple<Tensor<T>, Tensor<T>, Tensor<T>>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.svd","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/svd.html","searchKeys":["svd","abstract fun Tensor<T>.svd(): Triple<Tensor<T>, Tensor<T>, Tensor<T>>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.svd"]},{"name":"abstract fun Tensor<T>.symEig(): Pair<Tensor<T>, Tensor<T>>","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.symEig","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/sym-eig.html","searchKeys":["symEig","abstract fun Tensor<T>.symEig(): Pair<Tensor<T>, Tensor<T>>","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra.symEig"]},{"name":"abstract fun Tensor<T>.tan(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.tan","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/tan.html","searchKeys":["tan","abstract fun Tensor<T>.tan(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.tan"]},{"name":"abstract fun Tensor<T>.tanh(): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.tanh","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/tanh.html","searchKeys":["tanh","abstract fun Tensor<T>.tanh(): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.tanh"]},{"name":"abstract fun Tensor<T>.transpose(i: Int = -2, j: Int = -1): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.transpose","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/transpose.html","searchKeys":["transpose","abstract fun Tensor<T>.transpose(i: Int = -2, j: Int = -1): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.transpose"]},{"name":"abstract fun Tensor<T>.valueOrNull(): T?","description":"space.kscience.kmath.tensors.api.TensorAlgebra.valueOrNull","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/value-or-null.html","searchKeys":["valueOrNull","abstract fun Tensor<T>.valueOrNull(): T?","space.kscience.kmath.tensors.api.TensorAlgebra.valueOrNull"]},{"name":"abstract fun Tensor<T>.variance(): T","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.variance","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/variance.html","searchKeys":["variance","abstract fun Tensor<T>.variance(): T","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.variance"]},{"name":"abstract fun Tensor<T>.variance(dim: Int, keepDim: Boolean): Tensor<T>","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.variance","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/variance.html","searchKeys":["variance","abstract fun Tensor<T>.variance(dim: Int, keepDim: Boolean): Tensor<T>","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra.variance"]},{"name":"abstract fun Tensor<T>.view(shape: IntArray): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.view","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/view.html","searchKeys":["view","abstract fun Tensor<T>.view(shape: IntArray): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.view"]},{"name":"abstract fun Tensor<T>.viewAs(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.viewAs","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/view-as.html","searchKeys":["viewAs","abstract fun Tensor<T>.viewAs(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.viewAs"]},{"name":"abstract fun diagonalEmbedding(diagonalEntries: Tensor<T>, offset: Int = 0, dim1: Int = -2, dim2: Int = -1): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.diagonalEmbedding","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/diagonal-embedding.html","searchKeys":["diagonalEmbedding","abstract fun diagonalEmbedding(diagonalEntries: Tensor<T>, offset: Int = 0, dim1: Int = -2, dim2: Int = -1): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.diagonalEmbedding"]},{"name":"abstract infix fun Tensor<T>.dot(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.dot","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/dot.html","searchKeys":["dot","abstract infix fun Tensor<T>.dot(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.dot"]},{"name":"abstract operator fun T.div(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/div.html","searchKeys":["div","abstract operator fun T.div(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div"]},{"name":"abstract operator fun T.minus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/minus.html","searchKeys":["minus","abstract operator fun T.minus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.minus"]},{"name":"abstract operator fun T.plus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/plus.html","searchKeys":["plus","abstract operator fun T.plus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.plus"]},{"name":"abstract operator fun T.times(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/times.html","searchKeys":["times","abstract operator fun T.times(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.times"]},{"name":"abstract operator fun Tensor<T>.div(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/div.html","searchKeys":["div","abstract operator fun Tensor<T>.div(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div"]},{"name":"abstract operator fun Tensor<T>.div(value: T): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/div.html","searchKeys":["div","abstract operator fun Tensor<T>.div(value: T): Tensor<T>","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.div"]},{"name":"abstract operator fun Tensor<T>.divAssign(other: Tensor<T>)","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.divAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/div-assign.html","searchKeys":["divAssign","abstract operator fun Tensor<T>.divAssign(other: Tensor<T>)","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.divAssign"]},{"name":"abstract operator fun Tensor<T>.divAssign(value: T)","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.divAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/div-assign.html","searchKeys":["divAssign","abstract operator fun Tensor<T>.divAssign(value: T)","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra.divAssign"]},{"name":"abstract operator fun Tensor<T>.get(i: Int): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.get","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/get.html","searchKeys":["get","abstract operator fun Tensor<T>.get(i: Int): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.get"]},{"name":"abstract operator fun Tensor<T>.minus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/minus.html","searchKeys":["minus","abstract operator fun Tensor<T>.minus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.minus"]},{"name":"abstract operator fun Tensor<T>.minus(value: T): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/minus.html","searchKeys":["minus","abstract operator fun Tensor<T>.minus(value: T): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.minus"]},{"name":"abstract operator fun Tensor<T>.minusAssign(other: Tensor<T>)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.minusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","abstract operator fun Tensor<T>.minusAssign(other: Tensor<T>)","space.kscience.kmath.tensors.api.TensorAlgebra.minusAssign"]},{"name":"abstract operator fun Tensor<T>.minusAssign(value: T)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.minusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","abstract operator fun Tensor<T>.minusAssign(value: T)","space.kscience.kmath.tensors.api.TensorAlgebra.minusAssign"]},{"name":"abstract operator fun Tensor<T>.plus(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/plus.html","searchKeys":["plus","abstract operator fun Tensor<T>.plus(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.plus"]},{"name":"abstract operator fun Tensor<T>.plus(value: T): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/plus.html","searchKeys":["plus","abstract operator fun Tensor<T>.plus(value: T): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.plus"]},{"name":"abstract operator fun Tensor<T>.plusAssign(other: Tensor<T>)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.plusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","abstract operator fun Tensor<T>.plusAssign(other: Tensor<T>)","space.kscience.kmath.tensors.api.TensorAlgebra.plusAssign"]},{"name":"abstract operator fun Tensor<T>.plusAssign(value: T)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.plusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","abstract operator fun Tensor<T>.plusAssign(value: T)","space.kscience.kmath.tensors.api.TensorAlgebra.plusAssign"]},{"name":"abstract operator fun Tensor<T>.times(other: Tensor<T>): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/times.html","searchKeys":["times","abstract operator fun Tensor<T>.times(other: Tensor<T>): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.times"]},{"name":"abstract operator fun Tensor<T>.times(value: T): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/times.html","searchKeys":["times","abstract operator fun Tensor<T>.times(value: T): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.times"]},{"name":"abstract operator fun Tensor<T>.timesAssign(other: Tensor<T>)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.timesAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/times-assign.html","searchKeys":["timesAssign","abstract operator fun Tensor<T>.timesAssign(other: Tensor<T>)","space.kscience.kmath.tensors.api.TensorAlgebra.timesAssign"]},{"name":"abstract operator fun Tensor<T>.timesAssign(value: T)","description":"space.kscience.kmath.tensors.api.TensorAlgebra.timesAssign","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/times-assign.html","searchKeys":["timesAssign","abstract operator fun Tensor<T>.timesAssign(value: T)","space.kscience.kmath.tensors.api.TensorAlgebra.timesAssign"]},{"name":"abstract operator fun Tensor<T>.unaryMinus(): Tensor<T>","description":"space.kscience.kmath.tensors.api.TensorAlgebra.unaryMinus","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/unary-minus.html","searchKeys":["unaryMinus","abstract operator fun Tensor<T>.unaryMinus(): Tensor<T>","space.kscience.kmath.tensors.api.TensorAlgebra.unaryMinus"]},{"name":"class DoubleTensor : BufferedTensor<Double> ","description":"space.kscience.kmath.tensors.core.DoubleTensor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor/index.html","searchKeys":["DoubleTensor","class DoubleTensor : BufferedTensor<Double> ","space.kscience.kmath.tensors.core.DoubleTensor"]},{"name":"class IntTensor : BufferedTensor<Int> ","description":"space.kscience.kmath.tensors.core.IntTensor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-int-tensor/index.html","searchKeys":["IntTensor","class IntTensor : BufferedTensor<Int> ","space.kscience.kmath.tensors.core.IntTensor"]},{"name":"fun <R> DoubleTensorAlgebra.withBroadcast(block: BroadcastDoubleTensorAlgebra.() -> R): R","description":"space.kscience.kmath.tensors.core.withBroadcast","location":"kmath-tensors/space.kscience.kmath.tensors.core/with-broadcast.html","searchKeys":["withBroadcast","fun <R> DoubleTensorAlgebra.withBroadcast(block: BroadcastDoubleTensorAlgebra.() -> R): R","space.kscience.kmath.tensors.core.withBroadcast"]},{"name":"fun DoubleTensor.toDoubleArray(): DoubleArray","description":"space.kscience.kmath.tensors.core.toDoubleArray","location":"kmath-tensors/space.kscience.kmath.tensors.core/to-double-array.html","searchKeys":["toDoubleArray","fun DoubleTensor.toDoubleArray(): DoubleArray","space.kscience.kmath.tensors.core.toDoubleArray"]},{"name":"fun DoubleTensorAlgebra()","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.DoubleTensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/-double-tensor-algebra.html","searchKeys":["DoubleTensorAlgebra","fun DoubleTensorAlgebra()","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.DoubleTensorAlgebra"]},{"name":"fun DoubleTensorAlgebra.ones(vararg shape: Int): DoubleTensor","description":"space.kscience.kmath.tensors.core.ones","location":"kmath-tensors/space.kscience.kmath.tensors.core/ones.html","searchKeys":["ones","fun DoubleTensorAlgebra.ones(vararg shape: Int): DoubleTensor","space.kscience.kmath.tensors.core.ones"]},{"name":"fun IntTensor.toIntArray(): IntArray","description":"space.kscience.kmath.tensors.core.toIntArray","location":"kmath-tensors/space.kscience.kmath.tensors.core/to-int-array.html","searchKeys":["toIntArray","fun IntTensor.toIntArray(): IntArray","space.kscience.kmath.tensors.core.toIntArray"]},{"name":"fun Tensor<Double>.cholesky(epsilon: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cholesky","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/cholesky.html","searchKeys":["cholesky","fun Tensor<Double>.cholesky(epsilon: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cholesky"]},{"name":"fun Tensor<Double>.copy(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.copy","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/copy.html","searchKeys":["copy","fun Tensor<Double>.copy(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.copy"]},{"name":"fun Tensor<Double>.detLU(epsilon: Double = 1e-9): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.detLU","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/det-l-u.html","searchKeys":["detLU","fun Tensor<Double>.detLU(epsilon: Double = 1e-9): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.detLU"]},{"name":"fun Tensor<Double>.eq(other: Tensor<Double>, epsilon: Double): Boolean","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eq","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/eq.html","searchKeys":["eq","fun Tensor<Double>.eq(other: Tensor<Double>, epsilon: Double): Boolean","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eq"]},{"name":"fun Tensor<Double>.fullLike(value: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.fullLike","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/full-like.html","searchKeys":["fullLike","fun Tensor<Double>.fullLike(value: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.fullLike"]},{"name":"fun Tensor<Double>.invLU(epsilon: Double = 1e-9): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.invLU","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/inv-l-u.html","searchKeys":["invLU","fun Tensor<Double>.invLU(epsilon: Double = 1e-9): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.invLU"]},{"name":"fun Tensor<Double>.lu(epsilon: Double = 1e-9): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.lu","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/lu.html","searchKeys":["lu","fun Tensor<Double>.lu(epsilon: Double = 1e-9): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.lu"]},{"name":"fun Tensor<Double>.luFactor(): Pair<DoubleTensor, IntTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luFactor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/lu-factor.html","searchKeys":["luFactor","fun Tensor<Double>.luFactor(): Pair<DoubleTensor, IntTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luFactor"]},{"name":"fun Tensor<Double>.luFactor(epsilon: Double): Pair<DoubleTensor, IntTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luFactor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/lu-factor.html","searchKeys":["luFactor","fun Tensor<Double>.luFactor(epsilon: Double): Pair<DoubleTensor, IntTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luFactor"]},{"name":"fun Tensor<Double>.onesLike(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.onesLike","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/ones-like.html","searchKeys":["onesLike","fun Tensor<Double>.onesLike(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.onesLike"]},{"name":"fun Tensor<Double>.randomNormalLike(seed: Long = 0): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.randomNormalLike","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/random-normal-like.html","searchKeys":["randomNormalLike","fun Tensor<Double>.randomNormalLike(seed: Long = 0): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.randomNormalLike"]},{"name":"fun Tensor<Double>.rowsByIndices(indices: IntArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.rowsByIndices","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/rows-by-indices.html","searchKeys":["rowsByIndices","fun Tensor<Double>.rowsByIndices(indices: IntArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.rowsByIndices"]},{"name":"fun Tensor<Double>.svd(epsilon: Double): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.svd","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/svd.html","searchKeys":["svd","fun Tensor<Double>.svd(epsilon: Double): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.svd"]},{"name":"fun Tensor<Double>.symEig(epsilon: Double): Pair<DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.symEig","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sym-eig.html","searchKeys":["symEig","fun Tensor<Double>.symEig(epsilon: Double): Pair<DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.symEig"]},{"name":"fun Tensor<Double>.toDoubleTensor(): DoubleTensor","description":"space.kscience.kmath.tensors.core.toDoubleTensor","location":"kmath-tensors/space.kscience.kmath.tensors.core/to-double-tensor.html","searchKeys":["toDoubleTensor","fun Tensor<Double>.toDoubleTensor(): DoubleTensor","space.kscience.kmath.tensors.core.toDoubleTensor"]},{"name":"fun Tensor<Double>.zeroesLike(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.zeroesLike","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/zeroes-like.html","searchKeys":["zeroesLike","fun Tensor<Double>.zeroesLike(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.zeroesLike"]},{"name":"fun Tensor<Int>.toIntTensor(): IntTensor","description":"space.kscience.kmath.tensors.core.toIntTensor","location":"kmath-tensors/space.kscience.kmath.tensors.core/to-int-tensor.html","searchKeys":["toIntTensor","fun Tensor<Int>.toIntTensor(): IntTensor","space.kscience.kmath.tensors.core.toIntTensor"]},{"name":"fun cov(tensors: List<Tensor<Double>>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cov","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/cov.html","searchKeys":["cov","fun cov(tensors: List<Tensor<Double>>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cov"]},{"name":"fun eye(n: Int): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eye","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/eye.html","searchKeys":["eye","fun eye(n: Int): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eye"]},{"name":"fun fromArray(shape: IntArray, buffer: DoubleArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.fromArray","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/from-array.html","searchKeys":["fromArray","fun fromArray(shape: IntArray, buffer: DoubleArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.fromArray"]},{"name":"fun full(value: Double, shape: IntArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.full","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/full.html","searchKeys":["full","fun full(value: Double, shape: IntArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.full"]},{"name":"fun luPivot(luTensor: Tensor<Double>, pivotsTensor: Tensor<Int>): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luPivot","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/lu-pivot.html","searchKeys":["luPivot","fun luPivot(luTensor: Tensor<Double>, pivotsTensor: Tensor<Int>): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.luPivot"]},{"name":"fun ones(shape: IntArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ones","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/ones.html","searchKeys":["ones","fun ones(shape: IntArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ones"]},{"name":"fun produce(shape: IntArray, initializer: (IntArray) -> Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.produce","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/produce.html","searchKeys":["produce","fun produce(shape: IntArray, initializer: (IntArray) -> Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.produce"]},{"name":"fun randomNormal(shape: IntArray, seed: Long = 0): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.randomNormal","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/random-normal.html","searchKeys":["randomNormal","fun randomNormal(shape: IntArray, seed: Long = 0): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.randomNormal"]},{"name":"fun stack(tensors: List<Tensor<Double>>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.stack","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/stack.html","searchKeys":["stack","fun stack(tensors: List<Tensor<Double>>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.stack"]},{"name":"fun zeros(shape: IntArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.zeros","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/zeros.html","searchKeys":["zeros","fun zeros(shape: IntArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.zeros"]},{"name":"infix fun Tensor<Double>.eq(other: Tensor<Double>): Boolean","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eq","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/eq.html","searchKeys":["eq","infix fun Tensor<Double>.eq(other: Tensor<Double>): Boolean","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.eq"]},{"name":"inline fun Tensor<Double>.map(transform: (Double) -> Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.map","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/map.html","searchKeys":["map","inline fun Tensor<Double>.map(transform: (Double) -> Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.map"]},{"name":"interface AnalyticTensorAlgebra<T> : TensorPartialDivisionAlgebra<T> ","description":"space.kscience.kmath.tensors.api.AnalyticTensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.api/-analytic-tensor-algebra/index.html","searchKeys":["AnalyticTensorAlgebra","interface AnalyticTensorAlgebra<T> : TensorPartialDivisionAlgebra<T> ","space.kscience.kmath.tensors.api.AnalyticTensorAlgebra"]},{"name":"interface LinearOpsTensorAlgebra<T> : TensorPartialDivisionAlgebra<T> ","description":"space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.api/-linear-ops-tensor-algebra/index.html","searchKeys":["LinearOpsTensorAlgebra","interface LinearOpsTensorAlgebra<T> : TensorPartialDivisionAlgebra<T> ","space.kscience.kmath.tensors.api.LinearOpsTensorAlgebra"]},{"name":"interface TensorAlgebra<T> : Algebra<Tensor<T>> ","description":"space.kscience.kmath.tensors.api.TensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/index.html","searchKeys":["TensorAlgebra","interface TensorAlgebra<T> : Algebra<Tensor<T>> ","space.kscience.kmath.tensors.api.TensorAlgebra"]},{"name":"interface TensorPartialDivisionAlgebra<T> : TensorAlgebra<T> ","description":"space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-partial-division-algebra/index.html","searchKeys":["TensorPartialDivisionAlgebra","interface TensorPartialDivisionAlgebra<T> : TensorAlgebra<T> ","space.kscience.kmath.tensors.api.TensorPartialDivisionAlgebra"]},{"name":"object BroadcastDoubleTensorAlgebra : DoubleTensorAlgebra","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/index.html","searchKeys":["BroadcastDoubleTensorAlgebra","object BroadcastDoubleTensorAlgebra : DoubleTensorAlgebra","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra"]},{"name":"object Companion : DoubleTensorAlgebra","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.Companion","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/-companion/index.html","searchKeys":["Companion","object Companion : DoubleTensorAlgebra","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.Companion"]},{"name":"open class BufferedTensor<T> : MutableStructureND<T> ","description":"space.kscience.kmath.tensors.core.BufferedTensor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/index.html","searchKeys":["BufferedTensor","open class BufferedTensor<T> : MutableStructureND<T> ","space.kscience.kmath.tensors.core.BufferedTensor"]},{"name":"open class DoubleTensorAlgebra : TensorPartialDivisionAlgebra<Double> , AnalyticTensorAlgebra<Double> , LinearOpsTensorAlgebra<Double> ","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/index.html","searchKeys":["DoubleTensorAlgebra","open class DoubleTensorAlgebra : TensorPartialDivisionAlgebra<Double> , AnalyticTensorAlgebra<Double> , LinearOpsTensorAlgebra<Double> ","space.kscience.kmath.tensors.core.DoubleTensorAlgebra"]},{"name":"open fun Tensor<T>.value(): T","description":"space.kscience.kmath.tensors.api.TensorAlgebra.value","location":"kmath-tensors/space.kscience.kmath.tensors.api/-tensor-algebra/value.html","searchKeys":["value","open fun Tensor<T>.value(): T","space.kscience.kmath.tensors.api.TensorAlgebra.value"]},{"name":"open infix override fun Tensor<Double>.dot(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.dot","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/dot.html","searchKeys":["dot","open infix override fun Tensor<Double>.dot(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.dot"]},{"name":"open operator override fun Double.div(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/div.html","searchKeys":["div","open operator override fun Double.div(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div"]},{"name":"open operator override fun Double.minus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Double.minus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus"]},{"name":"open operator override fun Double.plus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Double.plus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus"]},{"name":"open operator override fun Double.times(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/times.html","searchKeys":["times","open operator override fun Double.times(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times"]},{"name":"open operator override fun Tensor<Double>.div(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/div.html","searchKeys":["div","open operator override fun Tensor<Double>.div(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.div"]},{"name":"open operator override fun Tensor<Double>.div(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/div.html","searchKeys":["div","open operator override fun Tensor<Double>.div(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div"]},{"name":"open operator override fun Tensor<Double>.div(value: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/div.html","searchKeys":["div","open operator override fun Tensor<Double>.div(value: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.div"]},{"name":"open operator override fun Tensor<Double>.divAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.divAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/div-assign.html","searchKeys":["divAssign","open operator override fun Tensor<Double>.divAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.divAssign"]},{"name":"open operator override fun Tensor<Double>.divAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.divAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/div-assign.html","searchKeys":["divAssign","open operator override fun Tensor<Double>.divAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.divAssign"]},{"name":"open operator override fun Tensor<Double>.divAssign(value: Double)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.divAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/div-assign.html","searchKeys":["divAssign","open operator override fun Tensor<Double>.divAssign(value: Double)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.divAssign"]},{"name":"open operator override fun Tensor<Double>.get(i: Int): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.get","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/get.html","searchKeys":["get","open operator override fun Tensor<Double>.get(i: Int): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.get"]},{"name":"open operator override fun Tensor<Double>.minus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Tensor<Double>.minus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.minus"]},{"name":"open operator override fun Tensor<Double>.minus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Tensor<Double>.minus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus"]},{"name":"open operator override fun Tensor<Double>.minus(value: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/minus.html","searchKeys":["minus","open operator override fun Tensor<Double>.minus(value: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minus"]},{"name":"open operator override fun Tensor<Double>.minusAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.minusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","open operator override fun Tensor<Double>.minusAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.minusAssign"]},{"name":"open operator override fun Tensor<Double>.minusAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","open operator override fun Tensor<Double>.minusAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minusAssign"]},{"name":"open operator override fun Tensor<Double>.minusAssign(value: Double)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/minus-assign.html","searchKeys":["minusAssign","open operator override fun Tensor<Double>.minusAssign(value: Double)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.minusAssign"]},{"name":"open operator override fun Tensor<Double>.plus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Tensor<Double>.plus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.plus"]},{"name":"open operator override fun Tensor<Double>.plus(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Tensor<Double>.plus(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus"]},{"name":"open operator override fun Tensor<Double>.plus(value: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/plus.html","searchKeys":["plus","open operator override fun Tensor<Double>.plus(value: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plus"]},{"name":"open operator override fun Tensor<Double>.plusAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.plusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","open operator override fun Tensor<Double>.plusAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.plusAssign"]},{"name":"open operator override fun Tensor<Double>.plusAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","open operator override fun Tensor<Double>.plusAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plusAssign"]},{"name":"open operator override fun Tensor<Double>.plusAssign(value: Double)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plusAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/plus-assign.html","searchKeys":["plusAssign","open operator override fun Tensor<Double>.plusAssign(value: Double)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.plusAssign"]},{"name":"open operator override fun Tensor<Double>.times(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/times.html","searchKeys":["times","open operator override fun Tensor<Double>.times(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.times"]},{"name":"open operator override fun Tensor<Double>.times(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/times.html","searchKeys":["times","open operator override fun Tensor<Double>.times(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times"]},{"name":"open operator override fun Tensor<Double>.times(value: Double): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/times.html","searchKeys":["times","open operator override fun Tensor<Double>.times(value: Double): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.times"]},{"name":"open operator override fun Tensor<Double>.timesAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.timesAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-broadcast-double-tensor-algebra/times-assign.html","searchKeys":["timesAssign","open operator override fun Tensor<Double>.timesAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.BroadcastDoubleTensorAlgebra.timesAssign"]},{"name":"open operator override fun Tensor<Double>.timesAssign(other: Tensor<Double>)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.timesAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/times-assign.html","searchKeys":["timesAssign","open operator override fun Tensor<Double>.timesAssign(other: Tensor<Double>)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.timesAssign"]},{"name":"open operator override fun Tensor<Double>.timesAssign(value: Double)","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.timesAssign","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/times-assign.html","searchKeys":["timesAssign","open operator override fun Tensor<Double>.timesAssign(value: Double)","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.timesAssign"]},{"name":"open operator override fun Tensor<Double>.unaryMinus(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.unaryMinus","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Tensor<Double>.unaryMinus(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.unaryMinus"]},{"name":"open operator override fun get(index: IntArray): T","description":"space.kscience.kmath.tensors.core.BufferedTensor.get","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/get.html","searchKeys":["get","open operator override fun get(index: IntArray): T","space.kscience.kmath.tensors.core.BufferedTensor.get"]},{"name":"open operator override fun set(index: IntArray, value: T)","description":"space.kscience.kmath.tensors.core.BufferedTensor.set","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/set.html","searchKeys":["set","open operator override fun set(index: IntArray, value: T)","space.kscience.kmath.tensors.core.BufferedTensor.set"]},{"name":"open override fun Tensor<Double>.acos(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.acos","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/acos.html","searchKeys":["acos","open override fun Tensor<Double>.acos(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.acos"]},{"name":"open override fun Tensor<Double>.acosh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.acosh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/acosh.html","searchKeys":["acosh","open override fun Tensor<Double>.acosh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.acosh"]},{"name":"open override fun Tensor<Double>.argMax(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.argMax","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/arg-max.html","searchKeys":["argMax","open override fun Tensor<Double>.argMax(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.argMax"]},{"name":"open override fun Tensor<Double>.asin(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.asin","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/asin.html","searchKeys":["asin","open override fun Tensor<Double>.asin(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.asin"]},{"name":"open override fun Tensor<Double>.asinh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.asinh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/asinh.html","searchKeys":["asinh","open override fun Tensor<Double>.asinh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.asinh"]},{"name":"open override fun Tensor<Double>.atan(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.atan","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/atan.html","searchKeys":["atan","open override fun Tensor<Double>.atan(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.atan"]},{"name":"open override fun Tensor<Double>.atanh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.atanh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/atanh.html","searchKeys":["atanh","open override fun Tensor<Double>.atanh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.atanh"]},{"name":"open override fun Tensor<Double>.ceil(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ceil","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/ceil.html","searchKeys":["ceil","open override fun Tensor<Double>.ceil(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ceil"]},{"name":"open override fun Tensor<Double>.cholesky(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cholesky","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/cholesky.html","searchKeys":["cholesky","open override fun Tensor<Double>.cholesky(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cholesky"]},{"name":"open override fun Tensor<Double>.cos(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cos","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/cos.html","searchKeys":["cos","open override fun Tensor<Double>.cos(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cos"]},{"name":"open override fun Tensor<Double>.cosh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cosh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/cosh.html","searchKeys":["cosh","open override fun Tensor<Double>.cosh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.cosh"]},{"name":"open override fun Tensor<Double>.det(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.det","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/det.html","searchKeys":["det","open override fun Tensor<Double>.det(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.det"]},{"name":"open override fun Tensor<Double>.exp(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.exp","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/exp.html","searchKeys":["exp","open override fun Tensor<Double>.exp(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.exp"]},{"name":"open override fun Tensor<Double>.floor(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.floor","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/floor.html","searchKeys":["floor","open override fun Tensor<Double>.floor(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.floor"]},{"name":"open override fun Tensor<Double>.inv(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.inv","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/inv.html","searchKeys":["inv","open override fun Tensor<Double>.inv(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.inv"]},{"name":"open override fun Tensor<Double>.ln(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ln","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/ln.html","searchKeys":["ln","open override fun Tensor<Double>.ln(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.ln"]},{"name":"open override fun Tensor<Double>.lu(): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.lu","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/lu.html","searchKeys":["lu","open override fun Tensor<Double>.lu(): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.lu"]},{"name":"open override fun Tensor<Double>.max(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.max","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/max.html","searchKeys":["max","open override fun Tensor<Double>.max(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.max"]},{"name":"open override fun Tensor<Double>.max(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.max","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/max.html","searchKeys":["max","open override fun Tensor<Double>.max(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.max"]},{"name":"open override fun Tensor<Double>.mean(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.mean","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/mean.html","searchKeys":["mean","open override fun Tensor<Double>.mean(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.mean"]},{"name":"open override fun Tensor<Double>.mean(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.mean","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/mean.html","searchKeys":["mean","open override fun Tensor<Double>.mean(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.mean"]},{"name":"open override fun Tensor<Double>.min(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.min","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/min.html","searchKeys":["min","open override fun Tensor<Double>.min(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.min"]},{"name":"open override fun Tensor<Double>.min(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.min","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/min.html","searchKeys":["min","open override fun Tensor<Double>.min(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.min"]},{"name":"open override fun Tensor<Double>.qr(): Pair<DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.qr","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/qr.html","searchKeys":["qr","open override fun Tensor<Double>.qr(): Pair<DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.qr"]},{"name":"open override fun Tensor<Double>.sin(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sin","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sin.html","searchKeys":["sin","open override fun Tensor<Double>.sin(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sin"]},{"name":"open override fun Tensor<Double>.sinh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sinh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sinh.html","searchKeys":["sinh","open override fun Tensor<Double>.sinh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sinh"]},{"name":"open override fun Tensor<Double>.sqrt(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sqrt","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sqrt.html","searchKeys":["sqrt","open override fun Tensor<Double>.sqrt(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sqrt"]},{"name":"open override fun Tensor<Double>.std(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.std","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/std.html","searchKeys":["std","open override fun Tensor<Double>.std(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.std"]},{"name":"open override fun Tensor<Double>.std(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.std","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/std.html","searchKeys":["std","open override fun Tensor<Double>.std(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.std"]},{"name":"open override fun Tensor<Double>.sum(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sum","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sum.html","searchKeys":["sum","open override fun Tensor<Double>.sum(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sum"]},{"name":"open override fun Tensor<Double>.sum(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sum","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sum.html","searchKeys":["sum","open override fun Tensor<Double>.sum(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.sum"]},{"name":"open override fun Tensor<Double>.svd(): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.svd","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/svd.html","searchKeys":["svd","open override fun Tensor<Double>.svd(): Triple<DoubleTensor, DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.svd"]},{"name":"open override fun Tensor<Double>.symEig(): Pair<DoubleTensor, DoubleTensor>","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.symEig","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/sym-eig.html","searchKeys":["symEig","open override fun Tensor<Double>.symEig(): Pair<DoubleTensor, DoubleTensor>","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.symEig"]},{"name":"open override fun Tensor<Double>.tan(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.tan","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/tan.html","searchKeys":["tan","open override fun Tensor<Double>.tan(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.tan"]},{"name":"open override fun Tensor<Double>.tanh(): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.tanh","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/tanh.html","searchKeys":["tanh","open override fun Tensor<Double>.tanh(): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.tanh"]},{"name":"open override fun Tensor<Double>.transpose(i: Int, j: Int): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.transpose","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/transpose.html","searchKeys":["transpose","open override fun Tensor<Double>.transpose(i: Int, j: Int): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.transpose"]},{"name":"open override fun Tensor<Double>.value(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.value","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/value.html","searchKeys":["value","open override fun Tensor<Double>.value(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.value"]},{"name":"open override fun Tensor<Double>.valueOrNull(): Double?","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.valueOrNull","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/value-or-null.html","searchKeys":["valueOrNull","open override fun Tensor<Double>.valueOrNull(): Double?","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.valueOrNull"]},{"name":"open override fun Tensor<Double>.variance(): Double","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.variance","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/variance.html","searchKeys":["variance","open override fun Tensor<Double>.variance(): Double","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.variance"]},{"name":"open override fun Tensor<Double>.variance(dim: Int, keepDim: Boolean): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.variance","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/variance.html","searchKeys":["variance","open override fun Tensor<Double>.variance(dim: Int, keepDim: Boolean): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.variance"]},{"name":"open override fun Tensor<Double>.view(shape: IntArray): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.view","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/view.html","searchKeys":["view","open override fun Tensor<Double>.view(shape: IntArray): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.view"]},{"name":"open override fun Tensor<Double>.viewAs(other: Tensor<Double>): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.viewAs","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/view-as.html","searchKeys":["viewAs","open override fun Tensor<Double>.viewAs(other: Tensor<Double>): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.viewAs"]},{"name":"open override fun diagonalEmbedding(diagonalEntries: Tensor<Double>, offset: Int, dim1: Int, dim2: Int): DoubleTensor","description":"space.kscience.kmath.tensors.core.DoubleTensorAlgebra.diagonalEmbedding","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor-algebra/diagonal-embedding.html","searchKeys":["diagonalEmbedding","open override fun diagonalEmbedding(diagonalEntries: Tensor<Double>, offset: Int, dim1: Int, dim2: Int): DoubleTensor","space.kscience.kmath.tensors.core.DoubleTensorAlgebra.diagonalEmbedding"]},{"name":"open override fun elements(): Sequence<Pair<IntArray, T>>","description":"space.kscience.kmath.tensors.core.BufferedTensor.elements","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/elements.html","searchKeys":["elements","open override fun elements(): Sequence<Pair<IntArray, T>>","space.kscience.kmath.tensors.core.BufferedTensor.elements"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.tensors.core.DoubleTensor.toString","location":"kmath-tensors/space.kscience.kmath.tensors.core/-double-tensor/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.tensors.core.DoubleTensor.toString"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.tensors.core.BufferedTensor.shape","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.tensors.core.BufferedTensor.shape"]},{"name":"val Double.Companion.tensorAlgebra: DoubleTensorAlgebra.Companion","description":"space.kscience.kmath.tensors.core.tensorAlgebra","location":"kmath-tensors/space.kscience.kmath.tensors.core/tensor-algebra.html","searchKeys":["tensorAlgebra","val Double.Companion.tensorAlgebra: DoubleTensorAlgebra.Companion","space.kscience.kmath.tensors.core.tensorAlgebra"]},{"name":"val linearStructure: Strides","description":"space.kscience.kmath.tensors.core.BufferedTensor.linearStructure","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/linear-structure.html","searchKeys":["linearStructure","val linearStructure: Strides","space.kscience.kmath.tensors.core.BufferedTensor.linearStructure"]},{"name":"val numElements: Int","description":"space.kscience.kmath.tensors.core.BufferedTensor.numElements","location":"kmath-tensors/space.kscience.kmath.tensors.core/-buffered-tensor/num-elements.html","searchKeys":["numElements","val numElements: Int","space.kscience.kmath.tensors.core.BufferedTensor.numElements"]},{"name":"class ComplexFieldND(shape: IntArray) : BufferedFieldND<Complex, ComplexField> , NumbersAddOperations<StructureND<Complex>> , ExtendedField<StructureND<Complex>> ","description":"space.kscience.kmath.complex.ComplexFieldND","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/index.html","searchKeys":["ComplexFieldND","class ComplexFieldND(shape: IntArray) : BufferedFieldND<Complex, ComplexField> , NumbersAddOperations<StructureND<Complex>> , ExtendedField<StructureND<Complex>> ","space.kscience.kmath.complex.ComplexFieldND"]},{"name":"data class Complex(re: Double, im: Double)","description":"space.kscience.kmath.complex.Complex","location":"kmath-complex/space.kscience.kmath.complex/-complex/index.html","searchKeys":["Complex","data class Complex(re: Double, im: Double)","space.kscience.kmath.complex.Complex"]},{"name":"data class Quaternion(w: Double, x: Double, y: Double, z: Double)","description":"space.kscience.kmath.complex.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/index.html","searchKeys":["Quaternion","data class Quaternion(w: Double, x: Double, y: Double, z: Double)","space.kscience.kmath.complex.Quaternion"]},{"name":"fun Complex(re: Double, im: Double)","description":"space.kscience.kmath.complex.Complex.Complex","location":"kmath-complex/space.kscience.kmath.complex/-complex/-complex.html","searchKeys":["Complex","fun Complex(re: Double, im: Double)","space.kscience.kmath.complex.Complex.Complex"]},{"name":"fun Complex(re: Number)","description":"space.kscience.kmath.complex.Complex.Complex","location":"kmath-complex/space.kscience.kmath.complex/-complex/-complex.html","searchKeys":["Complex","fun Complex(re: Number)","space.kscience.kmath.complex.Complex.Complex"]},{"name":"fun Complex(re: Number, im: Number)","description":"space.kscience.kmath.complex.Complex.Complex","location":"kmath-complex/space.kscience.kmath.complex/-complex/-complex.html","searchKeys":["Complex","fun Complex(re: Number, im: Number)","space.kscience.kmath.complex.Complex.Complex"]},{"name":"fun Complex.toQuaternion(): Quaternion","description":"space.kscience.kmath.complex.toQuaternion","location":"kmath-complex/space.kscience.kmath.complex/to-quaternion.html","searchKeys":["toQuaternion","fun Complex.toQuaternion(): Quaternion","space.kscience.kmath.complex.toQuaternion"]},{"name":"fun ComplexField.bufferAlgebra(size: Int): BufferField<Complex, ComplexField>","description":"space.kscience.kmath.complex.bufferAlgebra","location":"kmath-complex/space.kscience.kmath.complex/buffer-algebra.html","searchKeys":["bufferAlgebra","fun ComplexField.bufferAlgebra(size: Int): BufferField<Complex, ComplexField>","space.kscience.kmath.complex.bufferAlgebra"]},{"name":"fun ComplexField.ndAlgebra(vararg shape: Int): ComplexFieldND","description":"space.kscience.kmath.complex.ndAlgebra","location":"kmath-complex/space.kscience.kmath.complex/nd-algebra.html","searchKeys":["ndAlgebra","fun ComplexField.ndAlgebra(vararg shape: Int): ComplexFieldND","space.kscience.kmath.complex.ndAlgebra"]},{"name":"fun ComplexFieldND(shape: IntArray)","description":"space.kscience.kmath.complex.ComplexFieldND.ComplexFieldND","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/-complex-field-n-d.html","searchKeys":["ComplexFieldND","fun ComplexFieldND(shape: IntArray)","space.kscience.kmath.complex.ComplexFieldND.ComplexFieldND"]},{"name":"fun Number.toComplex(): Complex","description":"space.kscience.kmath.complex.toComplex","location":"kmath-complex/space.kscience.kmath.complex/to-complex.html","searchKeys":["toComplex","fun Number.toComplex(): Complex","space.kscience.kmath.complex.toComplex"]},{"name":"fun Number.toQuaternion(): Quaternion","description":"space.kscience.kmath.complex.toQuaternion","location":"kmath-complex/space.kscience.kmath.complex/to-quaternion.html","searchKeys":["toQuaternion","fun Number.toQuaternion(): Quaternion","space.kscience.kmath.complex.toQuaternion"]},{"name":"fun Quaternion(w: Double, x: Double, y: Double, z: Double)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(w: Double, x: Double, y: Double, z: Double)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(w: Number)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(w: Number)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(w: Number, x: Number)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(w: Number, x: Number)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(w: Number, x: Number, y: Number)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(w: Number, x: Number, y: Number)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(w: Number, x: Number, y: Number, z: Number)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(w: Number, x: Number, y: Number, z: Number)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(wx: Complex)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(wx: Complex)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun Quaternion(wx: Complex, yz: Complex)","description":"space.kscience.kmath.complex.Quaternion.Quaternion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-quaternion.html","searchKeys":["Quaternion","fun Quaternion(wx: Complex, yz: Complex)","space.kscience.kmath.complex.Quaternion.Quaternion"]},{"name":"fun power(arg: Complex, pow: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.power","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/power.html","searchKeys":["power","fun power(arg: Complex, pow: Complex): Complex","space.kscience.kmath.complex.ComplexField.power"]},{"name":"inline fun <R> ComplexField.withNdAlgebra(vararg shape: Int, action: ComplexFieldND.() -> R): R","description":"space.kscience.kmath.complex.withNdAlgebra","location":"kmath-complex/space.kscience.kmath.complex/with-nd-algebra.html","searchKeys":["withNdAlgebra","inline fun <R> ComplexField.withNdAlgebra(vararg shape: Int, action: ComplexFieldND.() -> R): R","space.kscience.kmath.complex.withNdAlgebra"]},{"name":"inline fun Buffer.Companion.complex(size: Int, init: (Int) -> Complex): Buffer<Complex>","description":"space.kscience.kmath.complex.complex","location":"kmath-complex/space.kscience.kmath.complex/complex.html","searchKeys":["complex","inline fun Buffer.Companion.complex(size: Int, init: (Int) -> Complex): Buffer<Complex>","space.kscience.kmath.complex.complex"]},{"name":"inline fun Buffer.Companion.quaternion(size: Int, init: (Int) -> Quaternion): Buffer<Quaternion>","description":"space.kscience.kmath.complex.quaternion","location":"kmath-complex/space.kscience.kmath.complex/quaternion.html","searchKeys":["quaternion","inline fun Buffer.Companion.quaternion(size: Int, init: (Int) -> Quaternion): Buffer<Quaternion>","space.kscience.kmath.complex.quaternion"]},{"name":"inline fun BufferedFieldND<Complex, ComplexField>.produceInline(initializer: ComplexField.(Int) -> Complex): BufferND<Complex>","description":"space.kscience.kmath.complex.produceInline","location":"kmath-complex/space.kscience.kmath.complex/produce-inline.html","searchKeys":["produceInline","inline fun BufferedFieldND<Complex, ComplexField>.produceInline(initializer: ComplexField.(Int) -> Complex): BufferND<Complex>","space.kscience.kmath.complex.produceInline"]},{"name":"inline fun MutableBuffer.Companion.complex(size: Int, init: (Int) -> Complex): MutableBuffer<Complex>","description":"space.kscience.kmath.complex.complex","location":"kmath-complex/space.kscience.kmath.complex/complex.html","searchKeys":["complex","inline fun MutableBuffer.Companion.complex(size: Int, init: (Int) -> Complex): MutableBuffer<Complex>","space.kscience.kmath.complex.complex"]},{"name":"inline fun MutableBuffer.Companion.quaternion(size: Int, init: (Int) -> Quaternion): MutableBuffer<Quaternion>","description":"space.kscience.kmath.complex.quaternion","location":"kmath-complex/space.kscience.kmath.complex/quaternion.html","searchKeys":["quaternion","inline fun MutableBuffer.Companion.quaternion(size: Int, init: (Int) -> Quaternion): MutableBuffer<Quaternion>","space.kscience.kmath.complex.quaternion"]},{"name":"object Companion : MemorySpec<Complex> ","description":"space.kscience.kmath.complex.Complex.Companion","location":"kmath-complex/space.kscience.kmath.complex/-complex/-companion/index.html","searchKeys":["Companion","object Companion : MemorySpec<Complex> ","space.kscience.kmath.complex.Complex.Companion"]},{"name":"object Companion : MemorySpec<Quaternion> ","description":"space.kscience.kmath.complex.Quaternion.Companion","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-companion/index.html","searchKeys":["Companion","object Companion : MemorySpec<Quaternion> ","space.kscience.kmath.complex.Quaternion.Companion"]},{"name":"object ComplexField : ExtendedField<Complex> , Norm<Complex, Complex> , NumbersAddOperations<Complex> , ScaleOperations<Complex> ","description":"space.kscience.kmath.complex.ComplexField","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/index.html","searchKeys":["ComplexField","object ComplexField : ExtendedField<Complex> , Norm<Complex, Complex> , NumbersAddOperations<Complex> , ScaleOperations<Complex> ","space.kscience.kmath.complex.ComplexField"]},{"name":"object QuaternionField : Field<Quaternion> , Norm<Quaternion, Quaternion> , PowerOperations<Quaternion> , ExponentialOperations<Quaternion> , NumbersAddOperations<Quaternion> , ScaleOperations<Quaternion> ","description":"space.kscience.kmath.complex.QuaternionField","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/index.html","searchKeys":["QuaternionField","object QuaternionField : Field<Quaternion> , Norm<Quaternion, Quaternion> , PowerOperations<Quaternion> , ExponentialOperations<Quaternion> , NumbersAddOperations<Quaternion> , ScaleOperations<Quaternion> ","space.kscience.kmath.complex.QuaternionField"]},{"name":"open operator override fun Complex.div(k: Number): Complex","description":"space.kscience.kmath.complex.ComplexField.div","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/div.html","searchKeys":["div","open operator override fun Complex.div(k: Number): Complex","space.kscience.kmath.complex.ComplexField.div"]},{"name":"open operator override fun Complex.unaryMinus(): Complex","description":"space.kscience.kmath.complex.ComplexField.unaryMinus","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Complex.unaryMinus(): Complex","space.kscience.kmath.complex.ComplexField.unaryMinus"]},{"name":"open operator override fun Number.minus(b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.minus","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/minus.html","searchKeys":["minus","open operator override fun Number.minus(b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.minus"]},{"name":"open operator override fun Number.plus(b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.plus","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/plus.html","searchKeys":["plus","open operator override fun Number.plus(b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.plus"]},{"name":"open operator override fun Number.times(b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.times","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/times.html","searchKeys":["times","open operator override fun Number.times(b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.times"]},{"name":"open operator override fun Quaternion.minus(b: Number): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.minus","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/minus.html","searchKeys":["minus","open operator override fun Quaternion.minus(b: Number): Quaternion","space.kscience.kmath.complex.QuaternionField.minus"]},{"name":"open operator override fun Quaternion.plus(b: Number): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.plus","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/plus.html","searchKeys":["plus","open operator override fun Quaternion.plus(b: Number): Quaternion","space.kscience.kmath.complex.QuaternionField.plus"]},{"name":"open operator override fun Quaternion.unaryMinus(): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.unaryMinus","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Quaternion.unaryMinus(): Quaternion","space.kscience.kmath.complex.QuaternionField.unaryMinus"]},{"name":"open override fun MemoryReader.read(offset: Int): Complex","description":"space.kscience.kmath.complex.Complex.Companion.read","location":"kmath-complex/space.kscience.kmath.complex/-complex/-companion/read.html","searchKeys":["read","open override fun MemoryReader.read(offset: Int): Complex","space.kscience.kmath.complex.Complex.Companion.read"]},{"name":"open override fun MemoryReader.read(offset: Int): Quaternion","description":"space.kscience.kmath.complex.Quaternion.Companion.read","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-companion/read.html","searchKeys":["read","open override fun MemoryReader.read(offset: Int): Quaternion","space.kscience.kmath.complex.Quaternion.Companion.read"]},{"name":"open override fun MemoryWriter.write(offset: Int, value: Complex)","description":"space.kscience.kmath.complex.Complex.Companion.write","location":"kmath-complex/space.kscience.kmath.complex/-complex/-companion/write.html","searchKeys":["write","open override fun MemoryWriter.write(offset: Int, value: Complex)","space.kscience.kmath.complex.Complex.Companion.write"]},{"name":"open override fun MemoryWriter.write(offset: Int, value: Quaternion)","description":"space.kscience.kmath.complex.Quaternion.Companion.write","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-companion/write.html","searchKeys":["write","open override fun MemoryWriter.write(offset: Int, value: Quaternion)","space.kscience.kmath.complex.Quaternion.Companion.write"]},{"name":"open override fun acos(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.acos","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/acos.html","searchKeys":["acos","open override fun acos(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.acos"]},{"name":"open override fun acos(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.acos","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/acos.html","searchKeys":["acos","open override fun acos(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.acos"]},{"name":"open override fun acosh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.acosh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.acosh"]},{"name":"open override fun acosh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.acosh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/acosh.html","searchKeys":["acosh","open override fun acosh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.acosh"]},{"name":"open override fun add(a: Complex, b: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.add","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/add.html","searchKeys":["add","open override fun add(a: Complex, b: Complex): Complex","space.kscience.kmath.complex.ComplexField.add"]},{"name":"open override fun add(a: Quaternion, b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.add","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/add.html","searchKeys":["add","open override fun add(a: Quaternion, b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.add"]},{"name":"open override fun asin(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.asin","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/asin.html","searchKeys":["asin","open override fun asin(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.asin"]},{"name":"open override fun asin(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.asin","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/asin.html","searchKeys":["asin","open override fun asin(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.asin"]},{"name":"open override fun asinh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.asinh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.asinh"]},{"name":"open override fun asinh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.asinh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/asinh.html","searchKeys":["asinh","open override fun asinh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.asinh"]},{"name":"open override fun atan(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.atan","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/atan.html","searchKeys":["atan","open override fun atan(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.atan"]},{"name":"open override fun atan(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.atan","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/atan.html","searchKeys":["atan","open override fun atan(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.atan"]},{"name":"open override fun atanh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.atanh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.atanh"]},{"name":"open override fun atanh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.atanh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/atanh.html","searchKeys":["atanh","open override fun atanh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.atanh"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Complex, right: Complex) -> Complex","description":"space.kscience.kmath.complex.ComplexField.binaryOperationFunction","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Complex, right: Complex) -> Complex","space.kscience.kmath.complex.ComplexField.binaryOperationFunction"]},{"name":"open override fun bindSymbolOrNull(value: String): Complex?","description":"space.kscience.kmath.complex.ComplexField.bindSymbolOrNull","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Complex?","space.kscience.kmath.complex.ComplexField.bindSymbolOrNull"]},{"name":"open override fun bindSymbolOrNull(value: String): Quaternion?","description":"space.kscience.kmath.complex.QuaternionField.bindSymbolOrNull","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): Quaternion?","space.kscience.kmath.complex.QuaternionField.bindSymbolOrNull"]},{"name":"open override fun cos(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.cos","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/cos.html","searchKeys":["cos","open override fun cos(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.cos"]},{"name":"open override fun cos(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.cos","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/cos.html","searchKeys":["cos","open override fun cos(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.cos"]},{"name":"open override fun cosh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.cosh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.cosh"]},{"name":"open override fun cosh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.cosh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/cosh.html","searchKeys":["cosh","open override fun cosh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.cosh"]},{"name":"open override fun divide(a: Complex, b: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.divide","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/divide.html","searchKeys":["divide","open override fun divide(a: Complex, b: Complex): Complex","space.kscience.kmath.complex.ComplexField.divide"]},{"name":"open override fun divide(a: Quaternion, b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.divide","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/divide.html","searchKeys":["divide","open override fun divide(a: Quaternion, b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.divide"]},{"name":"open override fun exp(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.exp","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/exp.html","searchKeys":["exp","open override fun exp(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.exp"]},{"name":"open override fun exp(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.exp","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/exp.html","searchKeys":["exp","open override fun exp(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.exp"]},{"name":"open override fun exp(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.exp","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/exp.html","searchKeys":["exp","open override fun exp(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.exp"]},{"name":"open override fun ln(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.ln","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/ln.html","searchKeys":["ln","open override fun ln(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.ln"]},{"name":"open override fun ln(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.ln","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/ln.html","searchKeys":["ln","open override fun ln(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.ln"]},{"name":"open override fun ln(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.ln","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/ln.html","searchKeys":["ln","open override fun ln(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.ln"]},{"name":"open override fun multiply(a: Complex, b: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.multiply","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: Complex, b: Complex): Complex","space.kscience.kmath.complex.ComplexField.multiply"]},{"name":"open override fun multiply(a: Quaternion, b: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.multiply","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: Quaternion, b: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.multiply"]},{"name":"open override fun norm(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.norm","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/norm.html","searchKeys":["norm","open override fun norm(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.norm"]},{"name":"open override fun norm(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.norm","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/norm.html","searchKeys":["norm","open override fun norm(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.norm"]},{"name":"open override fun number(value: Number): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.number","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/number.html","searchKeys":["number","open override fun number(value: Number): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.number"]},{"name":"open override fun number(value: Number): Complex","description":"space.kscience.kmath.complex.ComplexField.number","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/number.html","searchKeys":["number","open override fun number(value: Number): Complex","space.kscience.kmath.complex.ComplexField.number"]},{"name":"open override fun number(value: Number): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.number","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/number.html","searchKeys":["number","open override fun number(value: Number): Quaternion","space.kscience.kmath.complex.QuaternionField.number"]},{"name":"open override fun power(arg: Complex, pow: Number): Complex","description":"space.kscience.kmath.complex.ComplexField.power","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/power.html","searchKeys":["power","open override fun power(arg: Complex, pow: Number): Complex","space.kscience.kmath.complex.ComplexField.power"]},{"name":"open override fun power(arg: Quaternion, pow: Number): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.power","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/power.html","searchKeys":["power","open override fun power(arg: Quaternion, pow: Number): Quaternion","space.kscience.kmath.complex.QuaternionField.power"]},{"name":"open override fun power(arg: StructureND<Complex>, pow: Number): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.power","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/power.html","searchKeys":["power","open override fun power(arg: StructureND<Complex>, pow: Number): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.power"]},{"name":"open override fun scale(a: Complex, value: Double): Complex","description":"space.kscience.kmath.complex.ComplexField.scale","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/scale.html","searchKeys":["scale","open override fun scale(a: Complex, value: Double): Complex","space.kscience.kmath.complex.ComplexField.scale"]},{"name":"open override fun scale(a: Quaternion, value: Double): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.scale","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/scale.html","searchKeys":["scale","open override fun scale(a: Quaternion, value: Double): Quaternion","space.kscience.kmath.complex.QuaternionField.scale"]},{"name":"open override fun sin(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.sin","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/sin.html","searchKeys":["sin","open override fun sin(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.sin"]},{"name":"open override fun sin(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.sin","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/sin.html","searchKeys":["sin","open override fun sin(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.sin"]},{"name":"open override fun sinh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.sinh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.sinh"]},{"name":"open override fun sinh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.sinh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/sinh.html","searchKeys":["sinh","open override fun sinh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.sinh"]},{"name":"open override fun tan(arg: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.tan","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/tan.html","searchKeys":["tan","open override fun tan(arg: Complex): Complex","space.kscience.kmath.complex.ComplexField.tan"]},{"name":"open override fun tan(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.tan","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/tan.html","searchKeys":["tan","open override fun tan(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.tan"]},{"name":"open override fun tanh(arg: Quaternion): Quaternion","description":"space.kscience.kmath.complex.QuaternionField.tanh","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: Quaternion): Quaternion","space.kscience.kmath.complex.QuaternionField.tanh"]},{"name":"open override fun tanh(arg: StructureND<Complex>): BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.tanh","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/tanh.html","searchKeys":["tanh","open override fun tanh(arg: StructureND<Complex>): BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.tanh"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.complex.Complex.toString","location":"kmath-complex/space.kscience.kmath.complex/-complex/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.complex.Complex.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.complex.Quaternion.toString","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.complex.Quaternion.toString"]},{"name":"open override val objectSize: Int","description":"space.kscience.kmath.complex.Complex.Companion.objectSize","location":"kmath-complex/space.kscience.kmath.complex/-complex/-companion/object-size.html","searchKeys":["objectSize","open override val objectSize: Int","space.kscience.kmath.complex.Complex.Companion.objectSize"]},{"name":"open override val objectSize: Int","description":"space.kscience.kmath.complex.Quaternion.Companion.objectSize","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/-companion/object-size.html","searchKeys":["objectSize","open override val objectSize: Int","space.kscience.kmath.complex.Quaternion.Companion.objectSize"]},{"name":"open override val one: BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.one","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/one.html","searchKeys":["one","open override val one: BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.one"]},{"name":"open override val one: Complex","description":"space.kscience.kmath.complex.ComplexField.one","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/one.html","searchKeys":["one","open override val one: Complex","space.kscience.kmath.complex.ComplexField.one"]},{"name":"open override val one: Quaternion","description":"space.kscience.kmath.complex.QuaternionField.one","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/one.html","searchKeys":["one","open override val one: Quaternion","space.kscience.kmath.complex.QuaternionField.one"]},{"name":"open override val zero: BufferND<Complex>","description":"space.kscience.kmath.complex.ComplexFieldND.zero","location":"kmath-complex/space.kscience.kmath.complex/-complex-field-n-d/zero.html","searchKeys":["zero","open override val zero: BufferND<Complex>","space.kscience.kmath.complex.ComplexFieldND.zero"]},{"name":"open override val zero: Complex","description":"space.kscience.kmath.complex.ComplexField.zero","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/zero.html","searchKeys":["zero","open override val zero: Complex","space.kscience.kmath.complex.ComplexField.zero"]},{"name":"open override val zero: Quaternion","description":"space.kscience.kmath.complex.QuaternionField.zero","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/zero.html","searchKeys":["zero","open override val zero: Quaternion","space.kscience.kmath.complex.QuaternionField.zero"]},{"name":"operator fun Complex.minus(d: Double): Complex","description":"space.kscience.kmath.complex.ComplexField.minus","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/minus.html","searchKeys":["minus","operator fun Complex.minus(d: Double): Complex","space.kscience.kmath.complex.ComplexField.minus"]},{"name":"operator fun Complex.plus(d: Double): Complex","description":"space.kscience.kmath.complex.ComplexField.plus","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/plus.html","searchKeys":["plus","operator fun Complex.plus(d: Double): Complex","space.kscience.kmath.complex.ComplexField.plus"]},{"name":"operator fun Double.minus(c: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.minus","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/minus.html","searchKeys":["minus","operator fun Double.minus(c: Complex): Complex","space.kscience.kmath.complex.ComplexField.minus"]},{"name":"operator fun Double.plus(c: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.plus","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/plus.html","searchKeys":["plus","operator fun Double.plus(c: Complex): Complex","space.kscience.kmath.complex.ComplexField.plus"]},{"name":"operator fun Double.times(c: Complex): Complex","description":"space.kscience.kmath.complex.ComplexField.times","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/times.html","searchKeys":["times","operator fun Double.times(c: Complex): Complex","space.kscience.kmath.complex.ComplexField.times"]},{"name":"val Complex.Companion.algebra: ComplexField","description":"space.kscience.kmath.complex.algebra","location":"kmath-complex/space.kscience.kmath.complex/algebra.html","searchKeys":["algebra","val Complex.Companion.algebra: ComplexField","space.kscience.kmath.complex.algebra"]},{"name":"val Complex.conjugate: Complex","description":"space.kscience.kmath.complex.conjugate","location":"kmath-complex/space.kscience.kmath.complex/conjugate.html","searchKeys":["conjugate","val Complex.conjugate: Complex","space.kscience.kmath.complex.conjugate"]},{"name":"val Complex.r: Double","description":"space.kscience.kmath.complex.r","location":"kmath-complex/space.kscience.kmath.complex/r.html","searchKeys":["r","val Complex.r: Double","space.kscience.kmath.complex.r"]},{"name":"val Complex.reciprocal: Complex","description":"space.kscience.kmath.complex.reciprocal","location":"kmath-complex/space.kscience.kmath.complex/reciprocal.html","searchKeys":["reciprocal","val Complex.reciprocal: Complex","space.kscience.kmath.complex.reciprocal"]},{"name":"val Complex.theta: Double","description":"space.kscience.kmath.complex.theta","location":"kmath-complex/space.kscience.kmath.complex/theta.html","searchKeys":["theta","val Complex.theta: Double","space.kscience.kmath.complex.theta"]},{"name":"val Quaternion.conjugate: Quaternion","description":"space.kscience.kmath.complex.conjugate","location":"kmath-complex/space.kscience.kmath.complex/conjugate.html","searchKeys":["conjugate","val Quaternion.conjugate: Quaternion","space.kscience.kmath.complex.conjugate"]},{"name":"val Quaternion.r: Double","description":"space.kscience.kmath.complex.r","location":"kmath-complex/space.kscience.kmath.complex/r.html","searchKeys":["r","val Quaternion.r: Double","space.kscience.kmath.complex.r"]},{"name":"val Quaternion.reciprocal: Quaternion","description":"space.kscience.kmath.complex.reciprocal","location":"kmath-complex/space.kscience.kmath.complex/reciprocal.html","searchKeys":["reciprocal","val Quaternion.reciprocal: Quaternion","space.kscience.kmath.complex.reciprocal"]},{"name":"val i: Complex","description":"space.kscience.kmath.complex.ComplexField.i","location":"kmath-complex/space.kscience.kmath.complex/-complex-field/i.html","searchKeys":["i","val i: Complex","space.kscience.kmath.complex.ComplexField.i"]},{"name":"val i: Quaternion","description":"space.kscience.kmath.complex.QuaternionField.i","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/i.html","searchKeys":["i","val i: Quaternion","space.kscience.kmath.complex.QuaternionField.i"]},{"name":"val im: Double","description":"space.kscience.kmath.complex.Complex.im","location":"kmath-complex/space.kscience.kmath.complex/-complex/im.html","searchKeys":["im","val im: Double","space.kscience.kmath.complex.Complex.im"]},{"name":"val j: Quaternion","description":"space.kscience.kmath.complex.QuaternionField.j","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/j.html","searchKeys":["j","val j: Quaternion","space.kscience.kmath.complex.QuaternionField.j"]},{"name":"val k: Quaternion","description":"space.kscience.kmath.complex.QuaternionField.k","location":"kmath-complex/space.kscience.kmath.complex/-quaternion-field/k.html","searchKeys":["k","val k: Quaternion","space.kscience.kmath.complex.QuaternionField.k"]},{"name":"val re: Double","description":"space.kscience.kmath.complex.Complex.re","location":"kmath-complex/space.kscience.kmath.complex/-complex/re.html","searchKeys":["re","val re: Double","space.kscience.kmath.complex.Complex.re"]},{"name":"val w: Double","description":"space.kscience.kmath.complex.Quaternion.w","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/w.html","searchKeys":["w","val w: Double","space.kscience.kmath.complex.Quaternion.w"]},{"name":"val x: Double","description":"space.kscience.kmath.complex.Quaternion.x","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/x.html","searchKeys":["x","val x: Double","space.kscience.kmath.complex.Quaternion.x"]},{"name":"val y: Double","description":"space.kscience.kmath.complex.Quaternion.y","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/y.html","searchKeys":["y","val y: Double","space.kscience.kmath.complex.Quaternion.y"]},{"name":"val z: Double","description":"space.kscience.kmath.complex.Quaternion.z","location":"kmath-complex/space.kscience.kmath.complex/-quaternion/z.html","searchKeys":["z","val z: Double","space.kscience.kmath.complex.Quaternion.z"]},{"name":"abstract fun cumulative(arg: T): Double","description":"space.kscience.kmath.distributions.UnivariateDistribution.cumulative","location":"kmath-stat/space.kscience.kmath.distributions/-univariate-distribution/cumulative.html","searchKeys":["cumulative","abstract fun cumulative(arg: T): Double","space.kscience.kmath.distributions.UnivariateDistribution.cumulative"]},{"name":"abstract fun evaluateBlocking(data: Buffer<T>): R","description":"space.kscience.kmath.stat.BlockingStatistic.evaluateBlocking","location":"kmath-stat/space.kscience.kmath.stat/-blocking-statistic/evaluate-blocking.html","searchKeys":["evaluateBlocking","abstract fun evaluateBlocking(data: Buffer<T>): R","space.kscience.kmath.stat.BlockingStatistic.evaluateBlocking"]},{"name":"abstract fun fillBytes(array: ByteArray, fromIndex: Int = 0, toIndex: Int = array.size)","description":"space.kscience.kmath.stat.RandomGenerator.fillBytes","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/fill-bytes.html","searchKeys":["fillBytes","abstract fun fillBytes(array: ByteArray, fromIndex: Int = 0, toIndex: Int = array.size)","space.kscience.kmath.stat.RandomGenerator.fillBytes"]},{"name":"abstract fun fork(): RandomGenerator","description":"space.kscience.kmath.stat.RandomGenerator.fork","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/fork.html","searchKeys":["fork","abstract fun fork(): RandomGenerator","space.kscience.kmath.stat.RandomGenerator.fork"]},{"name":"abstract fun nextBoolean(): Boolean","description":"space.kscience.kmath.stat.RandomGenerator.nextBoolean","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-boolean.html","searchKeys":["nextBoolean","abstract fun nextBoolean(): Boolean","space.kscience.kmath.stat.RandomGenerator.nextBoolean"]},{"name":"abstract fun nextDouble(): Double","description":"space.kscience.kmath.stat.RandomGenerator.nextDouble","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-double.html","searchKeys":["nextDouble","abstract fun nextDouble(): Double","space.kscience.kmath.stat.RandomGenerator.nextDouble"]},{"name":"abstract fun nextInt(): Int","description":"space.kscience.kmath.stat.RandomGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-int.html","searchKeys":["nextInt","abstract fun nextInt(): Int","space.kscience.kmath.stat.RandomGenerator.nextInt"]},{"name":"abstract fun nextInt(until: Int): Int","description":"space.kscience.kmath.stat.RandomGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-int.html","searchKeys":["nextInt","abstract fun nextInt(until: Int): Int","space.kscience.kmath.stat.RandomGenerator.nextInt"]},{"name":"abstract fun nextLong(): Long","description":"space.kscience.kmath.stat.RandomGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-long.html","searchKeys":["nextLong","abstract fun nextLong(): Long","space.kscience.kmath.stat.RandomGenerator.nextLong"]},{"name":"abstract fun nextLong(until: Long): Long","description":"space.kscience.kmath.stat.RandomGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-long.html","searchKeys":["nextLong","abstract fun nextLong(until: Long): Long","space.kscience.kmath.stat.RandomGenerator.nextLong"]},{"name":"abstract fun probability(arg: T): Double","description":"space.kscience.kmath.distributions.Distribution.probability","location":"kmath-stat/space.kscience.kmath.distributions/-distribution/probability.html","searchKeys":["probability","abstract fun probability(arg: T): Double","space.kscience.kmath.distributions.Distribution.probability"]},{"name":"abstract fun sample(generator: RandomGenerator): Chain<T>","description":"space.kscience.kmath.stat.Sampler.sample","location":"kmath-stat/space.kscience.kmath.stat/-sampler/sample.html","searchKeys":["sample","abstract fun sample(generator: RandomGenerator): Chain<T>","space.kscience.kmath.stat.Sampler.sample"]},{"name":"abstract override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.BlockingDoubleSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-blocking-double-sampler/sample.html","searchKeys":["sample","abstract override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.BlockingDoubleSampler.sample"]},{"name":"abstract override fun sample(generator: RandomGenerator): Chain<T>","description":"space.kscience.kmath.distributions.Distribution.sample","location":"kmath-stat/space.kscience.kmath.distributions/-distribution/sample.html","searchKeys":["sample","abstract override fun sample(generator: RandomGenerator): Chain<T>","space.kscience.kmath.distributions.Distribution.sample"]},{"name":"abstract suspend fun composeIntermediate(first: I, second: I): I","description":"space.kscience.kmath.stat.ComposableStatistic.composeIntermediate","location":"kmath-stat/space.kscience.kmath.stat/-composable-statistic/compose-intermediate.html","searchKeys":["composeIntermediate","abstract suspend fun composeIntermediate(first: I, second: I): I","space.kscience.kmath.stat.ComposableStatistic.composeIntermediate"]},{"name":"abstract suspend fun computeIntermediate(data: Buffer<T>): I","description":"space.kscience.kmath.stat.ComposableStatistic.computeIntermediate","location":"kmath-stat/space.kscience.kmath.stat/-composable-statistic/compute-intermediate.html","searchKeys":["computeIntermediate","abstract suspend fun computeIntermediate(data: Buffer<T>): I","space.kscience.kmath.stat.ComposableStatistic.computeIntermediate"]},{"name":"abstract suspend fun evaluate(data: Buffer<T>): R","description":"space.kscience.kmath.stat.Statistic.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-statistic/evaluate.html","searchKeys":["evaluate","abstract suspend fun evaluate(data: Buffer<T>): R","space.kscience.kmath.stat.Statistic.evaluate"]},{"name":"abstract suspend fun toResult(intermediate: I): R","description":"space.kscience.kmath.stat.ComposableStatistic.toResult","location":"kmath-stat/space.kscience.kmath.stat/-composable-statistic/to-result.html","searchKeys":["toResult","abstract suspend fun toResult(intermediate: I): R","space.kscience.kmath.stat.ComposableStatistic.toResult"]},{"name":"class AhrensDieterExponentialSampler(mean: Double) : Sampler<Double> ","description":"space.kscience.kmath.samplers.AhrensDieterExponentialSampler","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-exponential-sampler/index.html","searchKeys":["AhrensDieterExponentialSampler","class AhrensDieterExponentialSampler(mean: Double) : Sampler<Double> ","space.kscience.kmath.samplers.AhrensDieterExponentialSampler"]},{"name":"class AhrensDieterMarsagliaTsangGammaSampler : Sampler<Double> ","description":"space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-marsaglia-tsang-gamma-sampler/index.html","searchKeys":["AhrensDieterMarsagliaTsangGammaSampler","class AhrensDieterMarsagliaTsangGammaSampler : Sampler<Double> ","space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler"]},{"name":"class BasicSampler<out T : Any>(chainBuilder: (RandomGenerator) -> Chain<T>) : Sampler<T> ","description":"space.kscience.kmath.stat.BasicSampler","location":"kmath-stat/space.kscience.kmath.stat/-basic-sampler/index.html","searchKeys":["BasicSampler","class BasicSampler<out T : Any>(chainBuilder: (RandomGenerator) -> Chain<T>) : Sampler<T> ","space.kscience.kmath.stat.BasicSampler"]},{"name":"class ConstantSampler<out T : Any>(value: T) : Sampler<T> ","description":"space.kscience.kmath.stat.ConstantSampler","location":"kmath-stat/space.kscience.kmath.stat/-constant-sampler/index.html","searchKeys":["ConstantSampler","class ConstantSampler<out T : Any>(value: T) : Sampler<T> ","space.kscience.kmath.stat.ConstantSampler"]},{"name":"class DefaultGenerator(random: Random) : RandomGenerator","description":"space.kscience.kmath.stat.DefaultGenerator","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/index.html","searchKeys":["DefaultGenerator","class DefaultGenerator(random: Random) : RandomGenerator","space.kscience.kmath.stat.DefaultGenerator"]},{"name":"class DistributionBuilder<T : Any>","description":"space.kscience.kmath.distributions.DistributionBuilder","location":"kmath-stat/space.kscience.kmath.distributions/-distribution-builder/index.html","searchKeys":["DistributionBuilder","class DistributionBuilder<T : Any>","space.kscience.kmath.distributions.DistributionBuilder"]},{"name":"class FactorizedDistribution<T>(distributions: Collection<NamedDistribution<T>>) : NamedDistribution<T> ","description":"space.kscience.kmath.distributions.FactorizedDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-factorized-distribution/index.html","searchKeys":["FactorizedDistribution","class FactorizedDistribution<T>(distributions: Collection<NamedDistribution<T>>) : NamedDistribution<T> ","space.kscience.kmath.distributions.FactorizedDistribution"]},{"name":"class GaussianSampler(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler) : BlockingDoubleSampler","description":"space.kscience.kmath.samplers.GaussianSampler","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/index.html","searchKeys":["GaussianSampler","class GaussianSampler(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler) : BlockingDoubleSampler","space.kscience.kmath.samplers.GaussianSampler"]},{"name":"class KempSmallMeanPoissonSampler : Sampler<Int> ","description":"space.kscience.kmath.samplers.KempSmallMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-kemp-small-mean-poisson-sampler/index.html","searchKeys":["KempSmallMeanPoissonSampler","class KempSmallMeanPoissonSampler : Sampler<Int> ","space.kscience.kmath.samplers.KempSmallMeanPoissonSampler"]},{"name":"class LargeMeanPoissonSampler(mean: Double) : Sampler<Int> ","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/index.html","searchKeys":["LargeMeanPoissonSampler","class LargeMeanPoissonSampler(mean: Double) : Sampler<Int> ","space.kscience.kmath.samplers.LargeMeanPoissonSampler"]},{"name":"class MCScope(coroutineContext: CoroutineContext, random: RandomGenerator)","description":"space.kscience.kmath.stat.MCScope","location":"kmath-stat/space.kscience.kmath.stat/-m-c-scope/index.html","searchKeys":["MCScope","class MCScope(coroutineContext: CoroutineContext, random: RandomGenerator)","space.kscience.kmath.stat.MCScope"]},{"name":"class Mean<T>(group: Ring<T>, division: (T, count: Int) -> T) : ComposableStatistic<T, Pair<T, Int>, T> , BlockingStatistic<T, T> ","description":"space.kscience.kmath.stat.Mean","location":"kmath-stat/space.kscience.kmath.stat/-mean/index.html","searchKeys":["Mean","class Mean<T>(group: Ring<T>, division: (T, count: Int) -> T) : ComposableStatistic<T, Pair<T, Int>, T> , BlockingStatistic<T, T> ","space.kscience.kmath.stat.Mean"]},{"name":"class Median<T>(comparator: Comparator<T>) : BlockingStatistic<T, T> ","description":"space.kscience.kmath.stat.Median","location":"kmath-stat/space.kscience.kmath.stat/-median/index.html","searchKeys":["Median","class Median<T>(comparator: Comparator<T>) : BlockingStatistic<T, T> ","space.kscience.kmath.stat.Median"]},{"name":"class NamedDistributionWrapper<T : Any>(name: String, distribution: Distribution<T>) : NamedDistribution<T> ","description":"space.kscience.kmath.distributions.NamedDistributionWrapper","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/index.html","searchKeys":["NamedDistributionWrapper","class NamedDistributionWrapper<T : Any>(name: String, distribution: Distribution<T>) : NamedDistribution<T> ","space.kscience.kmath.distributions.NamedDistributionWrapper"]},{"name":"class NormalDistribution(sampler: GaussianSampler) : UnivariateDistribution<Double> ","description":"space.kscience.kmath.distributions.NormalDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/index.html","searchKeys":["NormalDistribution","class NormalDistribution(sampler: GaussianSampler) : UnivariateDistribution<Double> ","space.kscience.kmath.distributions.NormalDistribution"]},{"name":"class RandomChain<out R>(generator: RandomGenerator, gen: suspend RandomGenerator.() -> R) : Chain<R> ","description":"space.kscience.kmath.stat.RandomChain","location":"kmath-stat/space.kscience.kmath.stat/-random-chain/index.html","searchKeys":["RandomChain","class RandomChain<out R>(generator: RandomGenerator, gen: suspend RandomGenerator.() -> R) : Chain<R> ","space.kscience.kmath.stat.RandomChain"]},{"name":"class RandomGeneratorProvider(generator: RandomGenerator) : UniformRandomProvider","description":"space.kscience.kmath.stat.RandomGeneratorProvider","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/index.html","searchKeys":["RandomGeneratorProvider","class RandomGeneratorProvider(generator: RandomGenerator) : UniformRandomProvider","space.kscience.kmath.stat.RandomGeneratorProvider"]},{"name":"class RandomSourceGenerator : RandomGenerator","description":"space.kscience.kmath.stat.RandomSourceGenerator","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/index.html","searchKeys":["RandomSourceGenerator","class RandomSourceGenerator : RandomGenerator","space.kscience.kmath.stat.RandomSourceGenerator"]},{"name":"class SamplerSpace<T : Any, out S : Group<T>, ScaleOperations<T>>(algebra: S) : Group<Sampler<T>> , ScaleOperations<Sampler<T>> ","description":"space.kscience.kmath.stat.SamplerSpace","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/index.html","searchKeys":["SamplerSpace","class SamplerSpace<T : Any, out S : Group<T>, ScaleOperations<T>>(algebra: S) : Group<Sampler<T>> , ScaleOperations<Sampler<T>> ","space.kscience.kmath.stat.SamplerSpace"]},{"name":"class SmallMeanPoissonSampler(mean: Double) : Sampler<Int> ","description":"space.kscience.kmath.samplers.SmallMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-small-mean-poisson-sampler/index.html","searchKeys":["SmallMeanPoissonSampler","class SmallMeanPoissonSampler(mean: Double) : Sampler<Int> ","space.kscience.kmath.samplers.SmallMeanPoissonSampler"]},{"name":"class UniformDistribution(range: ClosedFloatingPointRange<Double>) : UnivariateDistribution<Double> ","description":"space.kscience.kmath.stat.UniformDistribution","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/index.html","searchKeys":["UniformDistribution","class UniformDistribution(range: ClosedFloatingPointRange<Double>) : UnivariateDistribution<Double> ","space.kscience.kmath.stat.UniformDistribution"]},{"name":"class UniformDoubleChain(generator: RandomGenerator) : BlockingDoubleChain","description":"space.kscience.kmath.stat.UniformDoubleChain","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/index.html","searchKeys":["UniformDoubleChain","class UniformDoubleChain(generator: RandomGenerator) : BlockingDoubleChain","space.kscience.kmath.stat.UniformDoubleChain"]},{"name":"fun <R> RandomGenerator.chain(generator: suspend RandomGenerator.() -> R): RandomChain<R>","description":"space.kscience.kmath.stat.chain","location":"kmath-stat/space.kscience.kmath.stat/chain.html","searchKeys":["chain","fun <R> RandomGenerator.chain(generator: suspend RandomGenerator.() -> R): RandomChain<R>","space.kscience.kmath.stat.chain"]},{"name":"fun <T : Any> NamedDistributionWrapper(name: String, distribution: Distribution<T>)","description":"space.kscience.kmath.distributions.NamedDistributionWrapper.NamedDistributionWrapper","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/-named-distribution-wrapper.html","searchKeys":["NamedDistributionWrapper","fun <T : Any> NamedDistributionWrapper(name: String, distribution: Distribution<T>)","space.kscience.kmath.distributions.NamedDistributionWrapper.NamedDistributionWrapper"]},{"name":"fun <T : Any> Sampler<T>.sampleBuffer(generator: RandomGenerator, size: Int, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing): Chain<Buffer<T>>","description":"space.kscience.kmath.stat.sampleBuffer","location":"kmath-stat/space.kscience.kmath.stat/sample-buffer.html","searchKeys":["sampleBuffer","fun <T : Any> Sampler<T>.sampleBuffer(generator: RandomGenerator, size: Int, bufferFactory: BufferFactory<T> = Buffer.Companion::boxing): Chain<Buffer<T>>","space.kscience.kmath.stat.sampleBuffer"]},{"name":"fun <T : Comparable<T>> UnivariateDistribution<T>.integral(from: T, to: T): Double","description":"space.kscience.kmath.distributions.integral","location":"kmath-stat/space.kscience.kmath.distributions/integral.html","searchKeys":["integral","fun <T : Comparable<T>> UnivariateDistribution<T>.integral(from: T, to: T): Double","space.kscience.kmath.distributions.integral"]},{"name":"fun <T, I, R> ComposableStatistic<T, I, R>.flow(flow: Flow<Buffer<T>>, dispatcher: CoroutineDispatcher = Dispatchers.Default): Flow<R>","description":"space.kscience.kmath.stat.flow","location":"kmath-stat/space.kscience.kmath.stat/flow.html","searchKeys":["flow","fun <T, I, R> ComposableStatistic<T, I, R>.flow(flow: Flow<Buffer<T>>, dispatcher: CoroutineDispatcher = Dispatchers.Default): Flow<R>","space.kscience.kmath.stat.flow"]},{"name":"fun <T> FactorizedDistribution(distributions: Collection<NamedDistribution<T>>)","description":"space.kscience.kmath.distributions.FactorizedDistribution.FactorizedDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-factorized-distribution/-factorized-distribution.html","searchKeys":["FactorizedDistribution","fun <T> FactorizedDistribution(distributions: Collection<NamedDistribution<T>>)","space.kscience.kmath.distributions.FactorizedDistribution.FactorizedDistribution"]},{"name":"fun <T> Mean(group: Ring<T>, division: (T, count: Int) -> T)","description":"space.kscience.kmath.stat.Mean.Mean","location":"kmath-stat/space.kscience.kmath.stat/-mean/-mean.html","searchKeys":["Mean","fun <T> Mean(group: Ring<T>, division: (T, count: Int) -> T)","space.kscience.kmath.stat.Mean.Mean"]},{"name":"fun <T> Median(comparator: Comparator<T>)","description":"space.kscience.kmath.stat.Median.Median","location":"kmath-stat/space.kscience.kmath.stat/-median/-median.html","searchKeys":["Median","fun <T> Median(comparator: Comparator<T>)","space.kscience.kmath.stat.Median.Median"]},{"name":"fun <out R> RandomChain(generator: RandomGenerator, gen: suspend RandomGenerator.() -> R)","description":"space.kscience.kmath.stat.RandomChain.RandomChain","location":"kmath-stat/space.kscience.kmath.stat/-random-chain/-random-chain.html","searchKeys":["RandomChain","fun <out R> RandomChain(generator: RandomGenerator, gen: suspend RandomGenerator.() -> R)","space.kscience.kmath.stat.RandomChain.RandomChain"]},{"name":"fun <out S : Group<T>, ScaleOperations<T>> SamplerSpace(algebra: S)","description":"space.kscience.kmath.stat.SamplerSpace.SamplerSpace","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/-sampler-space.html","searchKeys":["SamplerSpace","fun <out S : Group<T>, ScaleOperations<T>> SamplerSpace(algebra: S)","space.kscience.kmath.stat.SamplerSpace.SamplerSpace"]},{"name":"fun <out T : Any> BasicSampler(chainBuilder: (RandomGenerator) -> Chain<T>)","description":"space.kscience.kmath.stat.BasicSampler.BasicSampler","location":"kmath-stat/space.kscience.kmath.stat/-basic-sampler/-basic-sampler.html","searchKeys":["BasicSampler","fun <out T : Any> BasicSampler(chainBuilder: (RandomGenerator) -> Chain<T>)","space.kscience.kmath.stat.BasicSampler.BasicSampler"]},{"name":"fun <out T : Any> ConstantSampler(value: T)","description":"space.kscience.kmath.stat.ConstantSampler.ConstantSampler","location":"kmath-stat/space.kscience.kmath.stat/-constant-sampler/-constant-sampler.html","searchKeys":["ConstantSampler","fun <out T : Any> ConstantSampler(value: T)","space.kscience.kmath.stat.ConstantSampler.ConstantSampler"]},{"name":"fun AhrensDieterExponentialSampler(mean: Double)","description":"space.kscience.kmath.samplers.AhrensDieterExponentialSampler.AhrensDieterExponentialSampler","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-exponential-sampler/-ahrens-dieter-exponential-sampler.html","searchKeys":["AhrensDieterExponentialSampler","fun AhrensDieterExponentialSampler(mean: Double)","space.kscience.kmath.samplers.AhrensDieterExponentialSampler.AhrensDieterExponentialSampler"]},{"name":"fun AliasMethodDiscreteSampler(probabilities: DoubleArray, alpha: Int = DEFAULT_ALPHA): Sampler<Int>","description":"space.kscience.kmath.samplers.AliasMethodDiscreteSampler.AliasMethodDiscreteSampler","location":"kmath-stat/space.kscience.kmath.samplers/-alias-method-discrete-sampler/-alias-method-discrete-sampler.html","searchKeys":["AliasMethodDiscreteSampler","fun AliasMethodDiscreteSampler(probabilities: DoubleArray, alpha: Int = DEFAULT_ALPHA): Sampler<Int>","space.kscience.kmath.samplers.AliasMethodDiscreteSampler.AliasMethodDiscreteSampler"]},{"name":"fun DefaultGenerator(random: Random = Random)","description":"space.kscience.kmath.stat.DefaultGenerator.DefaultGenerator","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/-default-generator.html","searchKeys":["DefaultGenerator","fun DefaultGenerator(random: Random = Random)","space.kscience.kmath.stat.DefaultGenerator.DefaultGenerator"]},{"name":"fun Distribution.Companion.uniform(range: ClosedFloatingPointRange<Double>): UniformDistribution","description":"space.kscience.kmath.stat.uniform","location":"kmath-stat/space.kscience.kmath.stat/uniform.html","searchKeys":["uniform","fun Distribution.Companion.uniform(range: ClosedFloatingPointRange<Double>): UniformDistribution","space.kscience.kmath.stat.uniform"]},{"name":"fun DistributionBuilder()","description":"space.kscience.kmath.distributions.DistributionBuilder.DistributionBuilder","location":"kmath-stat/space.kscience.kmath.distributions/-distribution-builder/-distribution-builder.html","searchKeys":["DistributionBuilder","fun DistributionBuilder()","space.kscience.kmath.distributions.DistributionBuilder.DistributionBuilder"]},{"name":"fun GaussianSampler(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler = BoxMullerSampler)","description":"space.kscience.kmath.samplers.GaussianSampler.GaussianSampler","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/-gaussian-sampler.html","searchKeys":["GaussianSampler","fun GaussianSampler(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler = BoxMullerSampler)","space.kscience.kmath.samplers.GaussianSampler.GaussianSampler"]},{"name":"fun KempSmallMeanPoissonSampler(mean: Double): KempSmallMeanPoissonSampler","description":"space.kscience.kmath.samplers.KempSmallMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-kemp-small-mean-poisson-sampler.html","searchKeys":["KempSmallMeanPoissonSampler","fun KempSmallMeanPoissonSampler(mean: Double): KempSmallMeanPoissonSampler","space.kscience.kmath.samplers.KempSmallMeanPoissonSampler"]},{"name":"fun LargeMeanPoissonSampler(mean: Double)","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler.LargeMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/-large-mean-poisson-sampler.html","searchKeys":["LargeMeanPoissonSampler","fun LargeMeanPoissonSampler(mean: Double)","space.kscience.kmath.samplers.LargeMeanPoissonSampler.LargeMeanPoissonSampler"]},{"name":"fun MCScope(coroutineContext: CoroutineContext, random: RandomGenerator)","description":"space.kscience.kmath.stat.MCScope.MCScope","location":"kmath-stat/space.kscience.kmath.stat/-m-c-scope/-m-c-scope.html","searchKeys":["MCScope","fun MCScope(coroutineContext: CoroutineContext, random: RandomGenerator)","space.kscience.kmath.stat.MCScope.MCScope"]},{"name":"fun NormalDistribution(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler = ZigguratNormalizedGaussianSampler)","description":"space.kscience.kmath.distributions.NormalDistribution.NormalDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/-normal-distribution.html","searchKeys":["NormalDistribution","fun NormalDistribution(mean: Double, standardDeviation: Double, normalized: NormalizedGaussianSampler = ZigguratNormalizedGaussianSampler)","space.kscience.kmath.distributions.NormalDistribution.NormalDistribution"]},{"name":"fun NormalDistribution(sampler: GaussianSampler)","description":"space.kscience.kmath.distributions.NormalDistribution.NormalDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/-normal-distribution.html","searchKeys":["NormalDistribution","fun NormalDistribution(sampler: GaussianSampler)","space.kscience.kmath.distributions.NormalDistribution.NormalDistribution"]},{"name":"fun PoissonSampler(mean: Double): Sampler<Int>","description":"space.kscience.kmath.samplers.PoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-poisson-sampler.html","searchKeys":["PoissonSampler","fun PoissonSampler(mean: Double): Sampler<Int>","space.kscience.kmath.samplers.PoissonSampler"]},{"name":"fun RandomGenerator.Companion.fromSource(source: RandomSource, seed: Long? = null): RandomSourceGenerator","description":"space.kscience.kmath.stat.fromSource","location":"kmath-stat/space.kscience.kmath.stat/from-source.html","searchKeys":["fromSource","fun RandomGenerator.Companion.fromSource(source: RandomSource, seed: Long? = null): RandomSourceGenerator","space.kscience.kmath.stat.fromSource"]},{"name":"fun RandomGenerator.Companion.mersenneTwister(seed: Long? = null): RandomSourceGenerator","description":"space.kscience.kmath.stat.mersenneTwister","location":"kmath-stat/space.kscience.kmath.stat/mersenne-twister.html","searchKeys":["mersenneTwister","fun RandomGenerator.Companion.mersenneTwister(seed: Long? = null): RandomSourceGenerator","space.kscience.kmath.stat.mersenneTwister"]},{"name":"fun RandomGenerator.asUniformRandomProvider(): UniformRandomProvider","description":"space.kscience.kmath.stat.asUniformRandomProvider","location":"kmath-stat/space.kscience.kmath.stat/as-uniform-random-provider.html","searchKeys":["asUniformRandomProvider","fun RandomGenerator.asUniformRandomProvider(): UniformRandomProvider","space.kscience.kmath.stat.asUniformRandomProvider"]},{"name":"fun RandomGeneratorProvider(generator: RandomGenerator)","description":"space.kscience.kmath.stat.RandomGeneratorProvider.RandomGeneratorProvider","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/-random-generator-provider.html","searchKeys":["RandomGeneratorProvider","fun RandomGeneratorProvider(generator: RandomGenerator)","space.kscience.kmath.stat.RandomGeneratorProvider.RandomGeneratorProvider"]},{"name":"fun Sampler<Double>.sampleBuffer(generator: RandomGenerator, size: Int): Chain<Buffer<Double>>","description":"space.kscience.kmath.stat.sampleBuffer","location":"kmath-stat/space.kscience.kmath.stat/sample-buffer.html","searchKeys":["sampleBuffer","fun Sampler<Double>.sampleBuffer(generator: RandomGenerator, size: Int): Chain<Buffer<Double>>","space.kscience.kmath.stat.sampleBuffer"]},{"name":"fun Sampler<Int>.sampleBuffer(generator: RandomGenerator, size: Int): Chain<Buffer<Int>>","description":"space.kscience.kmath.stat.sampleBuffer","location":"kmath-stat/space.kscience.kmath.stat/sample-buffer.html","searchKeys":["sampleBuffer","fun Sampler<Int>.sampleBuffer(generator: RandomGenerator, size: Int): Chain<Buffer<Int>>","space.kscience.kmath.stat.sampleBuffer"]},{"name":"fun SmallMeanPoissonSampler(mean: Double)","description":"space.kscience.kmath.samplers.SmallMeanPoissonSampler.SmallMeanPoissonSampler","location":"kmath-stat/space.kscience.kmath.samplers/-small-mean-poisson-sampler/-small-mean-poisson-sampler.html","searchKeys":["SmallMeanPoissonSampler","fun SmallMeanPoissonSampler(mean: Double)","space.kscience.kmath.samplers.SmallMeanPoissonSampler.SmallMeanPoissonSampler"]},{"name":"fun UniformDistribution(range: ClosedFloatingPointRange<Double>)","description":"space.kscience.kmath.stat.UniformDistribution.UniformDistribution","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/-uniform-distribution.html","searchKeys":["UniformDistribution","fun UniformDistribution(range: ClosedFloatingPointRange<Double>)","space.kscience.kmath.stat.UniformDistribution.UniformDistribution"]},{"name":"fun UniformDoubleChain(generator: RandomGenerator)","description":"space.kscience.kmath.stat.UniformDoubleChain.UniformDoubleChain","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/-uniform-double-chain.html","searchKeys":["UniformDoubleChain","fun UniformDoubleChain(generator: RandomGenerator)","space.kscience.kmath.stat.UniformDoubleChain.UniformDoubleChain"]},{"name":"fun default(seed: Long): DefaultGenerator","description":"space.kscience.kmath.stat.RandomGenerator.Companion.default","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/-companion/default.html","searchKeys":["default","fun default(seed: Long): DefaultGenerator","space.kscience.kmath.stat.RandomGenerator.Companion.default"]},{"name":"fun evaluate(buffer: Buffer<Double>): Double","description":"space.kscience.kmath.stat.Mean.Companion.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/evaluate.html","searchKeys":["evaluate","fun evaluate(buffer: Buffer<Double>): Double","space.kscience.kmath.stat.Mean.Companion.evaluate"]},{"name":"fun evaluate(buffer: Buffer<Int>): Int","description":"space.kscience.kmath.stat.Mean.Companion.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/evaluate.html","searchKeys":["evaluate","fun evaluate(buffer: Buffer<Int>): Int","space.kscience.kmath.stat.Mean.Companion.evaluate"]},{"name":"fun evaluate(buffer: Buffer<Long>): Long","description":"space.kscience.kmath.stat.Mean.Companion.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/evaluate.html","searchKeys":["evaluate","fun evaluate(buffer: Buffer<Long>): Long","space.kscience.kmath.stat.Mean.Companion.evaluate"]},{"name":"fun fun interface BlockingStatistic<in T, out R> : Statistic<T, R> ","description":"space.kscience.kmath.stat.BlockingStatistic","location":"kmath-stat/space.kscience.kmath.stat/-blocking-statistic/index.html","searchKeys":["BlockingStatistic","fun fun interface BlockingStatistic<in T, out R> : Statistic<T, R> ","space.kscience.kmath.stat.BlockingStatistic"]},{"name":"fun fun interface NormalizedGaussianSampler : BlockingDoubleSampler","description":"space.kscience.kmath.samplers.NormalizedGaussianSampler","location":"kmath-stat/space.kscience.kmath.samplers/-normalized-gaussian-sampler/index.html","searchKeys":["NormalizedGaussianSampler","fun fun interface NormalizedGaussianSampler : BlockingDoubleSampler","space.kscience.kmath.samplers.NormalizedGaussianSampler"]},{"name":"fun fun interface Sampler<out T : Any>","description":"space.kscience.kmath.stat.Sampler","location":"kmath-stat/space.kscience.kmath.stat/-sampler/index.html","searchKeys":["Sampler","fun fun interface Sampler<out T : Any>","space.kscience.kmath.stat.Sampler"]},{"name":"fun fun interface Statistic<in T, out R>","description":"space.kscience.kmath.stat.Statistic","location":"kmath-stat/space.kscience.kmath.stat/-statistic/index.html","searchKeys":["Statistic","fun fun interface Statistic<in T, out R>","space.kscience.kmath.stat.Statistic"]},{"name":"fun of(alpha: Double, theta: Double): Sampler<Double>","description":"space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.Companion.of","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-marsaglia-tsang-gamma-sampler/-companion/of.html","searchKeys":["of","fun of(alpha: Double, theta: Double): Sampler<Double>","space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.Companion.of"]},{"name":"infix fun String.to(distribution: Distribution<T>)","description":"space.kscience.kmath.distributions.DistributionBuilder.to","location":"kmath-stat/space.kscience.kmath.distributions/-distribution-builder/to.html","searchKeys":["to","infix fun String.to(distribution: Distribution<T>)","space.kscience.kmath.distributions.DistributionBuilder.to"]},{"name":"inline fun <T> MCScope.async(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend MCScope.() -> T): Deferred<T>","description":"space.kscience.kmath.stat.async","location":"kmath-stat/space.kscience.kmath.stat/async.html","searchKeys":["async","inline fun <T> MCScope.async(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend MCScope.() -> T): Deferred<T>","space.kscience.kmath.stat.async"]},{"name":"inline fun MCScope.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend MCScope.() -> Unit): Job","description":"space.kscience.kmath.stat.launch","location":"kmath-stat/space.kscience.kmath.stat/launch.html","searchKeys":["launch","inline fun MCScope.launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend MCScope.() -> Unit): Job","space.kscience.kmath.stat.launch"]},{"name":"inline suspend fun <T> mcScope(generator: RandomGenerator, block: MCScope.() -> T): T","description":"space.kscience.kmath.stat.mcScope","location":"kmath-stat/space.kscience.kmath.stat/mc-scope.html","searchKeys":["mcScope","inline suspend fun <T> mcScope(generator: RandomGenerator, block: MCScope.() -> T): T","space.kscience.kmath.stat.mcScope"]},{"name":"inline suspend fun <T> mcScope(seed: Long, block: MCScope.() -> T): T","description":"space.kscience.kmath.stat.mcScope","location":"kmath-stat/space.kscience.kmath.stat/mc-scope.html","searchKeys":["mcScope","inline suspend fun <T> mcScope(seed: Long, block: MCScope.() -> T): T","space.kscience.kmath.stat.mcScope"]},{"name":"interface BlockingDoubleSampler : Sampler<Double> ","description":"space.kscience.kmath.samplers.BlockingDoubleSampler","location":"kmath-stat/space.kscience.kmath.samplers/-blocking-double-sampler/index.html","searchKeys":["BlockingDoubleSampler","interface BlockingDoubleSampler : Sampler<Double> ","space.kscience.kmath.samplers.BlockingDoubleSampler"]},{"name":"interface ComposableStatistic<in T, I, out R> : Statistic<T, R> ","description":"space.kscience.kmath.stat.ComposableStatistic","location":"kmath-stat/space.kscience.kmath.stat/-composable-statistic/index.html","searchKeys":["ComposableStatistic","interface ComposableStatistic<in T, I, out R> : Statistic<T, R> ","space.kscience.kmath.stat.ComposableStatistic"]},{"name":"interface Distribution<T : Any> : Sampler<T> ","description":"space.kscience.kmath.distributions.Distribution","location":"kmath-stat/space.kscience.kmath.distributions/-distribution/index.html","searchKeys":["Distribution","interface Distribution<T : Any> : Sampler<T> ","space.kscience.kmath.distributions.Distribution"]},{"name":"interface NamedDistribution<T> : Distribution<Map<String, T>> ","description":"space.kscience.kmath.distributions.NamedDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution/index.html","searchKeys":["NamedDistribution","interface NamedDistribution<T> : Distribution<Map<String, T>> ","space.kscience.kmath.distributions.NamedDistribution"]},{"name":"interface RandomGenerator","description":"space.kscience.kmath.stat.RandomGenerator","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/index.html","searchKeys":["RandomGenerator","interface RandomGenerator","space.kscience.kmath.stat.RandomGenerator"]},{"name":"interface UnivariateDistribution<T : Comparable<T>> : Distribution<T> ","description":"space.kscience.kmath.distributions.UnivariateDistribution","location":"kmath-stat/space.kscience.kmath.distributions/-univariate-distribution/index.html","searchKeys":["UnivariateDistribution","interface UnivariateDistribution<T : Comparable<T>> : Distribution<T> ","space.kscience.kmath.distributions.UnivariateDistribution"]},{"name":"object BoxMullerSampler : NormalizedGaussianSampler","description":"space.kscience.kmath.samplers.BoxMullerSampler","location":"kmath-stat/space.kscience.kmath.samplers/-box-muller-sampler/index.html","searchKeys":["BoxMullerSampler","object BoxMullerSampler : NormalizedGaussianSampler","space.kscience.kmath.samplers.BoxMullerSampler"]},{"name":"object Companion","description":"space.kscience.kmath.distributions.Distribution.Companion","location":"kmath-stat/space.kscience.kmath.distributions/-distribution/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.distributions.Distribution.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.AhrensDieterExponentialSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-exponential-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.AhrensDieterExponentialSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-marsaglia-tsang-gamma-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.AliasMethodDiscreteSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-alias-method-discrete-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.AliasMethodDiscreteSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.GaussianSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.GaussianSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.LargeMeanPoissonSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.samplers.NormalizedGaussianSampler.Companion","location":"kmath-stat/space.kscience.kmath.samplers/-normalized-gaussian-sampler/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.samplers.NormalizedGaussianSampler.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.stat.Mean.Companion","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.stat.Mean.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.stat.Median.Companion","location":"kmath-stat/space.kscience.kmath.stat/-median/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.stat.Median.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.stat.RandomGenerator.Companion","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.stat.RandomGenerator.Companion"]},{"name":"object MarsagliaNormalizedGaussianSampler : NormalizedGaussianSampler","description":"space.kscience.kmath.samplers.MarsagliaNormalizedGaussianSampler","location":"kmath-stat/space.kscience.kmath.samplers/-marsaglia-normalized-gaussian-sampler/index.html","searchKeys":["MarsagliaNormalizedGaussianSampler","object MarsagliaNormalizedGaussianSampler : NormalizedGaussianSampler","space.kscience.kmath.samplers.MarsagliaNormalizedGaussianSampler"]},{"name":"object ZigguratNormalizedGaussianSampler : NormalizedGaussianSampler","description":"space.kscience.kmath.samplers.ZigguratNormalizedGaussianSampler","location":"kmath-stat/space.kscience.kmath.samplers/-ziggurat-normalized-gaussian-sampler/index.html","searchKeys":["ZigguratNormalizedGaussianSampler","object ZigguratNormalizedGaussianSampler : NormalizedGaussianSampler","space.kscience.kmath.samplers.ZigguratNormalizedGaussianSampler"]},{"name":"open class AliasMethodDiscreteSampler : Sampler<Int> ","description":"space.kscience.kmath.samplers.AliasMethodDiscreteSampler","location":"kmath-stat/space.kscience.kmath.samplers/-alias-method-discrete-sampler/index.html","searchKeys":["AliasMethodDiscreteSampler","open class AliasMethodDiscreteSampler : Sampler<Int> ","space.kscience.kmath.samplers.AliasMethodDiscreteSampler"]},{"name":"open fun nextBytes(size: Int): ByteArray","description":"space.kscience.kmath.stat.RandomGenerator.nextBytes","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-bytes.html","searchKeys":["nextBytes","open fun nextBytes(size: Int): ByteArray","space.kscience.kmath.stat.RandomGenerator.nextBytes"]},{"name":"open fun nextDoubleBuffer(size: Int): DoubleBuffer","description":"space.kscience.kmath.stat.RandomGenerator.nextDoubleBuffer","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/next-double-buffer.html","searchKeys":["nextDoubleBuffer","open fun nextDoubleBuffer(size: Int): DoubleBuffer","space.kscience.kmath.stat.RandomGenerator.nextDoubleBuffer"]},{"name":"open operator override fun Sampler<T>.unaryMinus(): Sampler<T>","description":"space.kscience.kmath.stat.SamplerSpace.unaryMinus","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Sampler<T>.unaryMinus(): Sampler<T>","space.kscience.kmath.stat.SamplerSpace.unaryMinus"]},{"name":"open override fun add(a: Sampler<T>, b: Sampler<T>): Sampler<T>","description":"space.kscience.kmath.stat.SamplerSpace.add","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/add.html","searchKeys":["add","open override fun add(a: Sampler<T>, b: Sampler<T>): Sampler<T>","space.kscience.kmath.stat.SamplerSpace.add"]},{"name":"open override fun cumulative(arg: Double): Double","description":"space.kscience.kmath.distributions.NormalDistribution.cumulative","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/cumulative.html","searchKeys":["cumulative","open override fun cumulative(arg: Double): Double","space.kscience.kmath.distributions.NormalDistribution.cumulative"]},{"name":"open override fun cumulative(arg: Double): Double","description":"space.kscience.kmath.stat.UniformDistribution.cumulative","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/cumulative.html","searchKeys":["cumulative","open override fun cumulative(arg: Double): Double","space.kscience.kmath.stat.UniformDistribution.cumulative"]},{"name":"open override fun evaluateBlocking(data: Buffer<T>): T","description":"space.kscience.kmath.stat.Mean.evaluateBlocking","location":"kmath-stat/space.kscience.kmath.stat/-mean/evaluate-blocking.html","searchKeys":["evaluateBlocking","open override fun evaluateBlocking(data: Buffer<T>): T","space.kscience.kmath.stat.Mean.evaluateBlocking"]},{"name":"open override fun evaluateBlocking(data: Buffer<T>): T","description":"space.kscience.kmath.stat.Median.evaluateBlocking","location":"kmath-stat/space.kscience.kmath.stat/-median/evaluate-blocking.html","searchKeys":["evaluateBlocking","open override fun evaluateBlocking(data: Buffer<T>): T","space.kscience.kmath.stat.Median.evaluateBlocking"]},{"name":"open override fun fillBytes(array: ByteArray, fromIndex: Int, toIndex: Int)","description":"space.kscience.kmath.stat.DefaultGenerator.fillBytes","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/fill-bytes.html","searchKeys":["fillBytes","open override fun fillBytes(array: ByteArray, fromIndex: Int, toIndex: Int)","space.kscience.kmath.stat.DefaultGenerator.fillBytes"]},{"name":"open override fun fillBytes(array: ByteArray, fromIndex: Int, toIndex: Int)","description":"space.kscience.kmath.stat.RandomSourceGenerator.fillBytes","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/fill-bytes.html","searchKeys":["fillBytes","open override fun fillBytes(array: ByteArray, fromIndex: Int, toIndex: Int)","space.kscience.kmath.stat.RandomSourceGenerator.fillBytes"]},{"name":"open override fun fork(): RandomGenerator","description":"space.kscience.kmath.stat.DefaultGenerator.fork","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/fork.html","searchKeys":["fork","open override fun fork(): RandomGenerator","space.kscience.kmath.stat.DefaultGenerator.fork"]},{"name":"open override fun fork(): RandomGenerator","description":"space.kscience.kmath.stat.RandomSourceGenerator.fork","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/fork.html","searchKeys":["fork","open override fun fork(): RandomGenerator","space.kscience.kmath.stat.RandomSourceGenerator.fork"]},{"name":"open override fun nextBoolean(): Boolean","description":"space.kscience.kmath.stat.DefaultGenerator.nextBoolean","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-boolean.html","searchKeys":["nextBoolean","open override fun nextBoolean(): Boolean","space.kscience.kmath.stat.DefaultGenerator.nextBoolean"]},{"name":"open override fun nextBoolean(): Boolean","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextBoolean","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-boolean.html","searchKeys":["nextBoolean","open override fun nextBoolean(): Boolean","space.kscience.kmath.stat.RandomGeneratorProvider.nextBoolean"]},{"name":"open override fun nextBoolean(): Boolean","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextBoolean","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-boolean.html","searchKeys":["nextBoolean","open override fun nextBoolean(): Boolean","space.kscience.kmath.stat.RandomSourceGenerator.nextBoolean"]},{"name":"open override fun nextBufferBlocking(size: Int): DoubleBuffer","description":"space.kscience.kmath.stat.UniformDoubleChain.nextBufferBlocking","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/next-buffer-blocking.html","searchKeys":["nextBufferBlocking","open override fun nextBufferBlocking(size: Int): DoubleBuffer","space.kscience.kmath.stat.UniformDoubleChain.nextBufferBlocking"]},{"name":"open override fun nextBytes(bytes: ByteArray)","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextBytes","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-bytes.html","searchKeys":["nextBytes","open override fun nextBytes(bytes: ByteArray)","space.kscience.kmath.stat.RandomGeneratorProvider.nextBytes"]},{"name":"open override fun nextBytes(bytes: ByteArray, start: Int, len: Int)","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextBytes","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-bytes.html","searchKeys":["nextBytes","open override fun nextBytes(bytes: ByteArray, start: Int, len: Int)","space.kscience.kmath.stat.RandomGeneratorProvider.nextBytes"]},{"name":"open override fun nextBytes(size: Int): ByteArray","description":"space.kscience.kmath.stat.DefaultGenerator.nextBytes","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-bytes.html","searchKeys":["nextBytes","open override fun nextBytes(size: Int): ByteArray","space.kscience.kmath.stat.DefaultGenerator.nextBytes"]},{"name":"open override fun nextDouble(): Double","description":"space.kscience.kmath.stat.DefaultGenerator.nextDouble","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-double.html","searchKeys":["nextDouble","open override fun nextDouble(): Double","space.kscience.kmath.stat.DefaultGenerator.nextDouble"]},{"name":"open override fun nextDouble(): Double","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextDouble","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-double.html","searchKeys":["nextDouble","open override fun nextDouble(): Double","space.kscience.kmath.stat.RandomGeneratorProvider.nextDouble"]},{"name":"open override fun nextDouble(): Double","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextDouble","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-double.html","searchKeys":["nextDouble","open override fun nextDouble(): Double","space.kscience.kmath.stat.RandomSourceGenerator.nextDouble"]},{"name":"open override fun nextFloat(): Float","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextFloat","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-float.html","searchKeys":["nextFloat","open override fun nextFloat(): Float","space.kscience.kmath.stat.RandomGeneratorProvider.nextFloat"]},{"name":"open override fun nextInt(): Int","description":"space.kscience.kmath.stat.DefaultGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-int.html","searchKeys":["nextInt","open override fun nextInt(): Int","space.kscience.kmath.stat.DefaultGenerator.nextInt"]},{"name":"open override fun nextInt(): Int","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-int.html","searchKeys":["nextInt","open override fun nextInt(): Int","space.kscience.kmath.stat.RandomGeneratorProvider.nextInt"]},{"name":"open override fun nextInt(): Int","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-int.html","searchKeys":["nextInt","open override fun nextInt(): Int","space.kscience.kmath.stat.RandomSourceGenerator.nextInt"]},{"name":"open override fun nextInt(n: Int): Int","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-int.html","searchKeys":["nextInt","open override fun nextInt(n: Int): Int","space.kscience.kmath.stat.RandomGeneratorProvider.nextInt"]},{"name":"open override fun nextInt(until: Int): Int","description":"space.kscience.kmath.stat.DefaultGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-int.html","searchKeys":["nextInt","open override fun nextInt(until: Int): Int","space.kscience.kmath.stat.DefaultGenerator.nextInt"]},{"name":"open override fun nextInt(until: Int): Int","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextInt","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-int.html","searchKeys":["nextInt","open override fun nextInt(until: Int): Int","space.kscience.kmath.stat.RandomSourceGenerator.nextInt"]},{"name":"open override fun nextLong(): Long","description":"space.kscience.kmath.stat.DefaultGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-long.html","searchKeys":["nextLong","open override fun nextLong(): Long","space.kscience.kmath.stat.DefaultGenerator.nextLong"]},{"name":"open override fun nextLong(): Long","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-long.html","searchKeys":["nextLong","open override fun nextLong(): Long","space.kscience.kmath.stat.RandomGeneratorProvider.nextLong"]},{"name":"open override fun nextLong(): Long","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-long.html","searchKeys":["nextLong","open override fun nextLong(): Long","space.kscience.kmath.stat.RandomSourceGenerator.nextLong"]},{"name":"open override fun nextLong(n: Long): Long","description":"space.kscience.kmath.stat.RandomGeneratorProvider.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/next-long.html","searchKeys":["nextLong","open override fun nextLong(n: Long): Long","space.kscience.kmath.stat.RandomGeneratorProvider.nextLong"]},{"name":"open override fun nextLong(until: Long): Long","description":"space.kscience.kmath.stat.DefaultGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/next-long.html","searchKeys":["nextLong","open override fun nextLong(until: Long): Long","space.kscience.kmath.stat.DefaultGenerator.nextLong"]},{"name":"open override fun nextLong(until: Long): Long","description":"space.kscience.kmath.stat.RandomSourceGenerator.nextLong","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/next-long.html","searchKeys":["nextLong","open override fun nextLong(until: Long): Long","space.kscience.kmath.stat.RandomSourceGenerator.nextLong"]},{"name":"open override fun probability(arg: Double): Double","description":"space.kscience.kmath.distributions.NormalDistribution.probability","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/probability.html","searchKeys":["probability","open override fun probability(arg: Double): Double","space.kscience.kmath.distributions.NormalDistribution.probability"]},{"name":"open override fun probability(arg: Double): Double","description":"space.kscience.kmath.stat.UniformDistribution.probability","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/probability.html","searchKeys":["probability","open override fun probability(arg: Double): Double","space.kscience.kmath.stat.UniformDistribution.probability"]},{"name":"open override fun probability(arg: Map<String, T>): Double","description":"space.kscience.kmath.distributions.FactorizedDistribution.probability","location":"kmath-stat/space.kscience.kmath.distributions/-factorized-distribution/probability.html","searchKeys":["probability","open override fun probability(arg: Map<String, T>): Double","space.kscience.kmath.distributions.FactorizedDistribution.probability"]},{"name":"open override fun probability(arg: Map<String, T>): Double","description":"space.kscience.kmath.distributions.NamedDistributionWrapper.probability","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/probability.html","searchKeys":["probability","open override fun probability(arg: Map<String, T>): Double","space.kscience.kmath.distributions.NamedDistributionWrapper.probability"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.AhrensDieterExponentialSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-exponential-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.AhrensDieterExponentialSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.BoxMullerSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-box-muller-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.BoxMullerSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.GaussianSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.GaussianSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.MarsagliaNormalizedGaussianSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-marsaglia-normalized-gaussian-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.MarsagliaNormalizedGaussianSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingDoubleChain","description":"space.kscience.kmath.samplers.ZigguratNormalizedGaussianSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-ziggurat-normalized-gaussian-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingDoubleChain","space.kscience.kmath.samplers.ZigguratNormalizedGaussianSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingIntChain","description":"space.kscience.kmath.samplers.KempSmallMeanPoissonSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-kemp-small-mean-poisson-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingIntChain","space.kscience.kmath.samplers.KempSmallMeanPoissonSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingIntChain","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingIntChain","space.kscience.kmath.samplers.LargeMeanPoissonSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): BlockingIntChain","description":"space.kscience.kmath.samplers.SmallMeanPoissonSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-small-mean-poisson-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): BlockingIntChain","space.kscience.kmath.samplers.SmallMeanPoissonSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Double>","description":"space.kscience.kmath.distributions.NormalDistribution.sample","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Double>","space.kscience.kmath.distributions.NormalDistribution.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Double>","description":"space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-marsaglia-tsang-gamma-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Double>","space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Double>","description":"space.kscience.kmath.stat.UniformDistribution.sample","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Double>","space.kscience.kmath.stat.UniformDistribution.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Int>","description":"space.kscience.kmath.samplers.AliasMethodDiscreteSampler.sample","location":"kmath-stat/space.kscience.kmath.samplers/-alias-method-discrete-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Int>","space.kscience.kmath.samplers.AliasMethodDiscreteSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Map<String, T>>","description":"space.kscience.kmath.distributions.FactorizedDistribution.sample","location":"kmath-stat/space.kscience.kmath.distributions/-factorized-distribution/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Map<String, T>>","space.kscience.kmath.distributions.FactorizedDistribution.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<Map<String, T>>","description":"space.kscience.kmath.distributions.NamedDistributionWrapper.sample","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<Map<String, T>>","space.kscience.kmath.distributions.NamedDistributionWrapper.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<T>","description":"space.kscience.kmath.stat.BasicSampler.sample","location":"kmath-stat/space.kscience.kmath.stat/-basic-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<T>","space.kscience.kmath.stat.BasicSampler.sample"]},{"name":"open override fun sample(generator: RandomGenerator): Chain<T>","description":"space.kscience.kmath.stat.ConstantSampler.sample","location":"kmath-stat/space.kscience.kmath.stat/-constant-sampler/sample.html","searchKeys":["sample","open override fun sample(generator: RandomGenerator): Chain<T>","space.kscience.kmath.stat.ConstantSampler.sample"]},{"name":"open override fun scale(a: Sampler<T>, value: Double): Sampler<T>","description":"space.kscience.kmath.stat.SamplerSpace.scale","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/scale.html","searchKeys":["scale","open override fun scale(a: Sampler<T>, value: Double): Sampler<T>","space.kscience.kmath.stat.SamplerSpace.scale"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-marsaglia-tsang-gamma-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.AhrensDieterMarsagliaTsangGammaSampler.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.AliasMethodDiscreteSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-alias-method-discrete-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.AliasMethodDiscreteSampler.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.GaussianSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.GaussianSampler.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.KempSmallMeanPoissonSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-kemp-small-mean-poisson-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.KempSmallMeanPoissonSampler.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.LargeMeanPoissonSampler.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.samplers.SmallMeanPoissonSampler.toString","location":"kmath-stat/space.kscience.kmath.samplers/-small-mean-poisson-sampler/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.samplers.SmallMeanPoissonSampler.toString"]},{"name":"open override val zero: Sampler<T>","description":"space.kscience.kmath.stat.SamplerSpace.zero","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/zero.html","searchKeys":["zero","open override val zero: Sampler<T>","space.kscience.kmath.stat.SamplerSpace.zero"]},{"name":"open suspend override fun composeIntermediate(first: Pair<T, Int>, second: Pair<T, Int>): Pair<T, Int>","description":"space.kscience.kmath.stat.Mean.composeIntermediate","location":"kmath-stat/space.kscience.kmath.stat/-mean/compose-intermediate.html","searchKeys":["composeIntermediate","open suspend override fun composeIntermediate(first: Pair<T, Int>, second: Pair<T, Int>): Pair<T, Int>","space.kscience.kmath.stat.Mean.composeIntermediate"]},{"name":"open suspend override fun computeIntermediate(data: Buffer<T>): Pair<T, Int>","description":"space.kscience.kmath.stat.Mean.computeIntermediate","location":"kmath-stat/space.kscience.kmath.stat/-mean/compute-intermediate.html","searchKeys":["computeIntermediate","open suspend override fun computeIntermediate(data: Buffer<T>): Pair<T, Int>","space.kscience.kmath.stat.Mean.computeIntermediate"]},{"name":"open suspend override fun evaluate(data: Buffer<T>): R","description":"space.kscience.kmath.stat.BlockingStatistic.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-blocking-statistic/evaluate.html","searchKeys":["evaluate","open suspend override fun evaluate(data: Buffer<T>): R","space.kscience.kmath.stat.BlockingStatistic.evaluate"]},{"name":"open suspend override fun evaluate(data: Buffer<T>): R","description":"space.kscience.kmath.stat.ComposableStatistic.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-composable-statistic/evaluate.html","searchKeys":["evaluate","open suspend override fun evaluate(data: Buffer<T>): R","space.kscience.kmath.stat.ComposableStatistic.evaluate"]},{"name":"open suspend override fun evaluate(data: Buffer<T>): T","description":"space.kscience.kmath.stat.Mean.evaluate","location":"kmath-stat/space.kscience.kmath.stat/-mean/evaluate.html","searchKeys":["evaluate","open suspend override fun evaluate(data: Buffer<T>): T","space.kscience.kmath.stat.Mean.evaluate"]},{"name":"open suspend override fun fork(): Chain<R>","description":"space.kscience.kmath.stat.RandomChain.fork","location":"kmath-stat/space.kscience.kmath.stat/-random-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): Chain<R>","space.kscience.kmath.stat.RandomChain.fork"]},{"name":"open suspend override fun fork(): UniformDoubleChain","description":"space.kscience.kmath.stat.UniformDoubleChain.fork","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/fork.html","searchKeys":["fork","open suspend override fun fork(): UniformDoubleChain","space.kscience.kmath.stat.UniformDoubleChain.fork"]},{"name":"open suspend override fun next(): R","description":"space.kscience.kmath.stat.RandomChain.next","location":"kmath-stat/space.kscience.kmath.stat/-random-chain/next.html","searchKeys":["next","open suspend override fun next(): R","space.kscience.kmath.stat.RandomChain.next"]},{"name":"open suspend override fun nextBuffer(size: Int): DoubleBuffer","description":"space.kscience.kmath.stat.UniformDoubleChain.nextBuffer","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/next-buffer.html","searchKeys":["nextBuffer","open suspend override fun nextBuffer(size: Int): DoubleBuffer","space.kscience.kmath.stat.UniformDoubleChain.nextBuffer"]},{"name":"open suspend override fun toResult(intermediate: Pair<T, Int>): T","description":"space.kscience.kmath.stat.Mean.toResult","location":"kmath-stat/space.kscience.kmath.stat/-mean/to-result.html","searchKeys":["toResult","open suspend override fun toResult(intermediate: Pair<T, Int>): T","space.kscience.kmath.stat.Mean.toResult"]},{"name":"operator fun <T, R> BlockingStatistic<T, R>.invoke(data: Buffer<T>): R","description":"space.kscience.kmath.stat.invoke","location":"kmath-stat/space.kscience.kmath.stat/invoke.html","searchKeys":["invoke","operator fun <T, R> BlockingStatistic<T, R>.invoke(data: Buffer<T>): R","space.kscience.kmath.stat.invoke"]},{"name":"suspend fun <T : Any> Sampler<T>.next(generator: RandomGenerator): T","description":"space.kscience.kmath.stat.next","location":"kmath-stat/space.kscience.kmath.stat/next.html","searchKeys":["next","suspend fun <T : Any> Sampler<T>.next(generator: RandomGenerator): T","space.kscience.kmath.stat.next"]},{"name":"suspend operator fun <T, R> Statistic<T, R>.invoke(data: Buffer<T>): R","description":"space.kscience.kmath.stat.invoke","location":"kmath-stat/space.kscience.kmath.stat/invoke.html","searchKeys":["invoke","suspend operator fun <T, R> Statistic<T, R>.invoke(data: Buffer<T>): R","space.kscience.kmath.stat.invoke"]},{"name":"val Double.Companion.mean: Mean<Double>","description":"space.kscience.kmath.stat.mean","location":"kmath-stat/space.kscience.kmath.stat/mean.html","searchKeys":["mean","val Double.Companion.mean: Mean<Double>","space.kscience.kmath.stat.mean"]},{"name":"val Int.Companion.mean: Mean<Int>","description":"space.kscience.kmath.stat.mean","location":"kmath-stat/space.kscience.kmath.stat/mean.html","searchKeys":["mean","val Int.Companion.mean: Mean<Int>","space.kscience.kmath.stat.mean"]},{"name":"val Long.Companion.mean: Mean<Long>","description":"space.kscience.kmath.stat.mean","location":"kmath-stat/space.kscience.kmath.stat/mean.html","searchKeys":["mean","val Long.Companion.mean: Mean<Long>","space.kscience.kmath.stat.mean"]},{"name":"val algebra: S","description":"space.kscience.kmath.stat.SamplerSpace.algebra","location":"kmath-stat/space.kscience.kmath.stat/-sampler-space/algebra.html","searchKeys":["algebra","val algebra: S","space.kscience.kmath.stat.SamplerSpace.algebra"]},{"name":"val chainBuilder: (RandomGenerator) -> Chain<T>","description":"space.kscience.kmath.stat.BasicSampler.chainBuilder","location":"kmath-stat/space.kscience.kmath.stat/-basic-sampler/chain-builder.html","searchKeys":["chainBuilder","val chainBuilder: (RandomGenerator) -> Chain<T>","space.kscience.kmath.stat.BasicSampler.chainBuilder"]},{"name":"val coroutineContext: CoroutineContext","description":"space.kscience.kmath.stat.MCScope.coroutineContext","location":"kmath-stat/space.kscience.kmath.stat/-m-c-scope/coroutine-context.html","searchKeys":["coroutineContext","val coroutineContext: CoroutineContext","space.kscience.kmath.stat.MCScope.coroutineContext"]},{"name":"val default: DefaultGenerator","description":"space.kscience.kmath.stat.RandomGenerator.Companion.default","location":"kmath-stat/space.kscience.kmath.stat/-random-generator/-companion/default.html","searchKeys":["default","val default: DefaultGenerator","space.kscience.kmath.stat.RandomGenerator.Companion.default"]},{"name":"val distribution: Distribution<T>","description":"space.kscience.kmath.distributions.NamedDistributionWrapper.distribution","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/distribution.html","searchKeys":["distribution","val distribution: Distribution<T>","space.kscience.kmath.distributions.NamedDistributionWrapper.distribution"]},{"name":"val distributions: Collection<NamedDistribution<T>>","description":"space.kscience.kmath.distributions.FactorizedDistribution.distributions","location":"kmath-stat/space.kscience.kmath.distributions/-factorized-distribution/distributions.html","searchKeys":["distributions","val distributions: Collection<NamedDistribution<T>>","space.kscience.kmath.distributions.FactorizedDistribution.distributions"]},{"name":"val double: Mean<Double>","description":"space.kscience.kmath.stat.Mean.Companion.double","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/double.html","searchKeys":["double","val double: Mean<Double>","space.kscience.kmath.stat.Mean.Companion.double"]},{"name":"val generator: RandomGenerator","description":"space.kscience.kmath.stat.RandomChain.generator","location":"kmath-stat/space.kscience.kmath.stat/-random-chain/generator.html","searchKeys":["generator","val generator: RandomGenerator","space.kscience.kmath.stat.RandomChain.generator"]},{"name":"val generator: RandomGenerator","description":"space.kscience.kmath.stat.RandomGeneratorProvider.generator","location":"kmath-stat/space.kscience.kmath.stat/-random-generator-provider/generator.html","searchKeys":["generator","val generator: RandomGenerator","space.kscience.kmath.stat.RandomGeneratorProvider.generator"]},{"name":"val generator: RandomGenerator","description":"space.kscience.kmath.stat.UniformDoubleChain.generator","location":"kmath-stat/space.kscience.kmath.stat/-uniform-double-chain/generator.html","searchKeys":["generator","val generator: RandomGenerator","space.kscience.kmath.stat.UniformDoubleChain.generator"]},{"name":"val int: Mean<Int>","description":"space.kscience.kmath.stat.Mean.Companion.int","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/int.html","searchKeys":["int","val int: Mean<Int>","space.kscience.kmath.stat.Mean.Companion.int"]},{"name":"val long: Mean<Long>","description":"space.kscience.kmath.stat.Mean.Companion.long","location":"kmath-stat/space.kscience.kmath.stat/-mean/-companion/long.html","searchKeys":["long","val long: Mean<Long>","space.kscience.kmath.stat.Mean.Companion.long"]},{"name":"val mean: Double","description":"space.kscience.kmath.samplers.AhrensDieterExponentialSampler.mean","location":"kmath-stat/space.kscience.kmath.samplers/-ahrens-dieter-exponential-sampler/mean.html","searchKeys":["mean","val mean: Double","space.kscience.kmath.samplers.AhrensDieterExponentialSampler.mean"]},{"name":"val mean: Double","description":"space.kscience.kmath.samplers.GaussianSampler.mean","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/mean.html","searchKeys":["mean","val mean: Double","space.kscience.kmath.samplers.GaussianSampler.mean"]},{"name":"val mean: Double","description":"space.kscience.kmath.samplers.LargeMeanPoissonSampler.mean","location":"kmath-stat/space.kscience.kmath.samplers/-large-mean-poisson-sampler/mean.html","searchKeys":["mean","val mean: Double","space.kscience.kmath.samplers.LargeMeanPoissonSampler.mean"]},{"name":"val mean: Double","description":"space.kscience.kmath.samplers.SmallMeanPoissonSampler.mean","location":"kmath-stat/space.kscience.kmath.samplers/-small-mean-poisson-sampler/mean.html","searchKeys":["mean","val mean: Double","space.kscience.kmath.samplers.SmallMeanPoissonSampler.mean"]},{"name":"val name: String","description":"space.kscience.kmath.distributions.NamedDistributionWrapper.name","location":"kmath-stat/space.kscience.kmath.distributions/-named-distribution-wrapper/name.html","searchKeys":["name","val name: String","space.kscience.kmath.distributions.NamedDistributionWrapper.name"]},{"name":"val random: Random","description":"space.kscience.kmath.stat.DefaultGenerator.random","location":"kmath-stat/space.kscience.kmath.stat/-default-generator/random.html","searchKeys":["random","val random: Random","space.kscience.kmath.stat.DefaultGenerator.random"]},{"name":"val random: RandomGenerator","description":"space.kscience.kmath.stat.MCScope.random","location":"kmath-stat/space.kscience.kmath.stat/-m-c-scope/random.html","searchKeys":["random","val random: RandomGenerator","space.kscience.kmath.stat.MCScope.random"]},{"name":"val range: ClosedFloatingPointRange<Double>","description":"space.kscience.kmath.stat.UniformDistribution.range","location":"kmath-stat/space.kscience.kmath.stat/-uniform-distribution/range.html","searchKeys":["range","val range: ClosedFloatingPointRange<Double>","space.kscience.kmath.stat.UniformDistribution.range"]},{"name":"val real: Median<Double>","description":"space.kscience.kmath.stat.Median.Companion.real","location":"kmath-stat/space.kscience.kmath.stat/-median/-companion/real.html","searchKeys":["real","val real: Median<Double>","space.kscience.kmath.stat.Median.Companion.real"]},{"name":"val sampler: GaussianSampler","description":"space.kscience.kmath.distributions.NormalDistribution.sampler","location":"kmath-stat/space.kscience.kmath.distributions/-normal-distribution/sampler.html","searchKeys":["sampler","val sampler: GaussianSampler","space.kscience.kmath.distributions.NormalDistribution.sampler"]},{"name":"val source: RandomSource","description":"space.kscience.kmath.stat.RandomSourceGenerator.source","location":"kmath-stat/space.kscience.kmath.stat/-random-source-generator/source.html","searchKeys":["source","val source: RandomSource","space.kscience.kmath.stat.RandomSourceGenerator.source"]},{"name":"val standardDeviation: Double","description":"space.kscience.kmath.samplers.GaussianSampler.standardDeviation","location":"kmath-stat/space.kscience.kmath.samplers/-gaussian-sampler/standard-deviation.html","searchKeys":["standardDeviation","val standardDeviation: Double","space.kscience.kmath.samplers.GaussianSampler.standardDeviation"]},{"name":"val value: T","description":"space.kscience.kmath.stat.ConstantSampler.value","location":"kmath-stat/space.kscience.kmath.stat/-constant-sampler/value.html","searchKeys":["value","val value: T","space.kscience.kmath.stat.ConstantSampler.value"]},{"name":"INFINITY()","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-i-n-f-i-n-i-t-y/index.html","searchKeys":["INFINITY","INFINITY()","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY"]},{"name":"SMALL_PI()","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-s-m-a-l-l_-p-i/index.html","searchKeys":["SMALL_PI","SMALL_PI()","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI"]},{"name":"abstract class Binary(operations: Collection<String>?) : FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.Binary","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary/index.html","searchKeys":["Binary","abstract class Binary(operations: Collection<String>?) : FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.Binary"]},{"name":"abstract class Unary(operations: Collection<String>?) : FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.Unary","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary/index.html","searchKeys":["Unary","abstract class Unary(operations: Collection<String>?) : FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.Unary"]},{"name":"abstract fun perform(node: MathSyntax)","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.PostProcessPhase.perform","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/-post-process-phase/perform.html","searchKeys":["perform","abstract fun perform(node: MathSyntax)","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.PostProcessPhase.perform"]},{"name":"abstract fun render(mst: MST): MathSyntax","description":"space.kscience.kmath.ast.rendering.MathRenderer.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-renderer/render.html","searchKeys":["render","abstract fun render(mst: MST): MathSyntax","space.kscience.kmath.ast.rendering.MathRenderer.render"]},{"name":"abstract fun render(node: MathSyntax, output: Appendable)","description":"space.kscience.kmath.ast.rendering.SyntaxRenderer.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-syntax-renderer/render.html","searchKeys":["render","abstract fun render(node: MathSyntax, output: Appendable)","space.kscience.kmath.ast.rendering.SyntaxRenderer.render"]},{"name":"abstract fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer.RenderFeature.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/-render-feature/render.html","searchKeys":["render","abstract fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.FeaturedMathRenderer.RenderFeature.render"]},{"name":"abstract val left: MathSyntax","description":"space.kscience.kmath.ast.rendering.BinarySyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-syntax/left.html","searchKeys":["left","abstract val left: MathSyntax","space.kscience.kmath.ast.rendering.BinarySyntax.left"]},{"name":"abstract val operand: MathSyntax","description":"space.kscience.kmath.ast.rendering.UnarySyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-syntax/operand.html","searchKeys":["operand","abstract val operand: MathSyntax","space.kscience.kmath.ast.rendering.UnarySyntax.operand"]},{"name":"abstract val operation: String","description":"space.kscience.kmath.ast.rendering.OperationSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operation-syntax/operation.html","searchKeys":["operation","abstract val operation: String","space.kscience.kmath.ast.rendering.OperationSyntax.operation"]},{"name":"abstract val right: MathSyntax","description":"space.kscience.kmath.ast.rendering.BinarySyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-syntax/right.html","searchKeys":["right","abstract val right: MathSyntax","space.kscience.kmath.ast.rendering.BinarySyntax.right"]},{"name":"class BinaryMinus(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.BinaryMinus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus/index.html","searchKeys":["BinaryMinus","class BinaryMinus(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.BinaryMinus"]},{"name":"class BinaryOperator(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.BinaryOperator","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator/index.html","searchKeys":["BinaryOperator","class BinaryOperator(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.BinaryOperator"]},{"name":"class BinaryPlus(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.BinaryPlus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus/index.html","searchKeys":["BinaryPlus","class BinaryPlus(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.BinaryPlus"]},{"name":"class Exponent(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.Exponent","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent/index.html","searchKeys":["Exponent","class Exponent(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.Exponent"]},{"name":"class Fraction(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.Fraction","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction/index.html","searchKeys":["Fraction","class Fraction(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.Fraction"]},{"name":"class InverseHyperbolicOperations(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.InverseHyperbolicOperations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-hyperbolic-operations/index.html","searchKeys":["InverseHyperbolicOperations","class InverseHyperbolicOperations(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.InverseHyperbolicOperations"]},{"name":"class InverseTrigonometricOperations(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.InverseTrigonometricOperations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-trigonometric-operations/index.html","searchKeys":["InverseTrigonometricOperations","class InverseTrigonometricOperations(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.InverseTrigonometricOperations"]},{"name":"class Multiplication(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.Multiplication","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication/index.html","searchKeys":["Multiplication","class Multiplication(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.Multiplication"]},{"name":"class Power(operations: Collection<String>?) : Binary","description":"space.kscience.kmath.ast.rendering.Power","location":"kmath-ast/space.kscience.kmath.ast.rendering/-power/index.html","searchKeys":["Power","class Power(operations: Collection<String>?) : Binary","space.kscience.kmath.ast.rendering.Power"]},{"name":"class PrettyPrintFloats(types: Set<KClass<out Number>>) : FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/index.html","searchKeys":["PrettyPrintFloats","class PrettyPrintFloats(types: Set<KClass<out Number>>) : FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.PrettyPrintFloats"]},{"name":"class PrettyPrintIntegers(types: Set<KClass<out Number>>) : FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/index.html","searchKeys":["PrettyPrintIntegers","class PrettyPrintIntegers(types: Set<KClass<out Number>>) : FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.PrettyPrintIntegers"]},{"name":"class PrettyPrintPi(symbols: Set<String>) : FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/index.html","searchKeys":["PrettyPrintPi","class PrettyPrintPi(symbols: Set<String>) : FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.PrettyPrintPi"]},{"name":"class SimplifyParentheses(precedenceFunction: (MathSyntax) -> Int) : FeaturedMathRendererWithPostProcess.PostProcessPhase","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/index.html","searchKeys":["SimplifyParentheses","class SimplifyParentheses(precedenceFunction: (MathSyntax) -> Int) : FeaturedMathRendererWithPostProcess.PostProcessPhase","space.kscience.kmath.ast.rendering.SimplifyParentheses"]},{"name":"class SquareRoot(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.SquareRoot","location":"kmath-ast/space.kscience.kmath.ast.rendering/-square-root/index.html","searchKeys":["SquareRoot","class SquareRoot(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.SquareRoot"]},{"name":"class UnaryMinus(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.UnaryMinus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus/index.html","searchKeys":["UnaryMinus","class UnaryMinus(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.UnaryMinus"]},{"name":"class UnaryOperator(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.UnaryOperator","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator/index.html","searchKeys":["UnaryOperator","class UnaryOperator(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.UnaryOperator"]},{"name":"class UnaryPlus(operations: Collection<String>?) : Unary","description":"space.kscience.kmath.ast.rendering.UnaryPlus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus/index.html","searchKeys":["UnaryPlus","class UnaryPlus(operations: Collection<String>?) : Unary","space.kscience.kmath.ast.rendering.UnaryPlus"]},{"name":"data class BinaryMinusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.BinaryMinusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus-syntax/index.html","searchKeys":["BinaryMinusSyntax","data class BinaryMinusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.BinaryMinusSyntax"]},{"name":"data class BinaryOperatorSyntax(operation: String, prefix: MathSyntax, left: MathSyntax, right: MathSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/index.html","searchKeys":["BinaryOperatorSyntax","data class BinaryOperatorSyntax(operation: String, prefix: MathSyntax, left: MathSyntax, right: MathSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax"]},{"name":"data class BinaryPlusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.BinaryPlusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus-syntax/index.html","searchKeys":["BinaryPlusSyntax","data class BinaryPlusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.BinaryPlusSyntax"]},{"name":"data class ExponentSyntax(operation: String, operand: OperandSyntax, useOperatorForm: Boolean) : UnarySyntax","description":"space.kscience.kmath.ast.rendering.ExponentSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent-syntax/index.html","searchKeys":["ExponentSyntax","data class ExponentSyntax(operation: String, operand: OperandSyntax, useOperatorForm: Boolean) : UnarySyntax","space.kscience.kmath.ast.rendering.ExponentSyntax"]},{"name":"data class FractionSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, infix: Boolean) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.FractionSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/index.html","searchKeys":["FractionSyntax","data class FractionSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, infix: Boolean) : BinarySyntax","space.kscience.kmath.ast.rendering.FractionSyntax"]},{"name":"data class MultiplicationSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, times: Boolean) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/index.html","searchKeys":["MultiplicationSyntax","data class MultiplicationSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, times: Boolean) : BinarySyntax","space.kscience.kmath.ast.rendering.MultiplicationSyntax"]},{"name":"data class NumberSyntax(string: String) : TerminalSyntax","description":"space.kscience.kmath.ast.rendering.NumberSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-number-syntax/index.html","searchKeys":["NumberSyntax","data class NumberSyntax(string: String) : TerminalSyntax","space.kscience.kmath.ast.rendering.NumberSyntax"]},{"name":"data class OperandSyntax(operand: MathSyntax, parentheses: Boolean) : MathSyntax","description":"space.kscience.kmath.ast.rendering.OperandSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operand-syntax/index.html","searchKeys":["OperandSyntax","data class OperandSyntax(operand: MathSyntax, parentheses: Boolean) : MathSyntax","space.kscience.kmath.ast.rendering.OperandSyntax"]},{"name":"data class OperatorNameSyntax(name: String) : TerminalSyntax","description":"space.kscience.kmath.ast.rendering.OperatorNameSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operator-name-syntax/index.html","searchKeys":["OperatorNameSyntax","data class OperatorNameSyntax(name: String) : TerminalSyntax","space.kscience.kmath.ast.rendering.OperatorNameSyntax"]},{"name":"data class RadicalSyntax(operation: String, operand: MathSyntax) : UnarySyntax","description":"space.kscience.kmath.ast.rendering.RadicalSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-syntax/index.html","searchKeys":["RadicalSyntax","data class RadicalSyntax(operation: String, operand: MathSyntax) : UnarySyntax","space.kscience.kmath.ast.rendering.RadicalSyntax"]},{"name":"data class RadicalWithIndexSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-with-index-syntax/index.html","searchKeys":["RadicalWithIndexSyntax","data class RadicalWithIndexSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax"]},{"name":"data class SpecialSymbolSyntax(kind: SpecialSymbolSyntax.Kind) : TerminalSyntax","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/index.html","searchKeys":["SpecialSymbolSyntax","data class SpecialSymbolSyntax(kind: SpecialSymbolSyntax.Kind) : TerminalSyntax","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax"]},{"name":"data class SubscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.SubscriptSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-subscript-syntax/index.html","searchKeys":["SubscriptSyntax","data class SubscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.SubscriptSyntax"]},{"name":"data class SuperscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","description":"space.kscience.kmath.ast.rendering.SuperscriptSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-superscript-syntax/index.html","searchKeys":["SuperscriptSyntax","data class SuperscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax) : BinarySyntax","space.kscience.kmath.ast.rendering.SuperscriptSyntax"]},{"name":"data class SymbolSyntax(string: String) : TerminalSyntax","description":"space.kscience.kmath.ast.rendering.SymbolSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-symbol-syntax/index.html","searchKeys":["SymbolSyntax","data class SymbolSyntax(string: String) : TerminalSyntax","space.kscience.kmath.ast.rendering.SymbolSyntax"]},{"name":"data class UnaryMinusSyntax(operation: String, operand: OperandSyntax) : UnarySyntax","description":"space.kscience.kmath.ast.rendering.UnaryMinusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus-syntax/index.html","searchKeys":["UnaryMinusSyntax","data class UnaryMinusSyntax(operation: String, operand: OperandSyntax) : UnarySyntax","space.kscience.kmath.ast.rendering.UnaryMinusSyntax"]},{"name":"data class UnaryOperatorSyntax(operation: String, prefix: MathSyntax, operand: OperandSyntax) : UnarySyntax","description":"space.kscience.kmath.ast.rendering.UnaryOperatorSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator-syntax/index.html","searchKeys":["UnaryOperatorSyntax","data class UnaryOperatorSyntax(operation: String, prefix: MathSyntax, operand: OperandSyntax) : UnarySyntax","space.kscience.kmath.ast.rendering.UnaryOperatorSyntax"]},{"name":"data class UnaryPlusSyntax(operation: String, operand: OperandSyntax) : UnarySyntax","description":"space.kscience.kmath.ast.rendering.UnaryPlusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus-syntax/index.html","searchKeys":["UnaryPlusSyntax","data class UnaryPlusSyntax(operation: String, operand: OperandSyntax) : UnarySyntax","space.kscience.kmath.ast.rendering.UnaryPlusSyntax"]},{"name":"enum Kind : Enum<SpecialSymbolSyntax.Kind> ","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/index.html","searchKeys":["Kind","enum Kind : Enum<SpecialSymbolSyntax.Kind> ","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind"]},{"name":"fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, arguments: Map<<ERROR CLASS>, Double>): Double","description":"space.kscience.kmath.wasm.compile","location":"kmath-ast/space.kscience.kmath.wasm/compile.html","searchKeys":["compile","fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, arguments: Map<<ERROR CLASS>, Double>): Double","space.kscience.kmath.wasm.compile"]},{"name":"fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, arguments: Map<<ERROR CLASS>, Int>): Int","description":"space.kscience.kmath.wasm.compile","location":"kmath-ast/space.kscience.kmath.wasm/compile.html","searchKeys":["compile","fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, arguments: Map<<ERROR CLASS>, Int>): Int","space.kscience.kmath.wasm.compile"]},{"name":"fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, vararg arguments: Pair<<ERROR CLASS>, Double>): Double","description":"space.kscience.kmath.wasm.compile","location":"kmath-ast/space.kscience.kmath.wasm/compile.html","searchKeys":["compile","fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, vararg arguments: Pair<<ERROR CLASS>, Double>): Double","space.kscience.kmath.wasm.compile"]},{"name":"fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, vararg arguments: Pair<<ERROR CLASS>, Int>): Int","description":"space.kscience.kmath.wasm.compile","location":"kmath-ast/space.kscience.kmath.wasm/compile.html","searchKeys":["compile","fun <ERROR CLASS>.compile(algebra: <ERROR CLASS>, vararg arguments: Pair<<ERROR CLASS>, Int>): Int","space.kscience.kmath.wasm.compile"]},{"name":"fun <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS>): <ERROR CLASS><Double>","description":"space.kscience.kmath.wasm.compileToExpression","location":"kmath-ast/space.kscience.kmath.wasm/compile-to-expression.html","searchKeys":["compileToExpression","fun <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS>): <ERROR CLASS><Double>","space.kscience.kmath.wasm.compileToExpression"]},{"name":"fun <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS>): <ERROR CLASS><Int>","description":"space.kscience.kmath.wasm.compileToExpression","location":"kmath-ast/space.kscience.kmath.wasm/compile-to-expression.html","searchKeys":["compileToExpression","fun <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS>): <ERROR CLASS><Int>","space.kscience.kmath.wasm.compileToExpression"]},{"name":"fun <ERROR CLASS>.expression(mst: <ERROR CLASS>): <ERROR CLASS><Double>","description":"space.kscience.kmath.wasm.expression","location":"kmath-ast/space.kscience.kmath.wasm/expression.html","searchKeys":["expression","fun <ERROR CLASS>.expression(mst: <ERROR CLASS>): <ERROR CLASS><Double>","space.kscience.kmath.wasm.expression"]},{"name":"fun <ERROR CLASS>.expression(mst: <ERROR CLASS>): <ERROR CLASS><Int>","description":"space.kscience.kmath.wasm.expression","location":"kmath-ast/space.kscience.kmath.wasm/expression.html","searchKeys":["expression","fun <ERROR CLASS>.expression(mst: <ERROR CLASS>): <ERROR CLASS><Int>","space.kscience.kmath.wasm.expression"]},{"name":"fun <T : Any> <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS><T>): <ERROR CLASS><T>","description":"space.kscience.kmath.estree.compileToExpression","location":"kmath-ast/space.kscience.kmath.estree/compile-to-expression.html","searchKeys":["compileToExpression","fun <T : Any> <ERROR CLASS>.compileToExpression(algebra: <ERROR CLASS><T>): <ERROR CLASS><T>","space.kscience.kmath.estree.compileToExpression"]},{"name":"fun Binary(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Binary.Binary","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary/-binary.html","searchKeys":["Binary","fun Binary(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Binary.Binary"]},{"name":"fun BinaryMinus(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.BinaryMinus.BinaryMinus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus/-binary-minus.html","searchKeys":["BinaryMinus","fun BinaryMinus(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.BinaryMinus.BinaryMinus"]},{"name":"fun BinaryMinusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax)","description":"space.kscience.kmath.ast.rendering.BinaryMinusSyntax.BinaryMinusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus-syntax/-binary-minus-syntax.html","searchKeys":["BinaryMinusSyntax","fun BinaryMinusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax)","space.kscience.kmath.ast.rendering.BinaryMinusSyntax.BinaryMinusSyntax"]},{"name":"fun BinaryOperator(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.BinaryOperator.BinaryOperator","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator/-binary-operator.html","searchKeys":["BinaryOperator","fun BinaryOperator(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.BinaryOperator.BinaryOperator"]},{"name":"fun BinaryOperatorSyntax(operation: String, prefix: MathSyntax, left: MathSyntax, right: MathSyntax)","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.BinaryOperatorSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/-binary-operator-syntax.html","searchKeys":["BinaryOperatorSyntax","fun BinaryOperatorSyntax(operation: String, prefix: MathSyntax, left: MathSyntax, right: MathSyntax)","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.BinaryOperatorSyntax"]},{"name":"fun BinaryPlus(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.BinaryPlus.BinaryPlus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus/-binary-plus.html","searchKeys":["BinaryPlus","fun BinaryPlus(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.BinaryPlus.BinaryPlus"]},{"name":"fun BinaryPlusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax)","description":"space.kscience.kmath.ast.rendering.BinaryPlusSyntax.BinaryPlusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus-syntax/-binary-plus-syntax.html","searchKeys":["BinaryPlusSyntax","fun BinaryPlusSyntax(operation: String, left: OperandSyntax, right: OperandSyntax)","space.kscience.kmath.ast.rendering.BinaryPlusSyntax.BinaryPlusSyntax"]},{"name":"fun Exponent(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Exponent.Exponent","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent/-exponent.html","searchKeys":["Exponent","fun Exponent(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Exponent.Exponent"]},{"name":"fun ExponentSyntax(operation: String, operand: OperandSyntax, useOperatorForm: Boolean)","description":"space.kscience.kmath.ast.rendering.ExponentSyntax.ExponentSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent-syntax/-exponent-syntax.html","searchKeys":["ExponentSyntax","fun ExponentSyntax(operation: String, operand: OperandSyntax, useOperatorForm: Boolean)","space.kscience.kmath.ast.rendering.ExponentSyntax.ExponentSyntax"]},{"name":"fun FeaturedMathRenderer(features: List<FeaturedMathRenderer.RenderFeature>)","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer.FeaturedMathRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/-featured-math-renderer.html","searchKeys":["FeaturedMathRenderer","fun FeaturedMathRenderer(features: List<FeaturedMathRenderer.RenderFeature>)","space.kscience.kmath.ast.rendering.FeaturedMathRenderer.FeaturedMathRenderer"]},{"name":"fun FeaturedMathRendererWithPostProcess(features: List<FeaturedMathRenderer.RenderFeature>, stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>)","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.FeaturedMathRendererWithPostProcess","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/-featured-math-renderer-with-post-process.html","searchKeys":["FeaturedMathRendererWithPostProcess","fun FeaturedMathRendererWithPostProcess(features: List<FeaturedMathRenderer.RenderFeature>, stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>)","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.FeaturedMathRendererWithPostProcess"]},{"name":"fun Fraction(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Fraction.Fraction","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction/-fraction.html","searchKeys":["Fraction","fun Fraction(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Fraction.Fraction"]},{"name":"fun FractionSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, infix: Boolean)","description":"space.kscience.kmath.ast.rendering.FractionSyntax.FractionSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/-fraction-syntax.html","searchKeys":["FractionSyntax","fun FractionSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, infix: Boolean)","space.kscience.kmath.ast.rendering.FractionSyntax.FractionSyntax"]},{"name":"fun InverseHyperbolicOperations(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.InverseHyperbolicOperations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-hyperbolic-operations/-inverse-hyperbolic-operations.html","searchKeys":["InverseHyperbolicOperations","fun InverseHyperbolicOperations(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.InverseHyperbolicOperations"]},{"name":"fun InverseTrigonometricOperations(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.InverseTrigonometricOperations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-trigonometric-operations/-inverse-trigonometric-operations.html","searchKeys":["InverseTrigonometricOperations","fun InverseTrigonometricOperations(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.InverseTrigonometricOperations"]},{"name":"fun Multiplication(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Multiplication.Multiplication","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication/-multiplication.html","searchKeys":["Multiplication","fun Multiplication(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Multiplication.Multiplication"]},{"name":"fun MultiplicationSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, times: Boolean)","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax.MultiplicationSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/-multiplication-syntax.html","searchKeys":["MultiplicationSyntax","fun MultiplicationSyntax(operation: String, left: OperandSyntax, right: OperandSyntax, times: Boolean)","space.kscience.kmath.ast.rendering.MultiplicationSyntax.MultiplicationSyntax"]},{"name":"fun NumberSyntax(string: String)","description":"space.kscience.kmath.ast.rendering.NumberSyntax.NumberSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-number-syntax/-number-syntax.html","searchKeys":["NumberSyntax","fun NumberSyntax(string: String)","space.kscience.kmath.ast.rendering.NumberSyntax.NumberSyntax"]},{"name":"fun OperandSyntax(operand: MathSyntax, parentheses: Boolean)","description":"space.kscience.kmath.ast.rendering.OperandSyntax.OperandSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operand-syntax/-operand-syntax.html","searchKeys":["OperandSyntax","fun OperandSyntax(operand: MathSyntax, parentheses: Boolean)","space.kscience.kmath.ast.rendering.OperandSyntax.OperandSyntax"]},{"name":"fun OperatorNameSyntax(name: String)","description":"space.kscience.kmath.ast.rendering.OperatorNameSyntax.OperatorNameSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operator-name-syntax/-operator-name-syntax.html","searchKeys":["OperatorNameSyntax","fun OperatorNameSyntax(name: String)","space.kscience.kmath.ast.rendering.OperatorNameSyntax.OperatorNameSyntax"]},{"name":"fun Power(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Power.Power","location":"kmath-ast/space.kscience.kmath.ast.rendering/-power/-power.html","searchKeys":["Power","fun Power(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Power.Power"]},{"name":"fun PrettyPrintFloats(types: Set<KClass<out Number>>)","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats.PrettyPrintFloats","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/-pretty-print-floats.html","searchKeys":["PrettyPrintFloats","fun PrettyPrintFloats(types: Set<KClass<out Number>>)","space.kscience.kmath.ast.rendering.PrettyPrintFloats.PrettyPrintFloats"]},{"name":"fun PrettyPrintIntegers(types: Set<KClass<out Number>>)","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers.PrettyPrintIntegers","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/-pretty-print-integers.html","searchKeys":["PrettyPrintIntegers","fun PrettyPrintIntegers(types: Set<KClass<out Number>>)","space.kscience.kmath.ast.rendering.PrettyPrintIntegers.PrettyPrintIntegers"]},{"name":"fun PrettyPrintPi(symbols: Set<String>)","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi.PrettyPrintPi","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/-pretty-print-pi.html","searchKeys":["PrettyPrintPi","fun PrettyPrintPi(symbols: Set<String>)","space.kscience.kmath.ast.rendering.PrettyPrintPi.PrettyPrintPi"]},{"name":"fun RadicalSyntax(operation: String, operand: MathSyntax)","description":"space.kscience.kmath.ast.rendering.RadicalSyntax.RadicalSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-syntax/-radical-syntax.html","searchKeys":["RadicalSyntax","fun RadicalSyntax(operation: String, operand: MathSyntax)","space.kscience.kmath.ast.rendering.RadicalSyntax.RadicalSyntax"]},{"name":"fun RadicalWithIndexSyntax(operation: String, left: MathSyntax, right: MathSyntax)","description":"space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.RadicalWithIndexSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-with-index-syntax/-radical-with-index-syntax.html","searchKeys":["RadicalWithIndexSyntax","fun RadicalWithIndexSyntax(operation: String, left: MathSyntax, right: MathSyntax)","space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.RadicalWithIndexSyntax"]},{"name":"fun SimplifyParentheses(precedenceFunction: (MathSyntax) -> Int)","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses.SimplifyParentheses","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/-simplify-parentheses.html","searchKeys":["SimplifyParentheses","fun SimplifyParentheses(precedenceFunction: (MathSyntax) -> Int)","space.kscience.kmath.ast.rendering.SimplifyParentheses.SimplifyParentheses"]},{"name":"fun SpecialSymbolSyntax(kind: SpecialSymbolSyntax.Kind)","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.SpecialSymbolSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-special-symbol-syntax.html","searchKeys":["SpecialSymbolSyntax","fun SpecialSymbolSyntax(kind: SpecialSymbolSyntax.Kind)","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.SpecialSymbolSyntax"]},{"name":"fun SquareRoot(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.SquareRoot.SquareRoot","location":"kmath-ast/space.kscience.kmath.ast.rendering/-square-root/-square-root.html","searchKeys":["SquareRoot","fun SquareRoot(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.SquareRoot.SquareRoot"]},{"name":"fun String.parseMath(): MST","description":"space.kscience.kmath.ast.parseMath","location":"kmath-ast/space.kscience.kmath.ast/parse-math.html","searchKeys":["parseMath","fun String.parseMath(): MST","space.kscience.kmath.ast.parseMath"]},{"name":"fun String.tryParseMath(): ParseResult<MST>","description":"space.kscience.kmath.ast.tryParseMath","location":"kmath-ast/space.kscience.kmath.ast/try-parse-math.html","searchKeys":["tryParseMath","fun String.tryParseMath(): ParseResult<MST>","space.kscience.kmath.ast.tryParseMath"]},{"name":"fun SubscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax)","description":"space.kscience.kmath.ast.rendering.SubscriptSyntax.SubscriptSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-subscript-syntax/-subscript-syntax.html","searchKeys":["SubscriptSyntax","fun SubscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax)","space.kscience.kmath.ast.rendering.SubscriptSyntax.SubscriptSyntax"]},{"name":"fun SuperscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax)","description":"space.kscience.kmath.ast.rendering.SuperscriptSyntax.SuperscriptSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-superscript-syntax/-superscript-syntax.html","searchKeys":["SuperscriptSyntax","fun SuperscriptSyntax(operation: String, left: MathSyntax, right: MathSyntax)","space.kscience.kmath.ast.rendering.SuperscriptSyntax.SuperscriptSyntax"]},{"name":"fun SymbolSyntax(string: String)","description":"space.kscience.kmath.ast.rendering.SymbolSyntax.SymbolSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-symbol-syntax/-symbol-syntax.html","searchKeys":["SymbolSyntax","fun SymbolSyntax(string: String)","space.kscience.kmath.ast.rendering.SymbolSyntax.SymbolSyntax"]},{"name":"fun SyntaxRenderer.renderWithStringBuilder(node: MathSyntax): String","description":"space.kscience.kmath.ast.rendering.renderWithStringBuilder","location":"kmath-ast/space.kscience.kmath.ast.rendering/render-with-string-builder.html","searchKeys":["renderWithStringBuilder","fun SyntaxRenderer.renderWithStringBuilder(node: MathSyntax): String","space.kscience.kmath.ast.rendering.renderWithStringBuilder"]},{"name":"fun Unary(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.Unary.Unary","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary/-unary.html","searchKeys":["Unary","fun Unary(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.Unary.Unary"]},{"name":"fun UnaryMinus(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.UnaryMinus.UnaryMinus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus/-unary-minus.html","searchKeys":["UnaryMinus","fun UnaryMinus(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.UnaryMinus.UnaryMinus"]},{"name":"fun UnaryMinusSyntax(operation: String, operand: OperandSyntax)","description":"space.kscience.kmath.ast.rendering.UnaryMinusSyntax.UnaryMinusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus-syntax/-unary-minus-syntax.html","searchKeys":["UnaryMinusSyntax","fun UnaryMinusSyntax(operation: String, operand: OperandSyntax)","space.kscience.kmath.ast.rendering.UnaryMinusSyntax.UnaryMinusSyntax"]},{"name":"fun UnaryOperator(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.UnaryOperator.UnaryOperator","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator/-unary-operator.html","searchKeys":["UnaryOperator","fun UnaryOperator(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.UnaryOperator.UnaryOperator"]},{"name":"fun UnaryOperatorSyntax(operation: String, prefix: MathSyntax, operand: OperandSyntax)","description":"space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.UnaryOperatorSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator-syntax/-unary-operator-syntax.html","searchKeys":["UnaryOperatorSyntax","fun UnaryOperatorSyntax(operation: String, prefix: MathSyntax, operand: OperandSyntax)","space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.UnaryOperatorSyntax"]},{"name":"fun UnaryPlus(operations: Collection<String>?)","description":"space.kscience.kmath.ast.rendering.UnaryPlus.UnaryPlus","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus/-unary-plus.html","searchKeys":["UnaryPlus","fun UnaryPlus(operations: Collection<String>?)","space.kscience.kmath.ast.rendering.UnaryPlus.UnaryPlus"]},{"name":"fun UnaryPlusSyntax(operation: String, operand: OperandSyntax)","description":"space.kscience.kmath.ast.rendering.UnaryPlusSyntax.UnaryPlusSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus-syntax/-unary-plus-syntax.html","searchKeys":["UnaryPlusSyntax","fun UnaryPlusSyntax(operation: String, operand: OperandSyntax)","space.kscience.kmath.ast.rendering.UnaryPlusSyntax.UnaryPlusSyntax"]},{"name":"fun fun interface MathRenderer","description":"space.kscience.kmath.ast.rendering.MathRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-renderer/index.html","searchKeys":["MathRenderer","fun fun interface MathRenderer","space.kscience.kmath.ast.rendering.MathRenderer"]},{"name":"fun fun interface PostProcessPhase","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.PostProcessPhase","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/-post-process-phase/index.html","searchKeys":["PostProcessPhase","fun fun interface PostProcessPhase","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.PostProcessPhase"]},{"name":"fun fun interface RenderFeature","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer.RenderFeature","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/-render-feature/index.html","searchKeys":["RenderFeature","fun fun interface RenderFeature","space.kscience.kmath.ast.rendering.FeaturedMathRenderer.RenderFeature"]},{"name":"fun fun interface SyntaxRenderer","description":"space.kscience.kmath.ast.rendering.SyntaxRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-syntax-renderer/index.html","searchKeys":["SyntaxRenderer","fun fun interface SyntaxRenderer","space.kscience.kmath.ast.rendering.SyntaxRenderer"]},{"name":"fun renderPart(node: MathSyntax, output: Appendable)","description":"space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer.renderPart","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-m-l-syntax-renderer/render-part.html","searchKeys":["renderPart","fun renderPart(node: MathSyntax, output: Appendable)","space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer.renderPart"]},{"name":"inline fun <T : Any> <ERROR CLASS>.compile(algebra: <ERROR CLASS><T>, arguments: Map<<ERROR CLASS>, T>): T","description":"space.kscience.kmath.estree.compile","location":"kmath-ast/space.kscience.kmath.estree/compile.html","searchKeys":["compile","inline fun <T : Any> <ERROR CLASS>.compile(algebra: <ERROR CLASS><T>, arguments: Map<<ERROR CLASS>, T>): T","space.kscience.kmath.estree.compile"]},{"name":"inline fun <T : Any> <ERROR CLASS>.compile(algebra: <ERROR CLASS><T>, vararg arguments: Pair<<ERROR CLASS>, T>): T","description":"space.kscience.kmath.estree.compile","location":"kmath-ast/space.kscience.kmath.estree/compile.html","searchKeys":["compile","inline fun <T : Any> <ERROR CLASS>.compile(algebra: <ERROR CLASS><T>, vararg arguments: Pair<<ERROR CLASS>, T>): T","space.kscience.kmath.estree.compile"]},{"name":"inline fun <T : Any> MST.compile(algebra: Algebra<T>, arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.asm.compile","location":"kmath-ast/space.kscience.kmath.asm/compile.html","searchKeys":["compile","inline fun <T : Any> MST.compile(algebra: Algebra<T>, arguments: Map<Symbol, T>): T","space.kscience.kmath.asm.compile"]},{"name":"inline fun <T : Any> MST.compile(algebra: Algebra<T>, vararg arguments: Pair<Symbol, T>): T","description":"space.kscience.kmath.asm.compile","location":"kmath-ast/space.kscience.kmath.asm/compile.html","searchKeys":["compile","inline fun <T : Any> MST.compile(algebra: Algebra<T>, vararg arguments: Pair<Symbol, T>): T","space.kscience.kmath.asm.compile"]},{"name":"inline fun <T : Any> MST.compileToExpression(algebra: Algebra<T>): Expression<T>","description":"space.kscience.kmath.asm.compileToExpression","location":"kmath-ast/space.kscience.kmath.asm/compile-to-expression.html","searchKeys":["compileToExpression","inline fun <T : Any> MST.compileToExpression(algebra: Algebra<T>): Expression<T>","space.kscience.kmath.asm.compileToExpression"]},{"name":"object ArithmeticsEvaluator : Grammar<MST> ","description":"space.kscience.kmath.ast.ArithmeticsEvaluator","location":"kmath-ast/space.kscience.kmath.ast/-arithmetics-evaluator/index.html","searchKeys":["ArithmeticsEvaluator","object ArithmeticsEvaluator : Grammar<MST> ","space.kscience.kmath.ast.ArithmeticsEvaluator"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.BinaryMinus.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.BinaryMinus.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.BinaryOperator.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.BinaryOperator.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.BinaryPlus.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.BinaryPlus.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.Exponent.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.Exponent.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.Fraction.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.Fraction.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-hyperbolic-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-trigonometric-operations/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.Multiplication.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.Multiplication.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.Power.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-power/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.Power.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.PrettyPrintFloats.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.PrettyPrintIntegers.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.PrettyPrintPi.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.SimplifyParentheses.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.SquareRoot.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-square-root/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.SquareRoot.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.UnaryMinus.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.UnaryMinus.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.UnaryOperator.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.UnaryOperator.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.ast.rendering.UnaryPlus.Companion","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.ast.rendering.UnaryPlus.Companion"]},{"name":"object LatexSyntaxRenderer : SyntaxRenderer","description":"space.kscience.kmath.ast.rendering.LatexSyntaxRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-latex-syntax-renderer/index.html","searchKeys":["LatexSyntaxRenderer","object LatexSyntaxRenderer : SyntaxRenderer","space.kscience.kmath.ast.rendering.LatexSyntaxRenderer"]},{"name":"object MathMLSyntaxRenderer : SyntaxRenderer","description":"space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-m-l-syntax-renderer/index.html","searchKeys":["MathMLSyntaxRenderer","object MathMLSyntaxRenderer : SyntaxRenderer","space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer"]},{"name":"open class FeaturedMathRenderer(features: List<FeaturedMathRenderer.RenderFeature>) : MathRenderer","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/index.html","searchKeys":["FeaturedMathRenderer","open class FeaturedMathRenderer(features: List<FeaturedMathRenderer.RenderFeature>) : MathRenderer","space.kscience.kmath.ast.rendering.FeaturedMathRenderer"]},{"name":"open class FeaturedMathRendererWithPostProcess(features: List<FeaturedMathRenderer.RenderFeature>, stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>) : FeaturedMathRenderer","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/index.html","searchKeys":["FeaturedMathRendererWithPostProcess","open class FeaturedMathRendererWithPostProcess(features: List<FeaturedMathRenderer.RenderFeature>, stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>) : FeaturedMathRenderer","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess"]},{"name":"open override fun perform(node: MathSyntax)","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses.perform","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/perform.html","searchKeys":["perform","open override fun perform(node: MathSyntax)","space.kscience.kmath.ast.rendering.SimplifyParentheses.perform"]},{"name":"open override fun render(mst: MST): MathSyntax","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/render.html","searchKeys":["render","open override fun render(mst: MST): MathSyntax","space.kscience.kmath.ast.rendering.FeaturedMathRenderer.render"]},{"name":"open override fun render(mst: MST): MathSyntax","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/render.html","searchKeys":["render","open override fun render(mst: MST): MathSyntax","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.render"]},{"name":"open override fun render(node: MathSyntax, output: Appendable)","description":"space.kscience.kmath.ast.rendering.LatexSyntaxRenderer.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-latex-syntax-renderer/render.html","searchKeys":["render","open override fun render(node: MathSyntax, output: Appendable)","space.kscience.kmath.ast.rendering.LatexSyntaxRenderer.render"]},{"name":"open override fun render(node: MathSyntax, output: Appendable)","description":"space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-m-l-syntax-renderer/render.html","searchKeys":["render","open override fun render(node: MathSyntax, output: Appendable)","space.kscience.kmath.ast.rendering.MathMLSyntaxRenderer.render"]},{"name":"open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/render.html","searchKeys":["render","open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.PrettyPrintFloats.render"]},{"name":"open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/render.html","searchKeys":["render","open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.PrettyPrintIntegers.render"]},{"name":"open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/render.html","searchKeys":["render","open override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.PrettyPrintPi.render"]},{"name":"open override val left: MathSyntax","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/left.html","searchKeys":["left","open override val left: MathSyntax","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.left"]},{"name":"open override val left: MathSyntax","description":"space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-with-index-syntax/left.html","searchKeys":["left","open override val left: MathSyntax","space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.left"]},{"name":"open override val left: MathSyntax","description":"space.kscience.kmath.ast.rendering.SubscriptSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-subscript-syntax/left.html","searchKeys":["left","open override val left: MathSyntax","space.kscience.kmath.ast.rendering.SubscriptSyntax.left"]},{"name":"open override val left: MathSyntax","description":"space.kscience.kmath.ast.rendering.SuperscriptSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-superscript-syntax/left.html","searchKeys":["left","open override val left: MathSyntax","space.kscience.kmath.ast.rendering.SuperscriptSyntax.left"]},{"name":"open override val left: OperandSyntax","description":"space.kscience.kmath.ast.rendering.BinaryMinusSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus-syntax/left.html","searchKeys":["left","open override val left: OperandSyntax","space.kscience.kmath.ast.rendering.BinaryMinusSyntax.left"]},{"name":"open override val left: OperandSyntax","description":"space.kscience.kmath.ast.rendering.BinaryPlusSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus-syntax/left.html","searchKeys":["left","open override val left: OperandSyntax","space.kscience.kmath.ast.rendering.BinaryPlusSyntax.left"]},{"name":"open override val left: OperandSyntax","description":"space.kscience.kmath.ast.rendering.FractionSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/left.html","searchKeys":["left","open override val left: OperandSyntax","space.kscience.kmath.ast.rendering.FractionSyntax.left"]},{"name":"open override val left: OperandSyntax","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax.left","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/left.html","searchKeys":["left","open override val left: OperandSyntax","space.kscience.kmath.ast.rendering.MultiplicationSyntax.left"]},{"name":"open override val operand: MathSyntax","description":"space.kscience.kmath.ast.rendering.RadicalSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-syntax/operand.html","searchKeys":["operand","open override val operand: MathSyntax","space.kscience.kmath.ast.rendering.RadicalSyntax.operand"]},{"name":"open override val operand: OperandSyntax","description":"space.kscience.kmath.ast.rendering.ExponentSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent-syntax/operand.html","searchKeys":["operand","open override val operand: OperandSyntax","space.kscience.kmath.ast.rendering.ExponentSyntax.operand"]},{"name":"open override val operand: OperandSyntax","description":"space.kscience.kmath.ast.rendering.UnaryMinusSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus-syntax/operand.html","searchKeys":["operand","open override val operand: OperandSyntax","space.kscience.kmath.ast.rendering.UnaryMinusSyntax.operand"]},{"name":"open override val operand: OperandSyntax","description":"space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator-syntax/operand.html","searchKeys":["operand","open override val operand: OperandSyntax","space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.operand"]},{"name":"open override val operand: OperandSyntax","description":"space.kscience.kmath.ast.rendering.UnaryPlusSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus-syntax/operand.html","searchKeys":["operand","open override val operand: OperandSyntax","space.kscience.kmath.ast.rendering.UnaryPlusSyntax.operand"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.BinaryMinusSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.BinaryMinusSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.BinaryPlusSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.BinaryPlusSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.ExponentSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.ExponentSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.FractionSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.FractionSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.MultiplicationSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.RadicalSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.RadicalSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-with-index-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.SubscriptSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-subscript-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.SubscriptSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.SuperscriptSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-superscript-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.SuperscriptSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.UnaryMinusSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.UnaryMinusSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.operation"]},{"name":"open override val operation: String","description":"space.kscience.kmath.ast.rendering.UnaryPlusSyntax.operation","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus-syntax/operation.html","searchKeys":["operation","open override val operation: String","space.kscience.kmath.ast.rendering.UnaryPlusSyntax.operation"]},{"name":"open override val right: MathSyntax","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/right.html","searchKeys":["right","open override val right: MathSyntax","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.right"]},{"name":"open override val right: MathSyntax","description":"space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-radical-with-index-syntax/right.html","searchKeys":["right","open override val right: MathSyntax","space.kscience.kmath.ast.rendering.RadicalWithIndexSyntax.right"]},{"name":"open override val right: MathSyntax","description":"space.kscience.kmath.ast.rendering.SubscriptSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-subscript-syntax/right.html","searchKeys":["right","open override val right: MathSyntax","space.kscience.kmath.ast.rendering.SubscriptSyntax.right"]},{"name":"open override val right: MathSyntax","description":"space.kscience.kmath.ast.rendering.SuperscriptSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-superscript-syntax/right.html","searchKeys":["right","open override val right: MathSyntax","space.kscience.kmath.ast.rendering.SuperscriptSyntax.right"]},{"name":"open override val right: OperandSyntax","description":"space.kscience.kmath.ast.rendering.BinaryMinusSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus-syntax/right.html","searchKeys":["right","open override val right: OperandSyntax","space.kscience.kmath.ast.rendering.BinaryMinusSyntax.right"]},{"name":"open override val right: OperandSyntax","description":"space.kscience.kmath.ast.rendering.BinaryPlusSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus-syntax/right.html","searchKeys":["right","open override val right: OperandSyntax","space.kscience.kmath.ast.rendering.BinaryPlusSyntax.right"]},{"name":"open override val right: OperandSyntax","description":"space.kscience.kmath.ast.rendering.FractionSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/right.html","searchKeys":["right","open override val right: OperandSyntax","space.kscience.kmath.ast.rendering.FractionSyntax.right"]},{"name":"open override val right: OperandSyntax","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax.right","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/right.html","searchKeys":["right","open override val right: OperandSyntax","space.kscience.kmath.ast.rendering.MultiplicationSyntax.right"]},{"name":"open override val rootParser: Parser<MST>","description":"space.kscience.kmath.ast.ArithmeticsEvaluator.rootParser","location":"kmath-ast/space.kscience.kmath.ast/-arithmetics-evaluator/root-parser.html","searchKeys":["rootParser","open override val rootParser: Parser<MST>","space.kscience.kmath.ast.ArithmeticsEvaluator.rootParser"]},{"name":"override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.Binary.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary/render.html","searchKeys":["render","override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.Binary.render"]},{"name":"override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","description":"space.kscience.kmath.ast.rendering.Unary.render","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary/render.html","searchKeys":["render","override fun render(renderer: FeaturedMathRenderer, node: MST): MathSyntax?","space.kscience.kmath.ast.rendering.Unary.render"]},{"name":"sealed class BinarySyntax : OperationSyntax","description":"space.kscience.kmath.ast.rendering.BinarySyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-syntax/index.html","searchKeys":["BinarySyntax","sealed class BinarySyntax : OperationSyntax","space.kscience.kmath.ast.rendering.BinarySyntax"]},{"name":"sealed class MathSyntax","description":"space.kscience.kmath.ast.rendering.MathSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-syntax/index.html","searchKeys":["MathSyntax","sealed class MathSyntax","space.kscience.kmath.ast.rendering.MathSyntax"]},{"name":"sealed class OperationSyntax : MathSyntax","description":"space.kscience.kmath.ast.rendering.OperationSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operation-syntax/index.html","searchKeys":["OperationSyntax","sealed class OperationSyntax : MathSyntax","space.kscience.kmath.ast.rendering.OperationSyntax"]},{"name":"sealed class TerminalSyntax : MathSyntax","description":"space.kscience.kmath.ast.rendering.TerminalSyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-terminal-syntax/index.html","searchKeys":["TerminalSyntax","sealed class TerminalSyntax : MathSyntax","space.kscience.kmath.ast.rendering.TerminalSyntax"]},{"name":"sealed class UnarySyntax : OperationSyntax","description":"space.kscience.kmath.ast.rendering.UnarySyntax","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-syntax/index.html","searchKeys":["UnarySyntax","sealed class UnarySyntax : OperationSyntax","space.kscience.kmath.ast.rendering.UnarySyntax"]},{"name":"val BetterExponent: FeaturedMathRendererWithPostProcess.PostProcessPhase","description":"space.kscience.kmath.ast.rendering.BetterExponent","location":"kmath-ast/space.kscience.kmath.ast.rendering/-better-exponent.html","searchKeys":["BetterExponent","val BetterExponent: FeaturedMathRendererWithPostProcess.PostProcessPhase","space.kscience.kmath.ast.rendering.BetterExponent"]},{"name":"val BetterFraction: FeaturedMathRendererWithPostProcess.PostProcessPhase","description":"space.kscience.kmath.ast.rendering.BetterFraction","location":"kmath-ast/space.kscience.kmath.ast.rendering/-better-fraction.html","searchKeys":["BetterFraction","val BetterFraction: FeaturedMathRendererWithPostProcess.PostProcessPhase","space.kscience.kmath.ast.rendering.BetterFraction"]},{"name":"val BetterMultiplication: FeaturedMathRendererWithPostProcess.PostProcessPhase","description":"space.kscience.kmath.ast.rendering.BetterMultiplication","location":"kmath-ast/space.kscience.kmath.ast.rendering/-better-multiplication.html","searchKeys":["BetterMultiplication","val BetterMultiplication: FeaturedMathRendererWithPostProcess.PostProcessPhase","space.kscience.kmath.ast.rendering.BetterMultiplication"]},{"name":"val Default: BinaryMinus","description":"space.kscience.kmath.ast.rendering.BinaryMinus.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-minus/-companion/-default.html","searchKeys":["Default","val Default: BinaryMinus","space.kscience.kmath.ast.rendering.BinaryMinus.Companion.Default"]},{"name":"val Default: BinaryOperator","description":"space.kscience.kmath.ast.rendering.BinaryOperator.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator/-companion/-default.html","searchKeys":["Default","val Default: BinaryOperator","space.kscience.kmath.ast.rendering.BinaryOperator.Companion.Default"]},{"name":"val Default: BinaryPlus","description":"space.kscience.kmath.ast.rendering.BinaryPlus.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-plus/-companion/-default.html","searchKeys":["Default","val Default: BinaryPlus","space.kscience.kmath.ast.rendering.BinaryPlus.Companion.Default"]},{"name":"val Default: Exponent","description":"space.kscience.kmath.ast.rendering.Exponent.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent/-companion/-default.html","searchKeys":["Default","val Default: Exponent","space.kscience.kmath.ast.rendering.Exponent.Companion.Default"]},{"name":"val Default: FeaturedMathRendererWithPostProcess","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/-companion/-default.html","searchKeys":["Default","val Default: FeaturedMathRendererWithPostProcess","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.Companion.Default"]},{"name":"val Default: Fraction","description":"space.kscience.kmath.ast.rendering.Fraction.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction/-companion/-default.html","searchKeys":["Default","val Default: Fraction","space.kscience.kmath.ast.rendering.Fraction.Companion.Default"]},{"name":"val Default: InverseHyperbolicOperations","description":"space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-hyperbolic-operations/-companion/-default.html","searchKeys":["Default","val Default: InverseHyperbolicOperations","space.kscience.kmath.ast.rendering.InverseHyperbolicOperations.Companion.Default"]},{"name":"val Default: InverseTrigonometricOperations","description":"space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-inverse-trigonometric-operations/-companion/-default.html","searchKeys":["Default","val Default: InverseTrigonometricOperations","space.kscience.kmath.ast.rendering.InverseTrigonometricOperations.Companion.Default"]},{"name":"val Default: Multiplication","description":"space.kscience.kmath.ast.rendering.Multiplication.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication/-companion/-default.html","searchKeys":["Default","val Default: Multiplication","space.kscience.kmath.ast.rendering.Multiplication.Companion.Default"]},{"name":"val Default: Power","description":"space.kscience.kmath.ast.rendering.Power.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-power/-companion/-default.html","searchKeys":["Default","val Default: Power","space.kscience.kmath.ast.rendering.Power.Companion.Default"]},{"name":"val Default: PrettyPrintFloats","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/-companion/-default.html","searchKeys":["Default","val Default: PrettyPrintFloats","space.kscience.kmath.ast.rendering.PrettyPrintFloats.Companion.Default"]},{"name":"val Default: PrettyPrintIntegers","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/-companion/-default.html","searchKeys":["Default","val Default: PrettyPrintIntegers","space.kscience.kmath.ast.rendering.PrettyPrintIntegers.Companion.Default"]},{"name":"val Default: PrettyPrintPi","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/-companion/-default.html","searchKeys":["Default","val Default: PrettyPrintPi","space.kscience.kmath.ast.rendering.PrettyPrintPi.Companion.Default"]},{"name":"val Default: SimplifyParentheses","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/-companion/-default.html","searchKeys":["Default","val Default: SimplifyParentheses","space.kscience.kmath.ast.rendering.SimplifyParentheses.Companion.Default"]},{"name":"val Default: SquareRoot","description":"space.kscience.kmath.ast.rendering.SquareRoot.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-square-root/-companion/-default.html","searchKeys":["Default","val Default: SquareRoot","space.kscience.kmath.ast.rendering.SquareRoot.Companion.Default"]},{"name":"val Default: UnaryMinus","description":"space.kscience.kmath.ast.rendering.UnaryMinus.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-minus/-companion/-default.html","searchKeys":["Default","val Default: UnaryMinus","space.kscience.kmath.ast.rendering.UnaryMinus.Companion.Default"]},{"name":"val Default: UnaryOperator","description":"space.kscience.kmath.ast.rendering.UnaryOperator.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator/-companion/-default.html","searchKeys":["Default","val Default: UnaryOperator","space.kscience.kmath.ast.rendering.UnaryOperator.Companion.Default"]},{"name":"val Default: UnaryPlus","description":"space.kscience.kmath.ast.rendering.UnaryPlus.Companion.Default","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-plus/-companion/-default.html","searchKeys":["Default","val Default: UnaryPlus","space.kscience.kmath.ast.rendering.UnaryPlus.Companion.Default"]},{"name":"val PrintNumeric: FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.PrintNumeric","location":"kmath-ast/space.kscience.kmath.ast.rendering/-print-numeric.html","searchKeys":["PrintNumeric","val PrintNumeric: FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.PrintNumeric"]},{"name":"val PrintSymbol: FeaturedMathRenderer.RenderFeature","description":"space.kscience.kmath.ast.rendering.PrintSymbol","location":"kmath-ast/space.kscience.kmath.ast.rendering/-print-symbol.html","searchKeys":["PrintSymbol","val PrintSymbol: FeaturedMathRenderer.RenderFeature","space.kscience.kmath.ast.rendering.PrintSymbol"]},{"name":"val features: List<FeaturedMathRenderer.RenderFeature>","description":"space.kscience.kmath.ast.rendering.FeaturedMathRenderer.features","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer/features.html","searchKeys":["features","val features: List<FeaturedMathRenderer.RenderFeature>","space.kscience.kmath.ast.rendering.FeaturedMathRenderer.features"]},{"name":"val name: String","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY.name","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-i-n-f-i-n-i-t-y/name.html","searchKeys":["name","val name: String","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY.name"]},{"name":"val name: String","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI.name","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-s-m-a-l-l_-p-i/name.html","searchKeys":["name","val name: String","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI.name"]},{"name":"val operand: MathSyntax","description":"space.kscience.kmath.ast.rendering.OperandSyntax.operand","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operand-syntax/operand.html","searchKeys":["operand","val operand: MathSyntax","space.kscience.kmath.ast.rendering.OperandSyntax.operand"]},{"name":"val operations: Collection<String>?","description":"space.kscience.kmath.ast.rendering.Binary.operations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary/operations.html","searchKeys":["operations","val operations: Collection<String>?","space.kscience.kmath.ast.rendering.Binary.operations"]},{"name":"val operations: Collection<String>?","description":"space.kscience.kmath.ast.rendering.Unary.operations","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary/operations.html","searchKeys":["operations","val operations: Collection<String>?","space.kscience.kmath.ast.rendering.Unary.operations"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY.ordinal","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-i-n-f-i-n-i-t-y/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.INFINITY.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI.ordinal","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/-kind/-s-m-a-l-l_-p-i/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.Kind.SMALL_PI.ordinal"]},{"name":"val precedenceFunction: (MathSyntax) -> Int","description":"space.kscience.kmath.ast.rendering.SimplifyParentheses.precedenceFunction","location":"kmath-ast/space.kscience.kmath.ast.rendering/-simplify-parentheses/precedence-function.html","searchKeys":["precedenceFunction","val precedenceFunction: (MathSyntax) -> Int","space.kscience.kmath.ast.rendering.SimplifyParentheses.precedenceFunction"]},{"name":"val stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>","description":"space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.stages","location":"kmath-ast/space.kscience.kmath.ast.rendering/-featured-math-renderer-with-post-process/stages.html","searchKeys":["stages","val stages: List<FeaturedMathRendererWithPostProcess.PostProcessPhase>","space.kscience.kmath.ast.rendering.FeaturedMathRendererWithPostProcess.stages"]},{"name":"val symbols: Set<String>","description":"space.kscience.kmath.ast.rendering.PrettyPrintPi.symbols","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-pi/symbols.html","searchKeys":["symbols","val symbols: Set<String>","space.kscience.kmath.ast.rendering.PrettyPrintPi.symbols"]},{"name":"val types: Set<KClass<out Number>>","description":"space.kscience.kmath.ast.rendering.PrettyPrintFloats.types","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-floats/types.html","searchKeys":["types","val types: Set<KClass<out Number>>","space.kscience.kmath.ast.rendering.PrettyPrintFloats.types"]},{"name":"val types: Set<KClass<out Number>>","description":"space.kscience.kmath.ast.rendering.PrettyPrintIntegers.types","location":"kmath-ast/space.kscience.kmath.ast.rendering/-pretty-print-integers/types.html","searchKeys":["types","val types: Set<KClass<out Number>>","space.kscience.kmath.ast.rendering.PrettyPrintIntegers.types"]},{"name":"var infix: Boolean","description":"space.kscience.kmath.ast.rendering.FractionSyntax.infix","location":"kmath-ast/space.kscience.kmath.ast.rendering/-fraction-syntax/infix.html","searchKeys":["infix","var infix: Boolean","space.kscience.kmath.ast.rendering.FractionSyntax.infix"]},{"name":"var kind: SpecialSymbolSyntax.Kind","description":"space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.kind","location":"kmath-ast/space.kscience.kmath.ast.rendering/-special-symbol-syntax/kind.html","searchKeys":["kind","var kind: SpecialSymbolSyntax.Kind","space.kscience.kmath.ast.rendering.SpecialSymbolSyntax.kind"]},{"name":"var name: String","description":"space.kscience.kmath.ast.rendering.OperatorNameSyntax.name","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operator-name-syntax/name.html","searchKeys":["name","var name: String","space.kscience.kmath.ast.rendering.OperatorNameSyntax.name"]},{"name":"var parent: MathSyntax? = null","description":"space.kscience.kmath.ast.rendering.MathSyntax.parent","location":"kmath-ast/space.kscience.kmath.ast.rendering/-math-syntax/parent.html","searchKeys":["parent","var parent: MathSyntax? = null","space.kscience.kmath.ast.rendering.MathSyntax.parent"]},{"name":"var parentheses: Boolean","description":"space.kscience.kmath.ast.rendering.OperandSyntax.parentheses","location":"kmath-ast/space.kscience.kmath.ast.rendering/-operand-syntax/parentheses.html","searchKeys":["parentheses","var parentheses: Boolean","space.kscience.kmath.ast.rendering.OperandSyntax.parentheses"]},{"name":"var prefix: MathSyntax","description":"space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.prefix","location":"kmath-ast/space.kscience.kmath.ast.rendering/-binary-operator-syntax/prefix.html","searchKeys":["prefix","var prefix: MathSyntax","space.kscience.kmath.ast.rendering.BinaryOperatorSyntax.prefix"]},{"name":"var prefix: MathSyntax","description":"space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.prefix","location":"kmath-ast/space.kscience.kmath.ast.rendering/-unary-operator-syntax/prefix.html","searchKeys":["prefix","var prefix: MathSyntax","space.kscience.kmath.ast.rendering.UnaryOperatorSyntax.prefix"]},{"name":"var string: String","description":"space.kscience.kmath.ast.rendering.NumberSyntax.string","location":"kmath-ast/space.kscience.kmath.ast.rendering/-number-syntax/string.html","searchKeys":["string","var string: String","space.kscience.kmath.ast.rendering.NumberSyntax.string"]},{"name":"var string: String","description":"space.kscience.kmath.ast.rendering.SymbolSyntax.string","location":"kmath-ast/space.kscience.kmath.ast.rendering/-symbol-syntax/string.html","searchKeys":["string","var string: String","space.kscience.kmath.ast.rendering.SymbolSyntax.string"]},{"name":"var times: Boolean","description":"space.kscience.kmath.ast.rendering.MultiplicationSyntax.times","location":"kmath-ast/space.kscience.kmath.ast.rendering/-multiplication-syntax/times.html","searchKeys":["times","var times: Boolean","space.kscience.kmath.ast.rendering.MultiplicationSyntax.times"]},{"name":"var useOperatorForm: Boolean","description":"space.kscience.kmath.ast.rendering.ExponentSyntax.useOperatorForm","location":"kmath-ast/space.kscience.kmath.ast.rendering/-exponent-syntax/use-operator-form.html","searchKeys":["useOperatorForm","var useOperatorForm: Boolean","space.kscience.kmath.ast.rendering.ExponentSyntax.useOperatorForm"]},{"name":"CHOLESKY()","description":"space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-c-h-o-l-e-s-k-y/index.html","searchKeys":["CHOLESKY","CHOLESKY()","space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY"]},{"name":"EIGEN()","description":"space.kscience.kmath.commons.linear.CMDecomposition.EIGEN","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-e-i-g-e-n/index.html","searchKeys":["EIGEN","EIGEN()","space.kscience.kmath.commons.linear.CMDecomposition.EIGEN"]},{"name":"LEGANDRE()","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e/index.html","searchKeys":["LEGANDRE","LEGANDRE()","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE"]},{"name":"LEGANDREHP()","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e-h-p/index.html","searchKeys":["LEGANDREHP","LEGANDREHP()","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP"]},{"name":"LUP()","description":"space.kscience.kmath.commons.linear.CMDecomposition.LUP","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-l-u-p/index.html","searchKeys":["LUP","LUP()","space.kscience.kmath.commons.linear.CMDecomposition.LUP"]},{"name":"QR()","description":"space.kscience.kmath.commons.linear.CMDecomposition.QR","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-q-r/index.html","searchKeys":["QR","QR()","space.kscience.kmath.commons.linear.CMDecomposition.QR"]},{"name":"RRQR()","description":"space.kscience.kmath.commons.linear.CMDecomposition.RRQR","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-r-r-q-r/index.html","searchKeys":["RRQR","RRQR()","space.kscience.kmath.commons.linear.CMDecomposition.RRQR"]},{"name":"UNIFORM()","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-u-n-i-f-o-r-m/index.html","searchKeys":["UNIFORM","UNIFORM()","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM"]},{"name":"class CMGaussRuleIntegrator(numpoints: Int, type: CMGaussRuleIntegrator.GaussRule) : Integrator<UnivariateIntegrand<Double>> ","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/index.html","searchKeys":["CMGaussRuleIntegrator","class CMGaussRuleIntegrator(numpoints: Int, type: CMGaussRuleIntegrator.GaussRule) : Integrator<UnivariateIntegrand<Double>> ","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator"]},{"name":"class CMIntegrator(defaultMaxCalls: Int, integratorBuilder: (Integrand) -> UnivariateIntegrator) : Integrator<UnivariateIntegrand<Double>> ","description":"space.kscience.kmath.commons.integration.CMIntegrator","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/index.html","searchKeys":["CMIntegrator","class CMIntegrator(defaultMaxCalls: Int, integratorBuilder: (Integrand) -> UnivariateIntegrator) : Integrator<UnivariateIntegrand<Double>> ","space.kscience.kmath.commons.integration.CMIntegrator"]},{"name":"class CMMatrix(origin: RealMatrix) : Structure2D<Double> ","description":"space.kscience.kmath.commons.linear.CMMatrix","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/index.html","searchKeys":["CMMatrix","class CMMatrix(origin: RealMatrix) : Structure2D<Double> ","space.kscience.kmath.commons.linear.CMMatrix"]},{"name":"class CMOptimizerData(data: List<SymbolIndexer.() -> OptimizationData>) : OptimizationFeature","description":"space.kscience.kmath.commons.optimization.CMOptimizerData","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-data/index.html","searchKeys":["CMOptimizerData","class CMOptimizerData(data: List<SymbolIndexer.() -> OptimizationData>) : OptimizationFeature","space.kscience.kmath.commons.optimization.CMOptimizerData"]},{"name":"class CMOptimizerEngine(optimizerBuilder: () -> MultivariateOptimizer) : OptimizationFeature","description":"space.kscience.kmath.commons.optimization.CMOptimizerEngine","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-engine/index.html","searchKeys":["CMOptimizerEngine","class CMOptimizerEngine(optimizerBuilder: () -> MultivariateOptimizer) : OptimizationFeature","space.kscience.kmath.commons.optimization.CMOptimizerEngine"]},{"name":"class CMRandomGeneratorWrapper(factory: (IntArray) -> RandomGenerator) : RandomGenerator","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/index.html","searchKeys":["CMRandomGeneratorWrapper","class CMRandomGeneratorWrapper(factory: (IntArray) -> RandomGenerator) : RandomGenerator","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper"]},{"name":"class DerivativeStructureExpression(function: DerivativeStructureField.() -> DerivativeStructure) : DifferentiableExpression<Double> ","description":"space.kscience.kmath.commons.expressions.DerivativeStructureExpression","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-expression/index.html","searchKeys":["DerivativeStructureExpression","class DerivativeStructureExpression(function: DerivativeStructureField.() -> DerivativeStructure) : DifferentiableExpression<Double> ","space.kscience.kmath.commons.expressions.DerivativeStructureExpression"]},{"name":"class DerivativeStructureField(order: Int, bindings: Map<Symbol, Double>) : ExtendedField<DerivativeStructure> , ExpressionAlgebra<Double, DerivativeStructure> , NumbersAddOperations<DerivativeStructure> ","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/index.html","searchKeys":["DerivativeStructureField","class DerivativeStructureField(order: Int, bindings: Map<Symbol, Double>) : ExtendedField<DerivativeStructure> , ExpressionAlgebra<Double, DerivativeStructure> , NumbersAddOperations<DerivativeStructure> ","space.kscience.kmath.commons.expressions.DerivativeStructureField"]},{"name":"const val DEFAULT_ABSOLUTE_TOLERANCE: Double = 1e-4","description":"space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_ABSOLUTE_TOLERANCE","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/-d-e-f-a-u-l-t_-a-b-s-o-l-u-t-e_-t-o-l-e-r-a-n-c-e.html","searchKeys":["DEFAULT_ABSOLUTE_TOLERANCE","const val DEFAULT_ABSOLUTE_TOLERANCE: Double = 1e-4","space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_ABSOLUTE_TOLERANCE"]},{"name":"const val DEFAULT_MAX_ITER: Int = 1000","description":"space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_MAX_ITER","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/-d-e-f-a-u-l-t_-m-a-x_-i-t-e-r.html","searchKeys":["DEFAULT_MAX_ITER","const val DEFAULT_MAX_ITER: Int = 1000","space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_MAX_ITER"]},{"name":"const val DEFAULT_RELATIVE_TOLERANCE: Double = 1e-4","description":"space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_RELATIVE_TOLERANCE","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/-d-e-f-a-u-l-t_-r-e-l-a-t-i-v-e_-t-o-l-e-r-a-n-c-e.html","searchKeys":["DEFAULT_RELATIVE_TOLERANCE","const val DEFAULT_RELATIVE_TOLERANCE: Double = 1e-4","space.kscience.kmath.commons.optimization.CMOptimizer.DEFAULT_RELATIVE_TOLERANCE"]},{"name":"enum CMDecomposition : Enum<CMDecomposition> ","description":"space.kscience.kmath.commons.linear.CMDecomposition","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/index.html","searchKeys":["CMDecomposition","enum CMDecomposition : Enum<CMDecomposition> ","space.kscience.kmath.commons.linear.CMDecomposition"]},{"name":"enum GaussRule : Enum<CMGaussRuleIntegrator.GaussRule> ","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/index.html","searchKeys":["GaussRule","enum GaussRule : Enum<CMGaussRuleIntegrator.GaussRule> ","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule"]},{"name":"fun CMGaussRuleIntegrator(numpoints: Int, type: CMGaussRuleIntegrator.GaussRule = GaussRule.LEGANDRE)","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.CMGaussRuleIntegrator","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-c-m-gauss-rule-integrator.html","searchKeys":["CMGaussRuleIntegrator","fun CMGaussRuleIntegrator(numpoints: Int, type: CMGaussRuleIntegrator.GaussRule = GaussRule.LEGANDRE)","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.CMGaussRuleIntegrator"]},{"name":"fun CMIntegrator(defaultMaxCalls: Int = 200, integratorBuilder: (Integrand) -> UnivariateIntegrator)","description":"space.kscience.kmath.commons.integration.CMIntegrator.CMIntegrator","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/-c-m-integrator.html","searchKeys":["CMIntegrator","fun CMIntegrator(defaultMaxCalls: Int = 200, integratorBuilder: (Integrand) -> UnivariateIntegrator)","space.kscience.kmath.commons.integration.CMIntegrator.CMIntegrator"]},{"name":"fun CMLinearSpace.inverse(a: Matrix<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMMatrix","description":"space.kscience.kmath.commons.linear.inverse","location":"kmath-commons/space.kscience.kmath.commons.linear/inverse.html","searchKeys":["inverse","fun CMLinearSpace.inverse(a: Matrix<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMMatrix","space.kscience.kmath.commons.linear.inverse"]},{"name":"fun CMLinearSpace.lupSolver(): LinearSolver<Double>","description":"space.kscience.kmath.commons.linear.lupSolver","location":"kmath-commons/space.kscience.kmath.commons.linear/lup-solver.html","searchKeys":["lupSolver","fun CMLinearSpace.lupSolver(): LinearSolver<Double>","space.kscience.kmath.commons.linear.lupSolver"]},{"name":"fun CMLinearSpace.solve(a: Matrix<Double>, b: Matrix<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMMatrix","description":"space.kscience.kmath.commons.linear.solve","location":"kmath-commons/space.kscience.kmath.commons.linear/solve.html","searchKeys":["solve","fun CMLinearSpace.solve(a: Matrix<Double>, b: Matrix<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMMatrix","space.kscience.kmath.commons.linear.solve"]},{"name":"fun CMLinearSpace.solve(a: Matrix<Double>, b: Point<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMVector","description":"space.kscience.kmath.commons.linear.solve","location":"kmath-commons/space.kscience.kmath.commons.linear/solve.html","searchKeys":["solve","fun CMLinearSpace.solve(a: Matrix<Double>, b: Point<Double>, decomposition: CMDecomposition = CMDecomposition.LUP): CMVector","space.kscience.kmath.commons.linear.solve"]},{"name":"fun CMLinearSpace.solver(decomposition: CMDecomposition): LinearSolver<Double>","description":"space.kscience.kmath.commons.linear.solver","location":"kmath-commons/space.kscience.kmath.commons.linear/solver.html","searchKeys":["solver","fun CMLinearSpace.solver(decomposition: CMDecomposition): LinearSolver<Double>","space.kscience.kmath.commons.linear.solver"]},{"name":"fun CMMatrix(origin: RealMatrix)","description":"space.kscience.kmath.commons.linear.CMMatrix.CMMatrix","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/-c-m-matrix.html","searchKeys":["CMMatrix","fun CMMatrix(origin: RealMatrix)","space.kscience.kmath.commons.linear.CMMatrix.CMMatrix"]},{"name":"fun CMOptimizerData(data: List<SymbolIndexer.() -> OptimizationData>)","description":"space.kscience.kmath.commons.optimization.CMOptimizerData.CMOptimizerData","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-data/-c-m-optimizer-data.html","searchKeys":["CMOptimizerData","fun CMOptimizerData(data: List<SymbolIndexer.() -> OptimizationData>)","space.kscience.kmath.commons.optimization.CMOptimizerData.CMOptimizerData"]},{"name":"fun CMOptimizerData(vararg data: SymbolIndexer.() -> OptimizationData)","description":"space.kscience.kmath.commons.optimization.CMOptimizerData.CMOptimizerData","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-data/-c-m-optimizer-data.html","searchKeys":["CMOptimizerData","fun CMOptimizerData(vararg data: SymbolIndexer.() -> OptimizationData)","space.kscience.kmath.commons.optimization.CMOptimizerData.CMOptimizerData"]},{"name":"fun CMOptimizerEngine(optimizerBuilder: () -> MultivariateOptimizer)","description":"space.kscience.kmath.commons.optimization.CMOptimizerEngine.CMOptimizerEngine","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-engine/-c-m-optimizer-engine.html","searchKeys":["CMOptimizerEngine","fun CMOptimizerEngine(optimizerBuilder: () -> MultivariateOptimizer)","space.kscience.kmath.commons.optimization.CMOptimizerEngine.CMOptimizerEngine"]},{"name":"fun CMRandomGeneratorWrapper(factory: (IntArray) -> RandomGenerator)","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.CMRandomGeneratorWrapper","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/-c-m-random-generator-wrapper.html","searchKeys":["CMRandomGeneratorWrapper","fun CMRandomGeneratorWrapper(factory: (IntArray) -> RandomGenerator)","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.CMRandomGeneratorWrapper"]},{"name":"fun CMVector(origin: RealVector)","description":"space.kscience.kmath.commons.linear.CMVector.CMVector","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/-c-m-vector.html","searchKeys":["CMVector","fun CMVector(origin: RealVector)","space.kscience.kmath.commons.linear.CMVector.CMVector"]},{"name":"fun DerivativeStructure.derivative(symbols: List<Symbol>): Double","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.derivative","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/derivative.html","searchKeys":["derivative","fun DerivativeStructure.derivative(symbols: List<Symbol>): Double","space.kscience.kmath.commons.expressions.DerivativeStructureField.derivative"]},{"name":"fun DerivativeStructure.derivative(vararg symbols: Symbol): Double","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.derivative","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/derivative.html","searchKeys":["derivative","fun DerivativeStructure.derivative(vararg symbols: Symbol): Double","space.kscience.kmath.commons.expressions.DerivativeStructureField.derivative"]},{"name":"fun DerivativeStructureExpression(function: DerivativeStructureField.() -> DerivativeStructure)","description":"space.kscience.kmath.commons.expressions.DerivativeStructureExpression.DerivativeStructureExpression","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-expression/-derivative-structure-expression.html","searchKeys":["DerivativeStructureExpression","fun DerivativeStructureExpression(function: DerivativeStructureField.() -> DerivativeStructure)","space.kscience.kmath.commons.expressions.DerivativeStructureExpression.DerivativeStructureExpression"]},{"name":"fun DerivativeStructureField(order: Int, bindings: Map<Symbol, Double>)","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureField","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-field.html","searchKeys":["DerivativeStructureField","fun DerivativeStructureField(order: Int, bindings: Map<Symbol, Double>)","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureField"]},{"name":"fun DerivativeStructureSymbol(size: Int, index: Int, symbol: Symbol, value: Double)","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.DerivativeStructureSymbol","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/-derivative-structure-symbol.html","searchKeys":["DerivativeStructureSymbol","fun DerivativeStructureSymbol(size: Int, index: Int, symbol: Symbol, value: Double)","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.DerivativeStructureSymbol"]},{"name":"fun Flow<Buffer<Complex>>.FFT(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Buffer<Complex>>","description":"space.kscience.kmath.commons.transform.FFT","location":"kmath-commons/space.kscience.kmath.commons.transform/-f-f-t.html","searchKeys":["FFT","fun Flow<Buffer<Complex>>.FFT(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Buffer<Complex>>","space.kscience.kmath.commons.transform.FFT"]},{"name":"fun Flow<Buffer<Double>>.FFT(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Buffer<Complex>>","description":"space.kscience.kmath.commons.transform.FFT","location":"kmath-commons/space.kscience.kmath.commons.transform/-f-f-t.html","searchKeys":["FFT","fun Flow<Buffer<Double>>.FFT(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Buffer<Complex>>","space.kscience.kmath.commons.transform.FFT"]},{"name":"fun Flow<Complex>.real(): Flow<Double>","description":"space.kscience.kmath.commons.transform.real","location":"kmath-commons/space.kscience.kmath.commons.transform/real.html","searchKeys":["real","fun Flow<Complex>.real(): Flow<Double>","space.kscience.kmath.commons.transform.real"]},{"name":"fun Flow<Double>.FFT(bufferSize: Int = Int.MAX_VALUE, normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Complex>","description":"space.kscience.kmath.commons.transform.FFT","location":"kmath-commons/space.kscience.kmath.commons.transform/-f-f-t.html","searchKeys":["FFT","fun Flow<Double>.FFT(bufferSize: Int = Int.MAX_VALUE, normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): Flow<Complex>","space.kscience.kmath.commons.transform.FFT"]},{"name":"fun FunctionOptimizationBuilder<Double>.cmEngine(optimizerBuilder: () -> MultivariateOptimizer)","description":"space.kscience.kmath.commons.optimization.cmEngine","location":"kmath-commons/space.kscience.kmath.commons.optimization/cm-engine.html","searchKeys":["cmEngine","fun FunctionOptimizationBuilder<Double>.cmEngine(optimizerBuilder: () -> MultivariateOptimizer)","space.kscience.kmath.commons.optimization.cmEngine"]},{"name":"fun FunctionOptimizationBuilder<Double>.cmOptimizationData(data: SymbolIndexer.() -> OptimizationData)","description":"space.kscience.kmath.commons.optimization.cmOptimizationData","location":"kmath-commons/space.kscience.kmath.commons.optimization/cm-optimization-data.html","searchKeys":["cmOptimizationData","fun FunctionOptimizationBuilder<Double>.cmOptimizationData(data: SymbolIndexer.() -> OptimizationData)","space.kscience.kmath.commons.optimization.cmOptimizationData"]},{"name":"fun FunctionOptimizationBuilder<Double>.simplexSteps(vararg steps: Pair<Symbol, Double>)","description":"space.kscience.kmath.commons.optimization.simplexSteps","location":"kmath-commons/space.kscience.kmath.commons.optimization/simplex-steps.html","searchKeys":["simplexSteps","fun FunctionOptimizationBuilder<Double>.simplexSteps(vararg steps: Pair<Symbol, Double>)","space.kscience.kmath.commons.optimization.simplexSteps"]},{"name":"fun Matrix<Double>.toCM(): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.toCM","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/to-c-m.html","searchKeys":["toCM","fun Matrix<Double>.toCM(): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.toCM"]},{"name":"fun Point<Double>.toCM(): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.toCM","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/to-c-m.html","searchKeys":["toCM","fun Point<Double>.toCM(): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.toCM"]},{"name":"fun RealVector.toPoint(): CMVector","description":"space.kscience.kmath.commons.linear.toPoint","location":"kmath-commons/space.kscience.kmath.commons.linear/to-point.html","searchKeys":["toPoint","fun RealVector.toPoint(): CMVector","space.kscience.kmath.commons.linear.toPoint"]},{"name":"fun bindSymbol(symbol: Symbol): DerivativeStructureField.DerivativeStructureSymbol","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbol","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/bind-symbol.html","searchKeys":["bindSymbol","fun bindSymbol(symbol: Symbol): DerivativeStructureField.DerivativeStructureSymbol","space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbol"]},{"name":"fun bindSymbolOrNull(symbol: Symbol): DerivativeStructureField.DerivativeStructureSymbol?","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbolOrNull","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","fun bindSymbolOrNull(symbol: Symbol): DerivativeStructureField.DerivativeStructureSymbol?","space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbolOrNull"]},{"name":"fun cosine(normalization: DctNormalization = DctNormalization.STANDARD_DCT_I, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","description":"space.kscience.kmath.commons.transform.Transformations.cosine","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/cosine.html","searchKeys":["cosine","fun cosine(normalization: DctNormalization = DctNormalization.STANDARD_DCT_I, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","space.kscience.kmath.commons.transform.Transformations.cosine"]},{"name":"fun fourier(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Complex, Complex>","description":"space.kscience.kmath.commons.transform.Transformations.fourier","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/fourier.html","searchKeys":["fourier","fun fourier(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Complex, Complex>","space.kscience.kmath.commons.transform.Transformations.fourier"]},{"name":"fun hadamard(direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","description":"space.kscience.kmath.commons.transform.Transformations.hadamard","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/hadamard.html","searchKeys":["hadamard","fun hadamard(direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","space.kscience.kmath.commons.transform.Transformations.hadamard"]},{"name":"fun integrate(range: ClosedRange<Double>, numPoints: Int = 100, type: CMGaussRuleIntegrator.GaussRule = GaussRule.LEGANDRE, function: (Double) -> Double): Double","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.Companion.integrate","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-companion/integrate.html","searchKeys":["integrate","fun integrate(range: ClosedRange<Double>, numPoints: Int = 100, type: CMGaussRuleIntegrator.GaussRule = GaussRule.LEGANDRE, function: (Double) -> Double): Double","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.Companion.integrate"]},{"name":"fun legandre(numPoints: Int, defaultMaxCalls: Int = numPoints * 5): CMIntegrator","description":"space.kscience.kmath.commons.integration.CMIntegrator.Companion.legandre","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/-companion/legandre.html","searchKeys":["legandre","fun legandre(numPoints: Int, defaultMaxCalls: Int = numPoints * 5): CMIntegrator","space.kscience.kmath.commons.integration.CMIntegrator.Companion.legandre"]},{"name":"fun power(arg: DerivativeStructure, pow: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.power","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/power.html","searchKeys":["power","fun power(arg: DerivativeStructure, pow: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.power"]},{"name":"fun realFourier(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Complex>","description":"space.kscience.kmath.commons.transform.Transformations.realFourier","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/real-fourier.html","searchKeys":["realFourier","fun realFourier(normalization: DftNormalization = DftNormalization.STANDARD, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Complex>","space.kscience.kmath.commons.transform.Transformations.realFourier"]},{"name":"fun simpson(defaultMaxCalls: Int = 200): CMIntegrator","description":"space.kscience.kmath.commons.integration.CMIntegrator.Companion.simpson","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/-companion/simpson.html","searchKeys":["simpson","fun simpson(defaultMaxCalls: Int = 200): CMIntegrator","space.kscience.kmath.commons.integration.CMIntegrator.Companion.simpson"]},{"name":"fun sine(normalization: DstNormalization = DstNormalization.STANDARD_DST_I, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","description":"space.kscience.kmath.commons.transform.Transformations.sine","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/sine.html","searchKeys":["sine","fun sine(normalization: DstNormalization = DstNormalization.STANDARD_DST_I, direction: TransformType = TransformType.FORWARD): SuspendBufferTransform<Double, Double>","space.kscience.kmath.commons.transform.Transformations.sine"]},{"name":"infix fun CMMatrix.dot(other: CMMatrix): CMMatrix","description":"space.kscience.kmath.commons.linear.dot","location":"kmath-commons/space.kscience.kmath.commons.linear/dot.html","searchKeys":["dot","infix fun CMMatrix.dot(other: CMMatrix): CMMatrix","space.kscience.kmath.commons.linear.dot"]},{"name":"inner class DerivativeStructureSymbol(size: Int, index: Int, symbol: Symbol, value: Double) : DerivativeStructure, Symbol","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/index.html","searchKeys":["DerivativeStructureSymbol","inner class DerivativeStructureSymbol(size: Int, index: Int, symbol: Symbol, value: Double) : DerivativeStructure, Symbol","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol"]},{"name":"object CMLinearSpace : LinearSpace<Double, DoubleField> ","description":"space.kscience.kmath.commons.linear.CMLinearSpace","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/index.html","searchKeys":["CMLinearSpace","object CMLinearSpace : LinearSpace<Double, DoubleField> ","space.kscience.kmath.commons.linear.CMLinearSpace"]},{"name":"object CMOptimizer : Optimizer<Double, FunctionOptimization<Double>> ","description":"space.kscience.kmath.commons.optimization.CMOptimizer","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/index.html","searchKeys":["CMOptimizer","object CMOptimizer : Optimizer<Double, FunctionOptimization<Double>> ","space.kscience.kmath.commons.optimization.CMOptimizer"]},{"name":"object Companion","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.Companion","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.commons.integration.CMIntegrator.Companion","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.commons.integration.CMIntegrator.Companion"]},{"name":"object DSProcessor : AutoDiffProcessor<Double, DerivativeStructure, DerivativeStructureField> ","description":"space.kscience.kmath.commons.expressions.DSProcessor","location":"kmath-commons/space.kscience.kmath.commons.expressions/-d-s-processor/index.html","searchKeys":["DSProcessor","object DSProcessor : AutoDiffProcessor<Double, DerivativeStructure, DerivativeStructureField> ","space.kscience.kmath.commons.expressions.DSProcessor"]},{"name":"object Transformations","description":"space.kscience.kmath.commons.transform.Transformations","location":"kmath-commons/space.kscience.kmath.commons.transform/-transformations/index.html","searchKeys":["Transformations","object Transformations","space.kscience.kmath.commons.transform.Transformations"]},{"name":"open infix override fun Matrix<Double>.dot(other: Matrix<Double>): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.dot","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(other: Matrix<Double>): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.dot"]},{"name":"open infix override fun Matrix<Double>.dot(vector: Point<Double>): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.dot","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/dot.html","searchKeys":["dot","open infix override fun Matrix<Double>.dot(vector: Point<Double>): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.dot"]},{"name":"open operator override fun DerivativeStructure.minus(b: Number): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.minus","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/minus.html","searchKeys":["minus","open operator override fun DerivativeStructure.minus(b: Number): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.minus"]},{"name":"open operator override fun DerivativeStructure.plus(b: Number): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.plus","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/plus.html","searchKeys":["plus","open operator override fun DerivativeStructure.plus(b: Number): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.plus"]},{"name":"open operator override fun DerivativeStructure.unaryMinus(): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.unaryMinus","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/unary-minus.html","searchKeys":["unaryMinus","open operator override fun DerivativeStructure.unaryMinus(): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.unaryMinus"]},{"name":"open operator override fun Double.times(m: Matrix<Double>): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.times","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/times.html","searchKeys":["times","open operator override fun Double.times(m: Matrix<Double>): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.times"]},{"name":"open operator override fun Double.times(v: Point<Double>): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.times","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/times.html","searchKeys":["times","open operator override fun Double.times(v: Point<Double>): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.times"]},{"name":"open operator override fun Matrix<Double>.minus(other: Matrix<Double>): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.minus","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/minus.html","searchKeys":["minus","open operator override fun Matrix<Double>.minus(other: Matrix<Double>): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.minus"]},{"name":"open operator override fun Matrix<Double>.plus(other: Matrix<Double>): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.plus","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/plus.html","searchKeys":["plus","open operator override fun Matrix<Double>.plus(other: Matrix<Double>): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.plus"]},{"name":"open operator override fun Matrix<Double>.times(value: Double): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.times","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/times.html","searchKeys":["times","open operator override fun Matrix<Double>.times(value: Double): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.times"]},{"name":"open operator override fun Number.minus(b: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.minus","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/minus.html","searchKeys":["minus","open operator override fun Number.minus(b: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.minus"]},{"name":"open operator override fun Number.plus(b: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.plus","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/plus.html","searchKeys":["plus","open operator override fun Number.plus(b: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.plus"]},{"name":"open operator override fun Point<Double>.minus(other: Point<Double>): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.minus","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/minus.html","searchKeys":["minus","open operator override fun Point<Double>.minus(other: Point<Double>): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.minus"]},{"name":"open operator override fun Point<Double>.plus(other: Point<Double>): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.plus","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/plus.html","searchKeys":["plus","open operator override fun Point<Double>.plus(other: Point<Double>): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.plus"]},{"name":"open operator override fun Point<Double>.times(value: Double): CMVector","description":"space.kscience.kmath.commons.linear.CMLinearSpace.times","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/times.html","searchKeys":["times","open operator override fun Point<Double>.times(value: Double): CMVector","space.kscience.kmath.commons.linear.CMLinearSpace.times"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.equals","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.equals"]},{"name":"open operator override fun get(i: Int, j: Int): Double","description":"space.kscience.kmath.commons.linear.CMMatrix.get","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/get.html","searchKeys":["get","open operator override fun get(i: Int, j: Int): Double","space.kscience.kmath.commons.linear.CMMatrix.get"]},{"name":"open operator override fun get(index: Int): Double","description":"space.kscience.kmath.commons.linear.CMVector.get","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","space.kscience.kmath.commons.linear.CMVector.get"]},{"name":"open operator override fun invoke(arguments: Map<Symbol, Double>): Double","description":"space.kscience.kmath.commons.expressions.DerivativeStructureExpression.invoke","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-expression/invoke.html","searchKeys":["invoke","open operator override fun invoke(arguments: Map<Symbol, Double>): Double","space.kscience.kmath.commons.expressions.DerivativeStructureExpression.invoke"]},{"name":"open operator override fun iterator(): Iterator<Double>","description":"space.kscience.kmath.commons.linear.CMVector.iterator","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double>","space.kscience.kmath.commons.linear.CMVector.iterator"]},{"name":"open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","description":"space.kscience.kmath.commons.linear.CMLinearSpace.computeFeature","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/compute-feature.html","searchKeys":["computeFeature","open override fun <F : StructureFeature> computeFeature(structure: Matrix<Double>, type: KClass<out F>): F?","space.kscience.kmath.commons.linear.CMLinearSpace.computeFeature"]},{"name":"open override fun acos(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.acos","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/acos.html","searchKeys":["acos","open override fun acos(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.acos"]},{"name":"open override fun acosh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.acosh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/acosh.html","searchKeys":["acosh","open override fun acosh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.acosh"]},{"name":"open override fun add(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.add","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/add.html","searchKeys":["add","open override fun add(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.add"]},{"name":"open override fun asin(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.asin","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/asin.html","searchKeys":["asin","open override fun asin(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.asin"]},{"name":"open override fun asinh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.asinh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/asinh.html","searchKeys":["asinh","open override fun asinh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.asinh"]},{"name":"open override fun atan(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.atan","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/atan.html","searchKeys":["atan","open override fun atan(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.atan"]},{"name":"open override fun atanh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.atanh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/atanh.html","searchKeys":["atanh","open override fun atanh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.atanh"]},{"name":"open override fun bindSymbol(value: String): DerivativeStructureField.DerivativeStructureSymbol","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbol","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/bind-symbol.html","searchKeys":["bindSymbol","open override fun bindSymbol(value: String): DerivativeStructureField.DerivativeStructureSymbol","space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbol"]},{"name":"open override fun bindSymbolOrNull(value: String): DerivativeStructureField.DerivativeStructureSymbol?","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbolOrNull","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/bind-symbol-or-null.html","searchKeys":["bindSymbolOrNull","open override fun bindSymbolOrNull(value: String): DerivativeStructureField.DerivativeStructureSymbol?","space.kscience.kmath.commons.expressions.DerivativeStructureField.bindSymbolOrNull"]},{"name":"open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): CMMatrix","description":"space.kscience.kmath.commons.linear.CMLinearSpace.buildMatrix","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/build-matrix.html","searchKeys":["buildMatrix","open override fun buildMatrix(rows: Int, columns: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): CMMatrix","space.kscience.kmath.commons.linear.CMLinearSpace.buildMatrix"]},{"name":"open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): Point<Double>","description":"space.kscience.kmath.commons.linear.CMLinearSpace.buildVector","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/build-vector.html","searchKeys":["buildVector","open override fun buildVector(size: Int, initializer: DoubleField.(Int) -> Double): Point<Double>","space.kscience.kmath.commons.linear.CMLinearSpace.buildVector"]},{"name":"open override fun const(value: Double): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.const","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/const.html","searchKeys":["const","open override fun const(value: Double): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.const"]},{"name":"open override fun cos(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.cos","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/cos.html","searchKeys":["cos","open override fun cos(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.cos"]},{"name":"open override fun cosh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.cosh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/cosh.html","searchKeys":["cosh","open override fun cosh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.cosh"]},{"name":"open override fun derivativeOrNull(symbols: List<Symbol>): Expression<Double>","description":"space.kscience.kmath.commons.expressions.DerivativeStructureExpression.derivativeOrNull","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","open override fun derivativeOrNull(symbols: List<Symbol>): Expression<Double>","space.kscience.kmath.commons.expressions.DerivativeStructureExpression.derivativeOrNull"]},{"name":"open override fun differentiate(function: DerivativeStructureField.() -> DerivativeStructure): DerivativeStructureExpression","description":"space.kscience.kmath.commons.expressions.DSProcessor.differentiate","location":"kmath-commons/space.kscience.kmath.commons.expressions/-d-s-processor/differentiate.html","searchKeys":["differentiate","open override fun differentiate(function: DerivativeStructureField.() -> DerivativeStructure): DerivativeStructureExpression","space.kscience.kmath.commons.expressions.DSProcessor.differentiate"]},{"name":"open override fun divide(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.divide","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/divide.html","searchKeys":["divide","open override fun divide(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.divide"]},{"name":"open override fun exp(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.exp","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/exp.html","searchKeys":["exp","open override fun exp(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.exp"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.hashCode","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.hashCode"]},{"name":"open override fun ln(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.ln","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/ln.html","searchKeys":["ln","open override fun ln(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.ln"]},{"name":"open override fun multiply(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.multiply","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/multiply.html","searchKeys":["multiply","open override fun multiply(a: DerivativeStructure, b: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.multiply"]},{"name":"open override fun nextBoolean(): Boolean","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextBoolean","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-boolean.html","searchKeys":["nextBoolean","open override fun nextBoolean(): Boolean","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextBoolean"]},{"name":"open override fun nextBytes(bytes: ByteArray)","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextBytes","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-bytes.html","searchKeys":["nextBytes","open override fun nextBytes(bytes: ByteArray)","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextBytes"]},{"name":"open override fun nextDouble(): Double","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextDouble","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-double.html","searchKeys":["nextDouble","open override fun nextDouble(): Double","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextDouble"]},{"name":"open override fun nextFloat(): Float","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextFloat","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-float.html","searchKeys":["nextFloat","open override fun nextFloat(): Float","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextFloat"]},{"name":"open override fun nextGaussian(): Double","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextGaussian","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-gaussian.html","searchKeys":["nextGaussian","open override fun nextGaussian(): Double","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextGaussian"]},{"name":"open override fun nextInt(): Int","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextInt","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-int.html","searchKeys":["nextInt","open override fun nextInt(): Int","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextInt"]},{"name":"open override fun nextInt(n: Int): Int","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextInt","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-int.html","searchKeys":["nextInt","open override fun nextInt(n: Int): Int","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextInt"]},{"name":"open override fun nextLong(): Long","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextLong","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/next-long.html","searchKeys":["nextLong","open override fun nextLong(): Long","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.nextLong"]},{"name":"open override fun number(value: Number): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.number","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/number.html","searchKeys":["number","open override fun number(value: Number): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.number"]},{"name":"open override fun power(arg: DerivativeStructure, pow: Number): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.power","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/power.html","searchKeys":["power","open override fun power(arg: DerivativeStructure, pow: Number): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.power"]},{"name":"open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.process","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.process"]},{"name":"open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","description":"space.kscience.kmath.commons.integration.CMIntegrator.process","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","space.kscience.kmath.commons.integration.CMIntegrator.process"]},{"name":"open override fun scale(a: DerivativeStructure, value: Double): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.scale","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/scale.html","searchKeys":["scale","open override fun scale(a: DerivativeStructure, value: Double): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.scale"]},{"name":"open override fun setSeed(seed: Int)","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/set-seed.html","searchKeys":["setSeed","open override fun setSeed(seed: Int)","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed"]},{"name":"open override fun setSeed(seed: IntArray)","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/set-seed.html","searchKeys":["setSeed","open override fun setSeed(seed: IntArray)","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed"]},{"name":"open override fun setSeed(seed: Long)","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/set-seed.html","searchKeys":["setSeed","open override fun setSeed(seed: Long)","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.setSeed"]},{"name":"open override fun sin(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.sin","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/sin.html","searchKeys":["sin","open override fun sin(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.sin"]},{"name":"open override fun sinh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.sinh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/sinh.html","searchKeys":["sinh","open override fun sinh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.sinh"]},{"name":"open override fun tan(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.tan","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/tan.html","searchKeys":["tan","open override fun tan(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.tan"]},{"name":"open override fun tanh(arg: DerivativeStructure): DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.tanh","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/tanh.html","searchKeys":["tanh","open override fun tanh(arg: DerivativeStructure): DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.tanh"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.toString","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.commons.linear.CMVector.toString","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.commons.linear.CMVector.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.commons.optimization.CMOptimizerData.toString","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-data/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.commons.optimization.CMOptimizerData.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.commons.optimization.CMOptimizerEngine.toString","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-engine/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.commons.optimization.CMOptimizerEngine.toString"]},{"name":"open override val colNum: Int","description":"space.kscience.kmath.commons.linear.CMMatrix.colNum","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/col-num.html","searchKeys":["colNum","open override val colNum: Int","space.kscience.kmath.commons.linear.CMMatrix.colNum"]},{"name":"open override val elementAlgebra: DoubleField","description":"space.kscience.kmath.commons.linear.CMLinearSpace.elementAlgebra","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-linear-space/element-algebra.html","searchKeys":["elementAlgebra","open override val elementAlgebra: DoubleField","space.kscience.kmath.commons.linear.CMLinearSpace.elementAlgebra"]},{"name":"open override val identity: String","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.identity","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/-derivative-structure-symbol/identity.html","searchKeys":["identity","open override val identity: String","space.kscience.kmath.commons.expressions.DerivativeStructureField.DerivativeStructureSymbol.identity"]},{"name":"open override val one: DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.one","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/one.html","searchKeys":["one","open override val one: DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.one"]},{"name":"open override val rowNum: Int","description":"space.kscience.kmath.commons.linear.CMMatrix.rowNum","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/row-num.html","searchKeys":["rowNum","open override val rowNum: Int","space.kscience.kmath.commons.linear.CMMatrix.rowNum"]},{"name":"open override val size: Int","description":"space.kscience.kmath.commons.linear.CMVector.size","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.commons.linear.CMVector.size"]},{"name":"open override val zero: DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.zero","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/zero.html","searchKeys":["zero","open override val zero: DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureField.zero"]},{"name":"open suspend override fun optimize(problem: FunctionOptimization<Double>): FunctionOptimization<Double>","description":"space.kscience.kmath.commons.optimization.CMOptimizer.optimize","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/optimize.html","searchKeys":["optimize","open suspend override fun optimize(problem: FunctionOptimization<Double>): FunctionOptimization<Double>","space.kscience.kmath.commons.optimization.CMOptimizer.optimize"]},{"name":"operator fun CMMatrix.minus(other: CMMatrix): CMMatrix","description":"space.kscience.kmath.commons.linear.minus","location":"kmath-commons/space.kscience.kmath.commons.linear/minus.html","searchKeys":["minus","operator fun CMMatrix.minus(other: CMMatrix): CMMatrix","space.kscience.kmath.commons.linear.minus"]},{"name":"operator fun CMMatrix.plus(other: CMMatrix): CMMatrix","description":"space.kscience.kmath.commons.linear.plus","location":"kmath-commons/space.kscience.kmath.commons.linear/plus.html","searchKeys":["plus","operator fun CMMatrix.plus(other: CMMatrix): CMMatrix","space.kscience.kmath.commons.linear.plus"]},{"name":"operator fun PointValuePair.component1(): DoubleArray","description":"space.kscience.kmath.commons.optimization.component1","location":"kmath-commons/space.kscience.kmath.commons.optimization/component1.html","searchKeys":["component1","operator fun PointValuePair.component1(): DoubleArray","space.kscience.kmath.commons.optimization.component1"]},{"name":"operator fun PointValuePair.component2(): Double","description":"space.kscience.kmath.commons.optimization.component2","location":"kmath-commons/space.kscience.kmath.commons.optimization/component2.html","searchKeys":["component2","operator fun PointValuePair.component2(): Double","space.kscience.kmath.commons.optimization.component2"]},{"name":"val data: List<SymbolIndexer.() -> OptimizationData>","description":"space.kscience.kmath.commons.optimization.CMOptimizerData.data","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-data/data.html","searchKeys":["data","val data: List<SymbolIndexer.() -> OptimizationData>","space.kscience.kmath.commons.optimization.CMOptimizerData.data"]},{"name":"val defaultConvergenceChecker: SimpleValueChecker","description":"space.kscience.kmath.commons.optimization.CMOptimizer.defaultConvergenceChecker","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer/default-convergence-checker.html","searchKeys":["defaultConvergenceChecker","val defaultConvergenceChecker: SimpleValueChecker","space.kscience.kmath.commons.optimization.CMOptimizer.defaultConvergenceChecker"]},{"name":"val factory: (IntArray) -> RandomGenerator","description":"space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.factory","location":"kmath-commons/space.kscience.kmath.commons.random/-c-m-random-generator-wrapper/factory.html","searchKeys":["factory","val factory: (IntArray) -> RandomGenerator","space.kscience.kmath.commons.random.CMRandomGeneratorWrapper.factory"]},{"name":"val function: DerivativeStructureField.() -> DerivativeStructure","description":"space.kscience.kmath.commons.expressions.DerivativeStructureExpression.function","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-expression/function.html","searchKeys":["function","val function: DerivativeStructureField.() -> DerivativeStructure","space.kscience.kmath.commons.expressions.DerivativeStructureExpression.function"]},{"name":"val integratorBuilder: (Integrand) -> UnivariateIntegrator","description":"space.kscience.kmath.commons.integration.CMIntegrator.integratorBuilder","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-integrator/integrator-builder.html","searchKeys":["integratorBuilder","val integratorBuilder: (Integrand) -> UnivariateIntegrator","space.kscience.kmath.commons.integration.CMIntegrator.integratorBuilder"]},{"name":"val name: String","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE.name","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP.name","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e-h-p/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM.name","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-u-n-i-f-o-r-m/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY.name","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-c-h-o-l-e-s-k-y/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.linear.CMDecomposition.EIGEN.name","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-e-i-g-e-n/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.linear.CMDecomposition.EIGEN.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.linear.CMDecomposition.LUP.name","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-l-u-p/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.linear.CMDecomposition.LUP.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.linear.CMDecomposition.QR.name","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-q-r/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.linear.CMDecomposition.QR.name"]},{"name":"val name: String","description":"space.kscience.kmath.commons.linear.CMDecomposition.RRQR.name","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-r-r-q-r/name.html","searchKeys":["name","val name: String","space.kscience.kmath.commons.linear.CMDecomposition.RRQR.name"]},{"name":"val numberOfVariables: Int","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.numberOfVariables","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/number-of-variables.html","searchKeys":["numberOfVariables","val numberOfVariables: Int","space.kscience.kmath.commons.expressions.DerivativeStructureField.numberOfVariables"]},{"name":"val optimizerBuilder: () -> MultivariateOptimizer","description":"space.kscience.kmath.commons.optimization.CMOptimizerEngine.optimizerBuilder","location":"kmath-commons/space.kscience.kmath.commons.optimization/-c-m-optimizer-engine/optimizer-builder.html","searchKeys":["optimizerBuilder","val optimizerBuilder: () -> MultivariateOptimizer","space.kscience.kmath.commons.optimization.CMOptimizerEngine.optimizerBuilder"]},{"name":"val order: Int","description":"space.kscience.kmath.commons.expressions.DerivativeStructureField.order","location":"kmath-commons/space.kscience.kmath.commons.expressions/-derivative-structure-field/order.html","searchKeys":["order","val order: Int","space.kscience.kmath.commons.expressions.DerivativeStructureField.order"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE.ordinal","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDRE.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP.ordinal","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-l-e-g-a-n-d-r-e-h-p/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.LEGANDREHP.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM.ordinal","location":"kmath-commons/space.kscience.kmath.commons.integration/-c-m-gauss-rule-integrator/-gauss-rule/-u-n-i-f-o-r-m/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.integration.CMGaussRuleIntegrator.GaussRule.UNIFORM.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY.ordinal","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-c-h-o-l-e-s-k-y/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.linear.CMDecomposition.CHOLESKY.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.linear.CMDecomposition.EIGEN.ordinal","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-e-i-g-e-n/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.linear.CMDecomposition.EIGEN.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.linear.CMDecomposition.LUP.ordinal","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-l-u-p/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.linear.CMDecomposition.LUP.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.linear.CMDecomposition.QR.ordinal","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-q-r/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.linear.CMDecomposition.QR.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.commons.linear.CMDecomposition.RRQR.ordinal","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-decomposition/-r-r-q-r/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.commons.linear.CMDecomposition.RRQR.ordinal"]},{"name":"val origin: RealMatrix","description":"space.kscience.kmath.commons.linear.CMMatrix.origin","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-matrix/origin.html","searchKeys":["origin","val origin: RealMatrix","space.kscience.kmath.commons.linear.CMMatrix.origin"]},{"name":"val origin: RealVector","description":"space.kscience.kmath.commons.linear.CMVector.origin","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/origin.html","searchKeys":["origin","val origin: RealVector","space.kscience.kmath.commons.linear.CMVector.origin"]},{"name":"value class CMVector(origin: RealVector) : Buffer<Double> ","description":"space.kscience.kmath.commons.linear.CMVector","location":"kmath-commons/space.kscience.kmath.commons.linear/-c-m-vector/index.html","searchKeys":["CMVector","value class CMVector(origin: RealVector) : Buffer<Double> ","space.kscience.kmath.commons.linear.CMVector"]},{"name":"var MutableList<IntegrandFeature>.targetAbsoluteAccuracy: Double?","description":"space.kscience.kmath.commons.integration.targetAbsoluteAccuracy","location":"kmath-commons/space.kscience.kmath.commons.integration/target-absolute-accuracy.html","searchKeys":["targetAbsoluteAccuracy","var MutableList<IntegrandFeature>.targetAbsoluteAccuracy: Double?","space.kscience.kmath.commons.integration.targetAbsoluteAccuracy"]},{"name":"var MutableList<IntegrandFeature>.targetRelativeAccuracy: Double?","description":"space.kscience.kmath.commons.integration.targetRelativeAccuracy","location":"kmath-commons/space.kscience.kmath.commons.integration/target-relative-accuracy.html","searchKeys":["targetRelativeAccuracy","var MutableList<IntegrandFeature>.targetRelativeAccuracy: Double?","space.kscience.kmath.commons.integration.targetRelativeAccuracy"]},{"name":"abstract fun MemoryReader.read(offset: Int): T","description":"space.kscience.kmath.memory.MemorySpec.read","location":"kmath-memory/space.kscience.kmath.memory/-memory-spec/read.html","searchKeys":["read","abstract fun MemoryReader.read(offset: Int): T","space.kscience.kmath.memory.MemorySpec.read"]},{"name":"abstract fun MemoryWriter.write(offset: Int, value: T)","description":"space.kscience.kmath.memory.MemorySpec.write","location":"kmath-memory/space.kscience.kmath.memory/-memory-spec/write.html","searchKeys":["write","abstract fun MemoryWriter.write(offset: Int, value: T)","space.kscience.kmath.memory.MemorySpec.write"]},{"name":"abstract fun copy(): Memory","description":"space.kscience.kmath.memory.Memory.copy","location":"kmath-memory/space.kscience.kmath.memory/-memory/copy.html","searchKeys":["copy","abstract fun copy(): Memory","space.kscience.kmath.memory.Memory.copy"]},{"name":"abstract fun readByte(offset: Int): Byte","description":"space.kscience.kmath.memory.MemoryReader.readByte","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-byte.html","searchKeys":["readByte","abstract fun readByte(offset: Int): Byte","space.kscience.kmath.memory.MemoryReader.readByte"]},{"name":"abstract fun readDouble(offset: Int): Double","description":"space.kscience.kmath.memory.MemoryReader.readDouble","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-double.html","searchKeys":["readDouble","abstract fun readDouble(offset: Int): Double","space.kscience.kmath.memory.MemoryReader.readDouble"]},{"name":"abstract fun readFloat(offset: Int): Float","description":"space.kscience.kmath.memory.MemoryReader.readFloat","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-float.html","searchKeys":["readFloat","abstract fun readFloat(offset: Int): Float","space.kscience.kmath.memory.MemoryReader.readFloat"]},{"name":"abstract fun readInt(offset: Int): Int","description":"space.kscience.kmath.memory.MemoryReader.readInt","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-int.html","searchKeys":["readInt","abstract fun readInt(offset: Int): Int","space.kscience.kmath.memory.MemoryReader.readInt"]},{"name":"abstract fun readLong(offset: Int): Long","description":"space.kscience.kmath.memory.MemoryReader.readLong","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-long.html","searchKeys":["readLong","abstract fun readLong(offset: Int): Long","space.kscience.kmath.memory.MemoryReader.readLong"]},{"name":"abstract fun readShort(offset: Int): Short","description":"space.kscience.kmath.memory.MemoryReader.readShort","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/read-short.html","searchKeys":["readShort","abstract fun readShort(offset: Int): Short","space.kscience.kmath.memory.MemoryReader.readShort"]},{"name":"abstract fun reader(): MemoryReader","description":"space.kscience.kmath.memory.Memory.reader","location":"kmath-memory/space.kscience.kmath.memory/-memory/reader.html","searchKeys":["reader","abstract fun reader(): MemoryReader","space.kscience.kmath.memory.Memory.reader"]},{"name":"abstract fun release()","description":"space.kscience.kmath.memory.MemoryReader.release","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/release.html","searchKeys":["release","abstract fun release()","space.kscience.kmath.memory.MemoryReader.release"]},{"name":"abstract fun release()","description":"space.kscience.kmath.memory.MemoryWriter.release","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/release.html","searchKeys":["release","abstract fun release()","space.kscience.kmath.memory.MemoryWriter.release"]},{"name":"abstract fun view(offset: Int, length: Int): Memory","description":"space.kscience.kmath.memory.Memory.view","location":"kmath-memory/space.kscience.kmath.memory/-memory/view.html","searchKeys":["view","abstract fun view(offset: Int, length: Int): Memory","space.kscience.kmath.memory.Memory.view"]},{"name":"abstract fun writeByte(offset: Int, value: Byte)","description":"space.kscience.kmath.memory.MemoryWriter.writeByte","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-byte.html","searchKeys":["writeByte","abstract fun writeByte(offset: Int, value: Byte)","space.kscience.kmath.memory.MemoryWriter.writeByte"]},{"name":"abstract fun writeDouble(offset: Int, value: Double)","description":"space.kscience.kmath.memory.MemoryWriter.writeDouble","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-double.html","searchKeys":["writeDouble","abstract fun writeDouble(offset: Int, value: Double)","space.kscience.kmath.memory.MemoryWriter.writeDouble"]},{"name":"abstract fun writeFloat(offset: Int, value: Float)","description":"space.kscience.kmath.memory.MemoryWriter.writeFloat","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-float.html","searchKeys":["writeFloat","abstract fun writeFloat(offset: Int, value: Float)","space.kscience.kmath.memory.MemoryWriter.writeFloat"]},{"name":"abstract fun writeInt(offset: Int, value: Int)","description":"space.kscience.kmath.memory.MemoryWriter.writeInt","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-int.html","searchKeys":["writeInt","abstract fun writeInt(offset: Int, value: Int)","space.kscience.kmath.memory.MemoryWriter.writeInt"]},{"name":"abstract fun writeLong(offset: Int, value: Long)","description":"space.kscience.kmath.memory.MemoryWriter.writeLong","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-long.html","searchKeys":["writeLong","abstract fun writeLong(offset: Int, value: Long)","space.kscience.kmath.memory.MemoryWriter.writeLong"]},{"name":"abstract fun writeShort(offset: Int, value: Short)","description":"space.kscience.kmath.memory.MemoryWriter.writeShort","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/write-short.html","searchKeys":["writeShort","abstract fun writeShort(offset: Int, value: Short)","space.kscience.kmath.memory.MemoryWriter.writeShort"]},{"name":"abstract fun writer(): MemoryWriter","description":"space.kscience.kmath.memory.Memory.writer","location":"kmath-memory/space.kscience.kmath.memory/-memory/writer.html","searchKeys":["writer","abstract fun writer(): MemoryWriter","space.kscience.kmath.memory.Memory.writer"]},{"name":"abstract val memory: Memory","description":"space.kscience.kmath.memory.MemoryReader.memory","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/memory.html","searchKeys":["memory","abstract val memory: Memory","space.kscience.kmath.memory.MemoryReader.memory"]},{"name":"abstract val memory: Memory","description":"space.kscience.kmath.memory.MemoryWriter.memory","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/memory.html","searchKeys":["memory","abstract val memory: Memory","space.kscience.kmath.memory.MemoryWriter.memory"]},{"name":"abstract val objectSize: Int","description":"space.kscience.kmath.memory.MemorySpec.objectSize","location":"kmath-memory/space.kscience.kmath.memory/-memory-spec/object-size.html","searchKeys":["objectSize","abstract val objectSize: Int","space.kscience.kmath.memory.MemorySpec.objectSize"]},{"name":"abstract val size: Int","description":"space.kscience.kmath.memory.Memory.size","location":"kmath-memory/space.kscience.kmath.memory/-memory/size.html","searchKeys":["size","abstract val size: Int","space.kscience.kmath.memory.Memory.size"]},{"name":"fun <T : Any> MemoryReader.read(spec: MemorySpec<T>, offset: Int): T","description":"space.kscience.kmath.memory.read","location":"kmath-memory/space.kscience.kmath.memory/read.html","searchKeys":["read","fun <T : Any> MemoryReader.read(spec: MemorySpec<T>, offset: Int): T","space.kscience.kmath.memory.read"]},{"name":"fun <T : Any> MemoryWriter.write(spec: MemorySpec<T>, offset: Int, value: T)","description":"space.kscience.kmath.memory.write","location":"kmath-memory/space.kscience.kmath.memory/write.html","searchKeys":["write","fun <T : Any> MemoryWriter.write(spec: MemorySpec<T>, offset: Int, value: T)","space.kscience.kmath.memory.write"]},{"name":"fun <T : Any> MemoryWriter.writeArray(spec: MemorySpec<T>, offset: Int, array: Array<T>)","description":"space.kscience.kmath.memory.writeArray","location":"kmath-memory/space.kscience.kmath.memory/write-array.html","searchKeys":["writeArray","fun <T : Any> MemoryWriter.writeArray(spec: MemorySpec<T>, offset: Int, array: Array<T>)","space.kscience.kmath.memory.writeArray"]},{"name":"fun ByteBuffer.asMemory(startOffset: Int = 0, size: Int = limit()): Memory","description":"space.kscience.kmath.memory.asMemory","location":"kmath-memory/space.kscience.kmath.memory/as-memory.html","searchKeys":["asMemory","fun ByteBuffer.asMemory(startOffset: Int = 0, size: Int = limit()): Memory","space.kscience.kmath.memory.asMemory"]},{"name":"fun Memory.Companion.allocate(length: Int): Memory","description":"space.kscience.kmath.memory.allocate","location":"kmath-memory/space.kscience.kmath.memory/allocate.html","searchKeys":["allocate","fun Memory.Companion.allocate(length: Int): Memory","space.kscience.kmath.memory.allocate"]},{"name":"fun Memory.Companion.wrap(array: ByteArray): Memory","description":"space.kscience.kmath.memory.wrap","location":"kmath-memory/space.kscience.kmath.memory/wrap.html","searchKeys":["wrap","fun Memory.Companion.wrap(array: ByteArray): Memory","space.kscience.kmath.memory.wrap"]},{"name":"inline fun <R> Memory.read(block: MemoryReader.() -> R): R","description":"space.kscience.kmath.memory.read","location":"kmath-memory/space.kscience.kmath.memory/read.html","searchKeys":["read","inline fun <R> Memory.read(block: MemoryReader.() -> R): R","space.kscience.kmath.memory.read"]},{"name":"inline fun <R> Path.readAsMemory(position: Long = 0, size: Long = Files.size(this), block: Memory.() -> R): R","description":"space.kscience.kmath.memory.readAsMemory","location":"kmath-memory/space.kscience.kmath.memory/read-as-memory.html","searchKeys":["readAsMemory","inline fun <R> Path.readAsMemory(position: Long = 0, size: Long = Files.size(this), block: Memory.() -> R): R","space.kscience.kmath.memory.readAsMemory"]},{"name":"inline fun <T : Any> MemoryReader.readArray(spec: MemorySpec<T>, offset: Int, size: Int): Array<T>","description":"space.kscience.kmath.memory.readArray","location":"kmath-memory/space.kscience.kmath.memory/read-array.html","searchKeys":["readArray","inline fun <T : Any> MemoryReader.readArray(spec: MemorySpec<T>, offset: Int, size: Int): Array<T>","space.kscience.kmath.memory.readArray"]},{"name":"inline fun Memory.write(block: MemoryWriter.() -> Unit)","description":"space.kscience.kmath.memory.write","location":"kmath-memory/space.kscience.kmath.memory/write.html","searchKeys":["write","inline fun Memory.write(block: MemoryWriter.() -> Unit)","space.kscience.kmath.memory.write"]},{"name":"interface Memory","description":"space.kscience.kmath.memory.Memory","location":"kmath-memory/space.kscience.kmath.memory/-memory/index.html","searchKeys":["Memory","interface Memory","space.kscience.kmath.memory.Memory"]},{"name":"interface MemoryReader","description":"space.kscience.kmath.memory.MemoryReader","location":"kmath-memory/space.kscience.kmath.memory/-memory-reader/index.html","searchKeys":["MemoryReader","interface MemoryReader","space.kscience.kmath.memory.MemoryReader"]},{"name":"interface MemorySpec<T : Any>","description":"space.kscience.kmath.memory.MemorySpec","location":"kmath-memory/space.kscience.kmath.memory/-memory-spec/index.html","searchKeys":["MemorySpec","interface MemorySpec<T : Any>","space.kscience.kmath.memory.MemorySpec"]},{"name":"interface MemoryWriter","description":"space.kscience.kmath.memory.MemoryWriter","location":"kmath-memory/space.kscience.kmath.memory/-memory-writer/index.html","searchKeys":["MemoryWriter","interface MemoryWriter","space.kscience.kmath.memory.MemoryWriter"]},{"name":"object Companion","description":"space.kscience.kmath.memory.Memory.Companion","location":"kmath-memory/space.kscience.kmath.memory/-memory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.memory.Memory.Companion"]},{"name":"object JafamaDoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","description":"space.kscience.kmath.jafama.JafamaDoubleField","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/index.html","searchKeys":["JafamaDoubleField","object JafamaDoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","space.kscience.kmath.jafama.JafamaDoubleField"]},{"name":"object StrictJafamaDoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/index.html","searchKeys":["StrictJafamaDoubleField","object StrictJafamaDoubleField : ExtendedField<Double> , Norm<Double, Double> , ScaleOperations<Double> ","space.kscience.kmath.jafama.StrictJafamaDoubleField"]},{"name":"open inline operator override fun Double.div(b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.div","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/div.html","searchKeys":["div","open inline operator override fun Double.div(b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.div"]},{"name":"open inline operator override fun Double.div(b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.div","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/div.html","searchKeys":["div","open inline operator override fun Double.div(b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.div"]},{"name":"open inline operator override fun Double.minus(b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.minus","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/minus.html","searchKeys":["minus","open inline operator override fun Double.minus(b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.minus"]},{"name":"open inline operator override fun Double.minus(b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.minus","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/minus.html","searchKeys":["minus","open inline operator override fun Double.minus(b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.minus"]},{"name":"open inline operator override fun Double.plus(b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.plus","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/plus.html","searchKeys":["plus","open inline operator override fun Double.plus(b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.plus"]},{"name":"open inline operator override fun Double.plus(b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.plus","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/plus.html","searchKeys":["plus","open inline operator override fun Double.plus(b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.plus"]},{"name":"open inline operator override fun Double.times(b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.times","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/times.html","searchKeys":["times","open inline operator override fun Double.times(b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.times"]},{"name":"open inline operator override fun Double.times(b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.times","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/times.html","searchKeys":["times","open inline operator override fun Double.times(b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.times"]},{"name":"open inline operator override fun Double.unaryMinus(): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.unaryMinus","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Double.unaryMinus(): Double","space.kscience.kmath.jafama.JafamaDoubleField.unaryMinus"]},{"name":"open inline operator override fun Double.unaryMinus(): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.unaryMinus","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/unary-minus.html","searchKeys":["unaryMinus","open inline operator override fun Double.unaryMinus(): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.unaryMinus"]},{"name":"open inline override fun acos(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.acos","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/acos.html","searchKeys":["acos","open inline override fun acos(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.acos"]},{"name":"open inline override fun acos(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.acos","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/acos.html","searchKeys":["acos","open inline override fun acos(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.acos"]},{"name":"open inline override fun acosh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.acosh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/acosh.html","searchKeys":["acosh","open inline override fun acosh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.acosh"]},{"name":"open inline override fun acosh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.acosh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/acosh.html","searchKeys":["acosh","open inline override fun acosh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.acosh"]},{"name":"open inline override fun add(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.add","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/add.html","searchKeys":["add","open inline override fun add(a: Double, b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.add"]},{"name":"open inline override fun add(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.add","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/add.html","searchKeys":["add","open inline override fun add(a: Double, b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.add"]},{"name":"open inline override fun asin(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.asin","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/asin.html","searchKeys":["asin","open inline override fun asin(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.asin"]},{"name":"open inline override fun asin(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.asin","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/asin.html","searchKeys":["asin","open inline override fun asin(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.asin"]},{"name":"open inline override fun asinh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.asinh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/asinh.html","searchKeys":["asinh","open inline override fun asinh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.asinh"]},{"name":"open inline override fun asinh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.asinh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/asinh.html","searchKeys":["asinh","open inline override fun asinh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.asinh"]},{"name":"open inline override fun atan(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.atan","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/atan.html","searchKeys":["atan","open inline override fun atan(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.atan"]},{"name":"open inline override fun atan(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.atan","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/atan.html","searchKeys":["atan","open inline override fun atan(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.atan"]},{"name":"open inline override fun atanh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.atanh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/atanh.html","searchKeys":["atanh","open inline override fun atanh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.atanh"]},{"name":"open inline override fun atanh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.atanh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/atanh.html","searchKeys":["atanh","open inline override fun atanh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.atanh"]},{"name":"open inline override fun cos(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.cos","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/cos.html","searchKeys":["cos","open inline override fun cos(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.cos"]},{"name":"open inline override fun cos(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.cos","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/cos.html","searchKeys":["cos","open inline override fun cos(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.cos"]},{"name":"open inline override fun cosh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.cosh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/cosh.html","searchKeys":["cosh","open inline override fun cosh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.cosh"]},{"name":"open inline override fun cosh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.cosh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/cosh.html","searchKeys":["cosh","open inline override fun cosh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.cosh"]},{"name":"open inline override fun divide(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.divide","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/divide.html","searchKeys":["divide","open inline override fun divide(a: Double, b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.divide"]},{"name":"open inline override fun divide(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.divide","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/divide.html","searchKeys":["divide","open inline override fun divide(a: Double, b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.divide"]},{"name":"open inline override fun exp(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.exp","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/exp.html","searchKeys":["exp","open inline override fun exp(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.exp"]},{"name":"open inline override fun exp(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.exp","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/exp.html","searchKeys":["exp","open inline override fun exp(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.exp"]},{"name":"open inline override fun ln(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.ln","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/ln.html","searchKeys":["ln","open inline override fun ln(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.ln"]},{"name":"open inline override fun ln(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.ln","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/ln.html","searchKeys":["ln","open inline override fun ln(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.ln"]},{"name":"open inline override fun multiply(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.multiply","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Double, b: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.multiply"]},{"name":"open inline override fun multiply(a: Double, b: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.multiply","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/multiply.html","searchKeys":["multiply","open inline override fun multiply(a: Double, b: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.multiply"]},{"name":"open inline override fun norm(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.norm","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/norm.html","searchKeys":["norm","open inline override fun norm(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.norm"]},{"name":"open inline override fun norm(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.norm","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/norm.html","searchKeys":["norm","open inline override fun norm(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.norm"]},{"name":"open inline override fun number(value: Number): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.number","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/number.html","searchKeys":["number","open inline override fun number(value: Number): Double","space.kscience.kmath.jafama.JafamaDoubleField.number"]},{"name":"open inline override fun number(value: Number): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.number","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/number.html","searchKeys":["number","open inline override fun number(value: Number): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.number"]},{"name":"open inline override fun power(arg: Double, pow: Number): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.power","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/power.html","searchKeys":["power","open inline override fun power(arg: Double, pow: Number): Double","space.kscience.kmath.jafama.JafamaDoubleField.power"]},{"name":"open inline override fun power(arg: Double, pow: Number): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.power","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/power.html","searchKeys":["power","open inline override fun power(arg: Double, pow: Number): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.power"]},{"name":"open inline override fun scale(a: Double, value: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.scale","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/scale.html","searchKeys":["scale","open inline override fun scale(a: Double, value: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.scale"]},{"name":"open inline override fun scale(a: Double, value: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.scale","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/scale.html","searchKeys":["scale","open inline override fun scale(a: Double, value: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.scale"]},{"name":"open inline override fun sin(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.sin","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/sin.html","searchKeys":["sin","open inline override fun sin(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.sin"]},{"name":"open inline override fun sin(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.sin","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/sin.html","searchKeys":["sin","open inline override fun sin(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.sin"]},{"name":"open inline override fun sinh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.sinh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/sinh.html","searchKeys":["sinh","open inline override fun sinh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.sinh"]},{"name":"open inline override fun sinh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.sinh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/sinh.html","searchKeys":["sinh","open inline override fun sinh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.sinh"]},{"name":"open inline override fun sqrt(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.sqrt","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/sqrt.html","searchKeys":["sqrt","open inline override fun sqrt(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.sqrt"]},{"name":"open inline override fun sqrt(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.sqrt","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/sqrt.html","searchKeys":["sqrt","open inline override fun sqrt(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.sqrt"]},{"name":"open inline override fun tan(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.tan","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/tan.html","searchKeys":["tan","open inline override fun tan(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.tan"]},{"name":"open inline override fun tan(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.tan","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/tan.html","searchKeys":["tan","open inline override fun tan(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.tan"]},{"name":"open inline override fun tanh(arg: Double): Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.tanh","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/tanh.html","searchKeys":["tanh","open inline override fun tanh(arg: Double): Double","space.kscience.kmath.jafama.JafamaDoubleField.tanh"]},{"name":"open inline override fun tanh(arg: Double): Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.tanh","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/tanh.html","searchKeys":["tanh","open inline override fun tanh(arg: Double): Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.tanh"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.binaryOperationFunction","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","space.kscience.kmath.jafama.JafamaDoubleField.binaryOperationFunction"]},{"name":"open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.binaryOperationFunction","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/binary-operation-function.html","searchKeys":["binaryOperationFunction","open override fun binaryOperationFunction(operation: String): (left: Double, right: Double) -> Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.binaryOperationFunction"]},{"name":"open override val one: Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.one","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/one.html","searchKeys":["one","open override val one: Double","space.kscience.kmath.jafama.JafamaDoubleField.one"]},{"name":"open override val one: Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.one","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/one.html","searchKeys":["one","open override val one: Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.one"]},{"name":"open override val zero: Double","description":"space.kscience.kmath.jafama.JafamaDoubleField.zero","location":"kmath-jafama/space.kscience.kmath.jafama/-jafama-double-field/zero.html","searchKeys":["zero","open override val zero: Double","space.kscience.kmath.jafama.JafamaDoubleField.zero"]},{"name":"open override val zero: Double","description":"space.kscience.kmath.jafama.StrictJafamaDoubleField.zero","location":"kmath-jafama/space.kscience.kmath.jafama/-strict-jafama-double-field/zero.html","searchKeys":["zero","open override val zero: Double","space.kscience.kmath.jafama.StrictJafamaDoubleField.zero"]},{"name":"fun Array<DoubleArray>.toMatrix(): RealMatrix","description":"space.kscience.kmath.real.toMatrix","location":"kmath-for-real/space.kscience.kmath.real/to-matrix.html","searchKeys":["toMatrix","fun Array<DoubleArray>.toMatrix(): RealMatrix","space.kscience.kmath.real.toMatrix"]},{"name":"fun Buffer.Companion.fromRange(range: ClosedFloatingPointRange<Double>, numberOfPoints: Int): DoubleBuffer","description":"space.kscience.kmath.real.fromRange","location":"kmath-for-real/space.kscience.kmath.real/from-range.html","searchKeys":["fromRange","fun Buffer.Companion.fromRange(range: ClosedFloatingPointRange<Double>, numberOfPoints: Int): DoubleBuffer","space.kscience.kmath.real.fromRange"]},{"name":"fun Buffer.Companion.same(size: Int, value: Number): DoubleVector","description":"space.kscience.kmath.real.same","location":"kmath-for-real/space.kscience.kmath.real/same.html","searchKeys":["same","fun Buffer.Companion.same(size: Int, value: Number): DoubleVector","space.kscience.kmath.real.same"]},{"name":"fun Buffer.Companion.withFixedStep(range: ClosedFloatingPointRange<Double>, step: Double): DoubleBuffer","description":"space.kscience.kmath.real.withFixedStep","location":"kmath-for-real/space.kscience.kmath.real/with-fixed-step.html","searchKeys":["withFixedStep","fun Buffer.Companion.withFixedStep(range: ClosedFloatingPointRange<Double>, step: Double): DoubleBuffer","space.kscience.kmath.real.withFixedStep"]},{"name":"fun DoubleVector(vararg doubles: Double): DoubleVector","description":"space.kscience.kmath.real.DoubleVector","location":"kmath-for-real/space.kscience.kmath.real/-double-vector.html","searchKeys":["DoubleVector","fun DoubleVector(vararg doubles: Double): DoubleVector","space.kscience.kmath.real.DoubleVector"]},{"name":"fun DoubleVector.pow(p: Double): DoubleVector","description":"space.kscience.kmath.real.pow","location":"kmath-for-real/space.kscience.kmath.real/pow.html","searchKeys":["pow","fun DoubleVector.pow(p: Double): DoubleVector","space.kscience.kmath.real.pow"]},{"name":"fun DoubleVector.pow(p: Int): DoubleVector","description":"space.kscience.kmath.real.pow","location":"kmath-for-real/space.kscience.kmath.real/pow.html","searchKeys":["pow","fun DoubleVector.pow(p: Int): DoubleVector","space.kscience.kmath.real.pow"]},{"name":"fun DoubleVector.square(): DoubleVector","description":"space.kscience.kmath.real.square","location":"kmath-for-real/space.kscience.kmath.real/square.html","searchKeys":["square","fun DoubleVector.square(): DoubleVector","space.kscience.kmath.real.square"]},{"name":"fun DoubleVector.sum(): Double","description":"space.kscience.kmath.real.sum","location":"kmath-for-real/space.kscience.kmath.real/sum.html","searchKeys":["sum","fun DoubleVector.sum(): Double","space.kscience.kmath.real.sum"]},{"name":"fun RealMatrix.average(): Double","description":"space.kscience.kmath.real.average","location":"kmath-for-real/space.kscience.kmath.real/average.html","searchKeys":["average","fun RealMatrix.average(): Double","space.kscience.kmath.real.average"]},{"name":"fun RealMatrix.averageByColumn(): DoubleBuffer","description":"space.kscience.kmath.real.averageByColumn","location":"kmath-for-real/space.kscience.kmath.real/average-by-column.html","searchKeys":["averageByColumn","fun RealMatrix.averageByColumn(): DoubleBuffer","space.kscience.kmath.real.averageByColumn"]},{"name":"fun RealMatrix.extractColumn(columnIndex: Int): RealMatrix","description":"space.kscience.kmath.real.extractColumn","location":"kmath-for-real/space.kscience.kmath.real/extract-column.html","searchKeys":["extractColumn","fun RealMatrix.extractColumn(columnIndex: Int): RealMatrix","space.kscience.kmath.real.extractColumn"]},{"name":"fun RealMatrix.extractColumns(columnRange: IntRange): RealMatrix","description":"space.kscience.kmath.real.extractColumns","location":"kmath-for-real/space.kscience.kmath.real/extract-columns.html","searchKeys":["extractColumns","fun RealMatrix.extractColumns(columnRange: IntRange): RealMatrix","space.kscience.kmath.real.extractColumns"]},{"name":"fun RealMatrix.inverseWithLup(): RealMatrix","description":"space.kscience.kmath.real.inverseWithLup","location":"kmath-for-real/space.kscience.kmath.real/inverse-with-lup.html","searchKeys":["inverseWithLup","fun RealMatrix.inverseWithLup(): RealMatrix","space.kscience.kmath.real.inverseWithLup"]},{"name":"fun RealMatrix.max(): Double?","description":"space.kscience.kmath.real.max","location":"kmath-for-real/space.kscience.kmath.real/max.html","searchKeys":["max","fun RealMatrix.max(): Double?","space.kscience.kmath.real.max"]},{"name":"fun RealMatrix.maxByColumn(): DoubleBuffer","description":"space.kscience.kmath.real.maxByColumn","location":"kmath-for-real/space.kscience.kmath.real/max-by-column.html","searchKeys":["maxByColumn","fun RealMatrix.maxByColumn(): DoubleBuffer","space.kscience.kmath.real.maxByColumn"]},{"name":"fun RealMatrix.min(): Double?","description":"space.kscience.kmath.real.min","location":"kmath-for-real/space.kscience.kmath.real/min.html","searchKeys":["min","fun RealMatrix.min(): Double?","space.kscience.kmath.real.min"]},{"name":"fun RealMatrix.minByColumn(): DoubleBuffer","description":"space.kscience.kmath.real.minByColumn","location":"kmath-for-real/space.kscience.kmath.real/min-by-column.html","searchKeys":["minByColumn","fun RealMatrix.minByColumn(): DoubleBuffer","space.kscience.kmath.real.minByColumn"]},{"name":"fun RealMatrix.pow(p: Double): RealMatrix","description":"space.kscience.kmath.real.pow","location":"kmath-for-real/space.kscience.kmath.real/pow.html","searchKeys":["pow","fun RealMatrix.pow(p: Double): RealMatrix","space.kscience.kmath.real.pow"]},{"name":"fun RealMatrix.pow(p: Int): RealMatrix","description":"space.kscience.kmath.real.pow","location":"kmath-for-real/space.kscience.kmath.real/pow.html","searchKeys":["pow","fun RealMatrix.pow(p: Int): RealMatrix","space.kscience.kmath.real.pow"]},{"name":"fun RealMatrix.repeatStackVertical(n: Int): RealMatrix","description":"space.kscience.kmath.real.repeatStackVertical","location":"kmath-for-real/space.kscience.kmath.real/repeat-stack-vertical.html","searchKeys":["repeatStackVertical","fun RealMatrix.repeatStackVertical(n: Int): RealMatrix","space.kscience.kmath.real.repeatStackVertical"]},{"name":"fun RealMatrix.square(): RealMatrix","description":"space.kscience.kmath.real.square","location":"kmath-for-real/space.kscience.kmath.real/square.html","searchKeys":["square","fun RealMatrix.square(): RealMatrix","space.kscience.kmath.real.square"]},{"name":"fun RealMatrix.sum(): Double","description":"space.kscience.kmath.real.sum","location":"kmath-for-real/space.kscience.kmath.real/sum.html","searchKeys":["sum","fun RealMatrix.sum(): Double","space.kscience.kmath.real.sum"]},{"name":"fun RealMatrix.sumByColumn(): DoubleBuffer","description":"space.kscience.kmath.real.sumByColumn","location":"kmath-for-real/space.kscience.kmath.real/sum-by-column.html","searchKeys":["sumByColumn","fun RealMatrix.sumByColumn(): DoubleBuffer","space.kscience.kmath.real.sumByColumn"]},{"name":"fun Sequence<DoubleArray>.toMatrix(): RealMatrix","description":"space.kscience.kmath.real.toMatrix","location":"kmath-for-real/space.kscience.kmath.real/to-matrix.html","searchKeys":["toMatrix","fun Sequence<DoubleArray>.toMatrix(): RealMatrix","space.kscience.kmath.real.toMatrix"]},{"name":"fun cos(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.cos","location":"kmath-for-real/space.kscience.kmath.real/cos.html","searchKeys":["cos","fun cos(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.cos"]},{"name":"fun cos(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.cos","location":"kmath-for-real/space.kscience.kmath.real/cos.html","searchKeys":["cos","fun cos(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.cos"]},{"name":"fun exp(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.exp","location":"kmath-for-real/space.kscience.kmath.real/exp.html","searchKeys":["exp","fun exp(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.exp"]},{"name":"fun exp(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.exp","location":"kmath-for-real/space.kscience.kmath.real/exp.html","searchKeys":["exp","fun exp(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.exp"]},{"name":"fun ln(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.ln","location":"kmath-for-real/space.kscience.kmath.real/ln.html","searchKeys":["ln","fun ln(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.ln"]},{"name":"fun ln(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.ln","location":"kmath-for-real/space.kscience.kmath.real/ln.html","searchKeys":["ln","fun ln(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.ln"]},{"name":"fun log10(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.log10","location":"kmath-for-real/space.kscience.kmath.real/log10.html","searchKeys":["log10","fun log10(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.log10"]},{"name":"fun log10(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.log10","location":"kmath-for-real/space.kscience.kmath.real/log10.html","searchKeys":["log10","fun log10(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.log10"]},{"name":"fun realMatrix(rowNum: Int, colNum: Int): MatrixBuilder<Double, DoubleField>","description":"space.kscience.kmath.real.realMatrix","location":"kmath-for-real/space.kscience.kmath.real/real-matrix.html","searchKeys":["realMatrix","fun realMatrix(rowNum: Int, colNum: Int): MatrixBuilder<Double, DoubleField>","space.kscience.kmath.real.realMatrix"]},{"name":"fun realMatrix(rowNum: Int, colNum: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): RealMatrix","description":"space.kscience.kmath.real.realMatrix","location":"kmath-for-real/space.kscience.kmath.real/real-matrix.html","searchKeys":["realMatrix","fun realMatrix(rowNum: Int, colNum: Int, initializer: DoubleField.(i: Int, j: Int) -> Double): RealMatrix","space.kscience.kmath.real.realMatrix"]},{"name":"fun sin(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.sin","location":"kmath-for-real/space.kscience.kmath.real/sin.html","searchKeys":["sin","fun sin(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.sin"]},{"name":"fun sin(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.sin","location":"kmath-for-real/space.kscience.kmath.real/sin.html","searchKeys":["sin","fun sin(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.sin"]},{"name":"fun sqrt(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.sqrt","location":"kmath-for-real/space.kscience.kmath.real/sqrt.html","searchKeys":["sqrt","fun sqrt(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.sqrt"]},{"name":"fun sqrt(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.sqrt","location":"kmath-for-real/space.kscience.kmath.real/sqrt.html","searchKeys":["sqrt","fun sqrt(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.sqrt"]},{"name":"fun tan(arg: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.tan","location":"kmath-for-real/space.kscience.kmath.real/tan.html","searchKeys":["tan","fun tan(arg: RealMatrix): RealMatrix","space.kscience.kmath.real.tan"]},{"name":"fun tan(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.tan","location":"kmath-for-real/space.kscience.kmath.real/tan.html","searchKeys":["tan","fun tan(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.tan"]},{"name":"infix fun ClosedFloatingPointRange<Double>.step(step: Double): DoubleBuffer","description":"space.kscience.kmath.real.step","location":"kmath-for-real/space.kscience.kmath.real/step.html","searchKeys":["step","infix fun ClosedFloatingPointRange<Double>.step(step: Double): DoubleBuffer","space.kscience.kmath.real.step"]},{"name":"infix fun Matrix<Double>.dot(other: Matrix<Double>): Matrix<Double>","description":"space.kscience.kmath.real.dot","location":"kmath-for-real/space.kscience.kmath.real/dot.html","searchKeys":["dot","infix fun Matrix<Double>.dot(other: Matrix<Double>): Matrix<Double>","space.kscience.kmath.real.dot"]},{"name":"inline fun BufferND<Double>.mapInline(crossinline transform: DoubleField.(Double) -> Double): BufferND<Double>","description":"space.kscience.kmath.real.mapInline","location":"kmath-for-real/space.kscience.kmath.real/map-inline.html","searchKeys":["mapInline","inline fun BufferND<Double>.mapInline(crossinline transform: DoubleField.(Double) -> Double): BufferND<Double>","space.kscience.kmath.real.mapInline"]},{"name":"inline fun DoubleVector.map(transform: (Double) -> Double): DoubleVector","description":"space.kscience.kmath.real.map","location":"kmath-for-real/space.kscience.kmath.real/map.html","searchKeys":["map","inline fun DoubleVector.map(transform: (Double) -> Double): DoubleVector","space.kscience.kmath.real.map"]},{"name":"inline fun DoubleVector.mapIndexed(transform: (index: Int, value: Double) -> Double): DoubleVector","description":"space.kscience.kmath.real.mapIndexed","location":"kmath-for-real/space.kscience.kmath.real/map-indexed.html","searchKeys":["mapIndexed","inline fun DoubleVector.mapIndexed(transform: (index: Int, value: Double) -> Double): DoubleVector","space.kscience.kmath.real.mapIndexed"]},{"name":"inline fun RealMatrix.appendColumn(crossinline mapper: (Buffer<Double>) -> Double): RealMatrix","description":"space.kscience.kmath.real.appendColumn","location":"kmath-for-real/space.kscience.kmath.real/append-column.html","searchKeys":["appendColumn","inline fun RealMatrix.appendColumn(crossinline mapper: (Buffer<Double>) -> Double): RealMatrix","space.kscience.kmath.real.appendColumn"]},{"name":"inline fun RealMatrix.map(crossinline transform: (Double) -> Double): RealMatrix","description":"space.kscience.kmath.real.map","location":"kmath-for-real/space.kscience.kmath.real/map.html","searchKeys":["map","inline fun RealMatrix.map(crossinline transform: (Double) -> Double): RealMatrix","space.kscience.kmath.real.map"]},{"name":"operator fun (Double) -> Double.invoke(elementND: BufferND<Double>): BufferND<Double>","description":"space.kscience.kmath.real.invoke","location":"kmath-for-real/space.kscience.kmath.real/invoke.html","searchKeys":["invoke","operator fun (Double) -> Double.invoke(elementND: BufferND<Double>): BufferND<Double>","space.kscience.kmath.real.invoke"]},{"name":"operator fun BufferND<Double>.minus(arg: Double): BufferND<Double>","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun BufferND<Double>.minus(arg: Double): BufferND<Double>","space.kscience.kmath.real.minus"]},{"name":"operator fun BufferND<Double>.plus(arg: Double): BufferND<Double>","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun BufferND<Double>.plus(arg: Double): BufferND<Double>","space.kscience.kmath.real.plus"]},{"name":"operator fun Double.minus(matrix: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun Double.minus(matrix: RealMatrix): RealMatrix","space.kscience.kmath.real.minus"]},{"name":"operator fun Double.plus(matrix: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun Double.plus(matrix: RealMatrix): RealMatrix","space.kscience.kmath.real.plus"]},{"name":"operator fun Double.times(matrix: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun Double.times(matrix: RealMatrix): RealMatrix","space.kscience.kmath.real.times"]},{"name":"operator fun DoubleVector.div(number: Number): DoubleVector","description":"space.kscience.kmath.real.div","location":"kmath-for-real/space.kscience.kmath.real/div.html","searchKeys":["div","operator fun DoubleVector.div(number: Number): DoubleVector","space.kscience.kmath.real.div"]},{"name":"operator fun DoubleVector.div(other: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.div","location":"kmath-for-real/space.kscience.kmath.real/div.html","searchKeys":["div","operator fun DoubleVector.div(other: DoubleVector): DoubleVector","space.kscience.kmath.real.div"]},{"name":"operator fun DoubleVector.minus(number: Number): DoubleVector","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun DoubleVector.minus(number: Number): DoubleVector","space.kscience.kmath.real.minus"]},{"name":"operator fun DoubleVector.minus(other: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun DoubleVector.minus(other: DoubleVector): DoubleVector","space.kscience.kmath.real.minus"]},{"name":"operator fun DoubleVector.plus(number: Number): DoubleVector","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun DoubleVector.plus(number: Number): DoubleVector","space.kscience.kmath.real.plus"]},{"name":"operator fun DoubleVector.plus(other: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun DoubleVector.plus(other: DoubleVector): DoubleVector","space.kscience.kmath.real.plus"]},{"name":"operator fun DoubleVector.times(number: Number): DoubleVector","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun DoubleVector.times(number: Number): DoubleVector","space.kscience.kmath.real.times"]},{"name":"operator fun DoubleVector.times(other: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun DoubleVector.times(other: DoubleVector): DoubleVector","space.kscience.kmath.real.times"]},{"name":"operator fun DoubleVector.unaryMinus(): Buffer<Double>","description":"space.kscience.kmath.real.unaryMinus","location":"kmath-for-real/space.kscience.kmath.real/unary-minus.html","searchKeys":["unaryMinus","operator fun DoubleVector.unaryMinus(): Buffer<Double>","space.kscience.kmath.real.unaryMinus"]},{"name":"operator fun Number.div(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.div","location":"kmath-for-real/space.kscience.kmath.real/div.html","searchKeys":["div","operator fun Number.div(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.div"]},{"name":"operator fun Number.minus(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun Number.minus(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.minus"]},{"name":"operator fun Number.plus(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun Number.plus(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.plus"]},{"name":"operator fun Number.times(vector: DoubleVector): DoubleVector","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun Number.times(vector: DoubleVector): DoubleVector","space.kscience.kmath.real.times"]},{"name":"operator fun RealMatrix.div(double: Double): RealMatrix","description":"space.kscience.kmath.real.div","location":"kmath-for-real/space.kscience.kmath.real/div.html","searchKeys":["div","operator fun RealMatrix.div(double: Double): RealMatrix","space.kscience.kmath.real.div"]},{"name":"operator fun RealMatrix.minus(double: Double): RealMatrix","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun RealMatrix.minus(double: Double): RealMatrix","space.kscience.kmath.real.minus"]},{"name":"operator fun RealMatrix.minus(other: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.minus","location":"kmath-for-real/space.kscience.kmath.real/minus.html","searchKeys":["minus","operator fun RealMatrix.minus(other: RealMatrix): RealMatrix","space.kscience.kmath.real.minus"]},{"name":"operator fun RealMatrix.plus(double: Double): RealMatrix","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun RealMatrix.plus(double: Double): RealMatrix","space.kscience.kmath.real.plus"]},{"name":"operator fun RealMatrix.plus(other: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.plus","location":"kmath-for-real/space.kscience.kmath.real/plus.html","searchKeys":["plus","operator fun RealMatrix.plus(other: RealMatrix): RealMatrix","space.kscience.kmath.real.plus"]},{"name":"operator fun RealMatrix.times(double: Double): RealMatrix","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun RealMatrix.times(double: Double): RealMatrix","space.kscience.kmath.real.times"]},{"name":"operator fun RealMatrix.times(other: RealMatrix): RealMatrix","description":"space.kscience.kmath.real.times","location":"kmath-for-real/space.kscience.kmath.real/times.html","searchKeys":["times","operator fun RealMatrix.times(other: RealMatrix): RealMatrix","space.kscience.kmath.real.times"]},{"name":"val ClosedFloatingPointRange<Double>.length: Double","description":"space.kscience.kmath.real.length","location":"kmath-for-real/space.kscience.kmath.real/length.html","searchKeys":["length","val ClosedFloatingPointRange<Double>.length: Double","space.kscience.kmath.real.length"]},{"name":"val DoubleVector.norm: Double","description":"space.kscience.kmath.real.norm","location":"kmath-for-real/space.kscience.kmath.real/norm.html","searchKeys":["norm","val DoubleVector.norm: Double","space.kscience.kmath.real.norm"]},{"name":"class SymjaExpression<T : Number, A : NumericAlgebra<T>>(algebra: A, mst: MST, evaluator: ExprEvaluator) : SpecialDifferentiableExpression<T, SymjaExpression<T, A>> ","description":"space.kscience.kmath.symja.SymjaExpression","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/index.html","searchKeys":["SymjaExpression","class SymjaExpression<T : Number, A : NumericAlgebra<T>>(algebra: A, mst: MST, evaluator: ExprEvaluator) : SpecialDifferentiableExpression<T, SymjaExpression<T, A>> ","space.kscience.kmath.symja.SymjaExpression"]},{"name":"fun <A : NumericAlgebra<T>> SymjaExpression(algebra: A, mst: MST, evaluator: ExprEvaluator = DEFAULT_EVALUATOR)","description":"space.kscience.kmath.symja.SymjaExpression.SymjaExpression","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/-symja-expression.html","searchKeys":["SymjaExpression","fun <A : NumericAlgebra<T>> SymjaExpression(algebra: A, mst: MST, evaluator: ExprEvaluator = DEFAULT_EVALUATOR)","space.kscience.kmath.symja.SymjaExpression.SymjaExpression"]},{"name":"fun <T : Number, A : NumericAlgebra<T>> MST.toSymjaExpression(algebra: A): SymjaExpression<T, A>","description":"space.kscience.kmath.symja.toSymjaExpression","location":"kmath-symja/space.kscience.kmath.symja/to-symja-expression.html","searchKeys":["toSymjaExpression","fun <T : Number, A : NumericAlgebra<T>> MST.toSymjaExpression(algebra: A): SymjaExpression<T, A>","space.kscience.kmath.symja.toSymjaExpression"]},{"name":"fun IExpr.toMst(evaluator: ExprEvaluator = DEFAULT_EVALUATOR): MST","description":"space.kscience.kmath.symja.toMst","location":"kmath-symja/space.kscience.kmath.symja/to-mst.html","searchKeys":["toMst","fun IExpr.toMst(evaluator: ExprEvaluator = DEFAULT_EVALUATOR): MST","space.kscience.kmath.symja.toMst"]},{"name":"fun MST.toIExpr(): IExpr","description":"space.kscience.kmath.symja.toIExpr","location":"kmath-symja/space.kscience.kmath.symja/to-i-expr.html","searchKeys":["toIExpr","fun MST.toIExpr(): IExpr","space.kscience.kmath.symja.toIExpr"]},{"name":"open operator override fun invoke(arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.symja.SymjaExpression.invoke","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/invoke.html","searchKeys":["invoke","open operator override fun invoke(arguments: Map<Symbol, T>): T","space.kscience.kmath.symja.SymjaExpression.invoke"]},{"name":"open override fun derivativeOrNull(symbols: List<Symbol>): SymjaExpression<T, A>","description":"space.kscience.kmath.symja.SymjaExpression.derivativeOrNull","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","open override fun derivativeOrNull(symbols: List<Symbol>): SymjaExpression<T, A>","space.kscience.kmath.symja.SymjaExpression.derivativeOrNull"]},{"name":"val algebra: A","description":"space.kscience.kmath.symja.SymjaExpression.algebra","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/algebra.html","searchKeys":["algebra","val algebra: A","space.kscience.kmath.symja.SymjaExpression.algebra"]},{"name":"val evaluator: ExprEvaluator","description":"space.kscience.kmath.symja.SymjaExpression.evaluator","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/evaluator.html","searchKeys":["evaluator","val evaluator: ExprEvaluator","space.kscience.kmath.symja.SymjaExpression.evaluator"]},{"name":"val mst: MST","description":"space.kscience.kmath.symja.SymjaExpression.mst","location":"kmath-symja/space.kscience.kmath.symja/-symja-expression/mst.html","searchKeys":["mst","val mst: MST","space.kscience.kmath.symja.SymjaExpression.mst"]},{"name":"class KMathNumber<T : Number, A : NumericAlgebra<T>>(algebra: A, value: T) : SConst<KMathNumber<T, A>> ","description":"space.kscience.kmath.kotlingrad.KMathNumber","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/index.html","searchKeys":["KMathNumber","class KMathNumber<T : Number, A : NumericAlgebra<T>>(algebra: A, value: T) : SConst<KMathNumber<T, A>> ","space.kscience.kmath.kotlingrad.KMathNumber"]},{"name":"class KotlingradExpression<T : Number, A : NumericAlgebra<T>>(algebra: A, mst: MST) : SpecialDifferentiableExpression<T, KotlingradExpression<T, A>> ","description":"space.kscience.kmath.kotlingrad.KotlingradExpression","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/index.html","searchKeys":["KotlingradExpression","class KotlingradExpression<T : Number, A : NumericAlgebra<T>>(algebra: A, mst: MST) : SpecialDifferentiableExpression<T, KotlingradExpression<T, A>> ","space.kscience.kmath.kotlingrad.KotlingradExpression"]},{"name":"class KotlingradProcessor<T : Number, A : NumericAlgebra<T>>(algebra: A) : AutoDiffProcessor<T, MST, MstExtendedField> ","description":"space.kscience.kmath.kotlingrad.KotlingradProcessor","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-processor/index.html","searchKeys":["KotlingradProcessor","class KotlingradProcessor<T : Number, A : NumericAlgebra<T>>(algebra: A) : AutoDiffProcessor<T, MST, MstExtendedField> ","space.kscience.kmath.kotlingrad.KotlingradProcessor"]},{"name":"fun <A : NumericAlgebra<T>> KotlingradExpression(algebra: A, mst: MST)","description":"space.kscience.kmath.kotlingrad.KotlingradExpression.KotlingradExpression","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/-kotlingrad-expression.html","searchKeys":["KotlingradExpression","fun <A : NumericAlgebra<T>> KotlingradExpression(algebra: A, mst: MST)","space.kscience.kmath.kotlingrad.KotlingradExpression.KotlingradExpression"]},{"name":"fun <A : NumericAlgebra<T>> KotlingradProcessor(algebra: A)","description":"space.kscience.kmath.kotlingrad.KotlingradProcessor.KotlingradProcessor","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-processor/-kotlingrad-processor.html","searchKeys":["KotlingradProcessor","fun <A : NumericAlgebra<T>> KotlingradProcessor(algebra: A)","space.kscience.kmath.kotlingrad.KotlingradProcessor.KotlingradProcessor"]},{"name":"fun <T : Number, A : NumericAlgebra<T>> KMathNumber(algebra: A, value: T)","description":"space.kscience.kmath.kotlingrad.KMathNumber.KMathNumber","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/-k-math-number.html","searchKeys":["KMathNumber","fun <T : Number, A : NumericAlgebra<T>> KMathNumber(algebra: A, value: T)","space.kscience.kmath.kotlingrad.KMathNumber.KMathNumber"]},{"name":"fun <T : Number, A : NumericAlgebra<T>> MST.toKotlingradExpression(algebra: A): KotlingradExpression<T, A>","description":"space.kscience.kmath.kotlingrad.toKotlingradExpression","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-kotlingrad-expression.html","searchKeys":["toKotlingradExpression","fun <T : Number, A : NumericAlgebra<T>> MST.toKotlingradExpression(algebra: A): KotlingradExpression<T, A>","space.kscience.kmath.kotlingrad.toKotlingradExpression"]},{"name":"fun <X : SFun<X>> MST.Numeric.toSConst(): SConst<X>","description":"space.kscience.kmath.kotlingrad.toSConst","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-s-const.html","searchKeys":["toSConst","fun <X : SFun<X>> MST.Numeric.toSConst(): SConst<X>","space.kscience.kmath.kotlingrad.toSConst"]},{"name":"fun <X : SFun<X>> MST.toSFun(): SFun<X>","description":"space.kscience.kmath.kotlingrad.toSFun","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-s-fun.html","searchKeys":["toSFun","fun <X : SFun<X>> MST.toSFun(): SFun<X>","space.kscience.kmath.kotlingrad.toSFun"]},{"name":"fun <X : SFun<X>> SConst<X>.toMst(): MST.Numeric","description":"space.kscience.kmath.kotlingrad.toMst","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-mst.html","searchKeys":["toMst","fun <X : SFun<X>> SConst<X>.toMst(): MST.Numeric","space.kscience.kmath.kotlingrad.toMst"]},{"name":"fun <X : SFun<X>> SFun<X>.toMst(): MST","description":"space.kscience.kmath.kotlingrad.toMst","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-mst.html","searchKeys":["toMst","fun <X : SFun<X>> SFun<X>.toMst(): MST","space.kscience.kmath.kotlingrad.toMst"]},{"name":"fun <X : SFun<X>> SVar<X>.toMst(): Symbol","description":"space.kscience.kmath.kotlingrad.toMst","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/to-mst.html","searchKeys":["toMst","fun <X : SFun<X>> SVar<X>.toMst(): Symbol","space.kscience.kmath.kotlingrad.toMst"]},{"name":"open operator override fun invoke(arguments: Map<Symbol, T>): T","description":"space.kscience.kmath.kotlingrad.KotlingradExpression.invoke","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/invoke.html","searchKeys":["invoke","open operator override fun invoke(arguments: Map<Symbol, T>): T","space.kscience.kmath.kotlingrad.KotlingradExpression.invoke"]},{"name":"open override fun derivativeOrNull(symbols: List<Symbol>): KotlingradExpression<T, A>","description":"space.kscience.kmath.kotlingrad.KotlingradExpression.derivativeOrNull","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/derivative-or-null.html","searchKeys":["derivativeOrNull","open override fun derivativeOrNull(symbols: List<Symbol>): KotlingradExpression<T, A>","space.kscience.kmath.kotlingrad.KotlingradExpression.derivativeOrNull"]},{"name":"open override fun differentiate(function: MstExtendedField.() -> MST): DifferentiableExpression<T>","description":"space.kscience.kmath.kotlingrad.KotlingradProcessor.differentiate","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-processor/differentiate.html","searchKeys":["differentiate","open override fun differentiate(function: MstExtendedField.() -> MST): DifferentiableExpression<T>","space.kscience.kmath.kotlingrad.KotlingradProcessor.differentiate"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.kotlingrad.KMathNumber.toString","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.kotlingrad.KMathNumber.toString"]},{"name":"open override fun wrap(number: Number): KMathNumber<T, A>","description":"space.kscience.kmath.kotlingrad.KMathNumber.wrap","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/wrap.html","searchKeys":["wrap","open override fun wrap(number: Number): KMathNumber<T, A>","space.kscience.kmath.kotlingrad.KMathNumber.wrap"]},{"name":"open override val value: T","description":"space.kscience.kmath.kotlingrad.KMathNumber.value","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/value.html","searchKeys":["value","open override val value: T","space.kscience.kmath.kotlingrad.KMathNumber.value"]},{"name":"val algebra: A","description":"space.kscience.kmath.kotlingrad.KMathNumber.algebra","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-k-math-number/algebra.html","searchKeys":["algebra","val algebra: A","space.kscience.kmath.kotlingrad.KMathNumber.algebra"]},{"name":"val algebra: A","description":"space.kscience.kmath.kotlingrad.KotlingradExpression.algebra","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/algebra.html","searchKeys":["algebra","val algebra: A","space.kscience.kmath.kotlingrad.KotlingradExpression.algebra"]},{"name":"val algebra: A","description":"space.kscience.kmath.kotlingrad.KotlingradProcessor.algebra","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-processor/algebra.html","searchKeys":["algebra","val algebra: A","space.kscience.kmath.kotlingrad.KotlingradProcessor.algebra"]},{"name":"val mst: MST","description":"space.kscience.kmath.kotlingrad.KotlingradExpression.mst","location":"kmath-kotlingrad/space.kscience.kmath.kotlingrad/-kotlingrad-expression/mst.html","searchKeys":["mst","val mst: MST","space.kscience.kmath.kotlingrad.KotlingradExpression.mst"]},{"name":"abstract fun build(numPoints: Int): Pair<Buffer<Double>, Buffer<Double>>","description":"space.kscience.kmath.integration.GaussIntegratorRuleFactory.build","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/build.html","searchKeys":["build","abstract fun build(numPoints: Int): Pair<Buffer<Double>, Buffer<Double>>","space.kscience.kmath.integration.GaussIntegratorRuleFactory.build"]},{"name":"abstract fun findPiece(arg: T): R?","description":"space.kscience.kmath.functions.Piecewise.findPiece","location":"kmath-functions/space.kscience.kmath.functions/-piecewise/find-piece.html","searchKeys":["findPiece","abstract fun findPiece(arg: T): R?","space.kscience.kmath.functions.Piecewise.findPiece"]},{"name":"abstract fun interpolate(points: XYColumnarData<T, X, Y>): (X) -> Y","description":"space.kscience.kmath.interpolation.Interpolator.interpolate","location":"kmath-functions/space.kscience.kmath.interpolation/-interpolator/interpolate.html","searchKeys":["interpolate","abstract fun interpolate(points: XYColumnarData<T, X, Y>): (X) -> Y","space.kscience.kmath.interpolation.Interpolator.interpolate"]},{"name":"abstract fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.PolynomialInterpolator.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","abstract fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.PolynomialInterpolator.interpolatePolynomials"]},{"name":"abstract fun process(integrand: I): I","description":"space.kscience.kmath.integration.Integrator.process","location":"kmath-functions/space.kscience.kmath.integration/-integrator/process.html","searchKeys":["process","abstract fun process(integrand: I): I","space.kscience.kmath.integration.Integrator.process"]},{"name":"abstract override fun findPiece(arg: T): Polynomial<T>?","description":"space.kscience.kmath.functions.PiecewisePolynomial.findPiece","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial/find-piece.html","searchKeys":["findPiece","abstract override fun findPiece(arg: T): Polynomial<T>?","space.kscience.kmath.functions.PiecewisePolynomial.findPiece"]},{"name":"abstract override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandFeature.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-feature/to-string.html","searchKeys":["toString","abstract override fun toString(): String","space.kscience.kmath.integration.IntegrandFeature.toString"]},{"name":"abstract val algebra: Ring<T>","description":"space.kscience.kmath.interpolation.PolynomialInterpolator.algebra","location":"kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/algebra.html","searchKeys":["algebra","abstract val algebra: Ring<T>","space.kscience.kmath.interpolation.PolynomialInterpolator.algebra"]},{"name":"abstract val features: FeatureSet<IntegrandFeature>","description":"space.kscience.kmath.integration.Integrand.features","location":"kmath-functions/space.kscience.kmath.integration/-integrand/features.html","searchKeys":["features","abstract val features: FeatureSet<IntegrandFeature>","space.kscience.kmath.integration.Integrand.features"]},{"name":"abstract val pieces: Collection<Pair<ClosedRange<T>, Polynomial<T>>>","description":"space.kscience.kmath.functions.PiecewisePolynomial.pieces","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial/pieces.html","searchKeys":["pieces","abstract val pieces: Collection<Pair<ClosedRange<T>, Polynomial<T>>>","space.kscience.kmath.functions.PiecewisePolynomial.pieces"]},{"name":"class GaussIntegrator<T : Any>(algebra: Field<T>) : Integrator<UnivariateIntegrand<T>> ","description":"space.kscience.kmath.integration.GaussIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator/index.html","searchKeys":["GaussIntegrator","class GaussIntegrator<T : Any>(algebra: Field<T>) : Integrator<UnivariateIntegrand<T>> ","space.kscience.kmath.integration.GaussIntegrator"]},{"name":"class IntegrandAbsoluteAccuracy(accuracy: Double) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandAbsoluteAccuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/index.html","searchKeys":["IntegrandAbsoluteAccuracy","class IntegrandAbsoluteAccuracy(accuracy: Double) : IntegrandFeature","space.kscience.kmath.integration.IntegrandAbsoluteAccuracy"]},{"name":"class IntegrandCallsPerformed(calls: Int) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandCallsPerformed","location":"kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/index.html","searchKeys":["IntegrandCallsPerformed","class IntegrandCallsPerformed(calls: Int) : IntegrandFeature","space.kscience.kmath.integration.IntegrandCallsPerformed"]},{"name":"class IntegrandIterationsRange(range: IntRange) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandIterationsRange","location":"kmath-functions/space.kscience.kmath.integration/-integrand-iterations-range/index.html","searchKeys":["IntegrandIterationsRange","class IntegrandIterationsRange(range: IntRange) : IntegrandFeature","space.kscience.kmath.integration.IntegrandIterationsRange"]},{"name":"class IntegrandMaxCalls(maxCalls: Int) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandMaxCalls","location":"kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/index.html","searchKeys":["IntegrandMaxCalls","class IntegrandMaxCalls(maxCalls: Int) : IntegrandFeature","space.kscience.kmath.integration.IntegrandMaxCalls"]},{"name":"class IntegrandRelativeAccuracy(accuracy: Double) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandRelativeAccuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/index.html","searchKeys":["IntegrandRelativeAccuracy","class IntegrandRelativeAccuracy(accuracy: Double) : IntegrandFeature","space.kscience.kmath.integration.IntegrandRelativeAccuracy"]},{"name":"class IntegrandValue<out T : Any>(value: T) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrandValue","location":"kmath-functions/space.kscience.kmath.integration/-integrand-value/index.html","searchKeys":["IntegrandValue","class IntegrandValue<out T : Any>(value: T) : IntegrandFeature","space.kscience.kmath.integration.IntegrandValue"]},{"name":"class IntegrationRange(range: ClosedRange<Double>) : IntegrandFeature","description":"space.kscience.kmath.integration.IntegrationRange","location":"kmath-functions/space.kscience.kmath.integration/-integration-range/index.html","searchKeys":["IntegrationRange","class IntegrationRange(range: ClosedRange<Double>) : IntegrandFeature","space.kscience.kmath.integration.IntegrationRange"]},{"name":"class LinearInterpolator<T : Comparable<T>>(algebra: Field<T>) : PolynomialInterpolator<T> ","description":"space.kscience.kmath.interpolation.LinearInterpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/index.html","searchKeys":["LinearInterpolator","class LinearInterpolator<T : Comparable<T>>(algebra: Field<T>) : PolynomialInterpolator<T> ","space.kscience.kmath.interpolation.LinearInterpolator"]},{"name":"class MultivariateIntegrand<T : Any> : Integrand","description":"space.kscience.kmath.integration.MultivariateIntegrand","location":"kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/index.html","searchKeys":["MultivariateIntegrand","class MultivariateIntegrand<T : Any> : Integrand","space.kscience.kmath.integration.MultivariateIntegrand"]},{"name":"class PiecewiseBuilder<T : Comparable<T>>(delimiter: T)","description":"space.kscience.kmath.functions.PiecewiseBuilder","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-builder/index.html","searchKeys":["PiecewiseBuilder","class PiecewiseBuilder<T : Comparable<T>>(delimiter: T)","space.kscience.kmath.functions.PiecewiseBuilder"]},{"name":"class Polynomial<out T>(coefficients: List<T>)","description":"space.kscience.kmath.functions.Polynomial","location":"kmath-functions/space.kscience.kmath.functions/-polynomial/index.html","searchKeys":["Polynomial","class Polynomial<out T>(coefficients: List<T>)","space.kscience.kmath.functions.Polynomial"]},{"name":"class PolynomialSpace<T, C : Ring<T>, ScaleOperations<T>>(ring: C) : Group<Polynomial<T>> , ScaleOperations<Polynomial<T>> ","description":"space.kscience.kmath.functions.PolynomialSpace","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/index.html","searchKeys":["PolynomialSpace","class PolynomialSpace<T, C : Ring<T>, ScaleOperations<T>>(ring: C) : Group<Polynomial<T>> , ScaleOperations<Polynomial<T>> ","space.kscience.kmath.functions.PolynomialSpace"]},{"name":"class SimpsonIntegrator<T : Any>(algebra: Field<T>) : Integrator<UnivariateIntegrand<T>> ","description":"space.kscience.kmath.integration.SimpsonIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-simpson-integrator/index.html","searchKeys":["SimpsonIntegrator","class SimpsonIntegrator<T : Any>(algebra: Field<T>) : Integrator<UnivariateIntegrand<T>> ","space.kscience.kmath.integration.SimpsonIntegrator"]},{"name":"class SplineIntegrator<T : Comparable<T>>(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>) : Integrator<UnivariateIntegrand<T>> ","description":"space.kscience.kmath.integration.SplineIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-spline-integrator/index.html","searchKeys":["SplineIntegrator","class SplineIntegrator<T : Comparable<T>>(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>) : Integrator<UnivariateIntegrand<T>> ","space.kscience.kmath.integration.SplineIntegrator"]},{"name":"class SplineInterpolator<T : Comparable<T>>(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>) : PolynomialInterpolator<T> ","description":"space.kscience.kmath.interpolation.SplineInterpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/index.html","searchKeys":["SplineInterpolator","class SplineInterpolator<T : Comparable<T>>(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>) : PolynomialInterpolator<T> ","space.kscience.kmath.interpolation.SplineInterpolator"]},{"name":"class UnivariateIntegrand<T> : Integrand","description":"space.kscience.kmath.integration.UnivariateIntegrand","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand/index.html","searchKeys":["UnivariateIntegrand","class UnivariateIntegrand<T> : Integrand","space.kscience.kmath.integration.UnivariateIntegrand"]},{"name":"class UnivariateIntegrandRanges(ranges: List<Pair<ClosedRange<Double>, Int>>) : IntegrandFeature","description":"space.kscience.kmath.integration.UnivariateIntegrandRanges","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/index.html","searchKeys":["UnivariateIntegrandRanges","class UnivariateIntegrandRanges(ranges: List<Pair<ClosedRange<Double>, Int>>) : IntegrandFeature","space.kscience.kmath.integration.UnivariateIntegrandRanges"]},{"name":"class UnivariateIntegrationNodes(nodes: Buffer<Double>) : IntegrandFeature","description":"space.kscience.kmath.integration.UnivariateIntegrationNodes","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integration-nodes/index.html","searchKeys":["UnivariateIntegrationNodes","class UnivariateIntegrationNodes(nodes: Buffer<Double>) : IntegrandFeature","space.kscience.kmath.integration.UnivariateIntegrationNodes"]},{"name":"fun <C : Ring<T>, ScaleOperations<T>> PolynomialSpace(ring: C)","description":"space.kscience.kmath.functions.PolynomialSpace.PolynomialSpace","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/-polynomial-space.html","searchKeys":["PolynomialSpace","fun <C : Ring<T>, ScaleOperations<T>> PolynomialSpace(ring: C)","space.kscience.kmath.functions.PolynomialSpace.PolynomialSpace"]},{"name":"fun <T : Any> GaussIntegrator(algebra: Field<T>)","description":"space.kscience.kmath.integration.GaussIntegrator.GaussIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator/-gauss-integrator.html","searchKeys":["GaussIntegrator","fun <T : Any> GaussIntegrator(algebra: Field<T>)","space.kscience.kmath.integration.GaussIntegrator.GaussIntegrator"]},{"name":"fun <T : Any> GaussIntegrator<T>.integrate(range: ClosedRange<Double>, order: Int = 10, intervals: Int = 10, vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Any> GaussIntegrator<T>.integrate(range: ClosedRange<Double>, order: Int = 10, intervals: Int = 10, vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Any> MultivariateIntegrand(vararg features: IntegrandFeature, function: (Point<T>) -> T): MultivariateIntegrand<T>","description":"space.kscience.kmath.integration.MultivariateIntegrand","location":"kmath-functions/space.kscience.kmath.integration/-multivariate-integrand.html","searchKeys":["MultivariateIntegrand","fun <T : Any> MultivariateIntegrand(vararg features: IntegrandFeature, function: (Point<T>) -> T): MultivariateIntegrand<T>","space.kscience.kmath.integration.MultivariateIntegrand"]},{"name":"fun <T : Any> SimpsonIntegrator(algebra: Field<T>)","description":"space.kscience.kmath.integration.SimpsonIntegrator.SimpsonIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-simpson-integrator/-simpson-integrator.html","searchKeys":["SimpsonIntegrator","fun <T : Any> SimpsonIntegrator(algebra: Field<T>)","space.kscience.kmath.integration.SimpsonIntegrator.SimpsonIntegrator"]},{"name":"fun <T : Any> UnivariateIntegrand(function: (Double) -> T, vararg features: IntegrandFeature): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.UnivariateIntegrand","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand.html","searchKeys":["UnivariateIntegrand","fun <T : Any> UnivariateIntegrand(function: (Double) -> T, vararg features: IntegrandFeature): UnivariateIntegrand<T>","space.kscience.kmath.integration.UnivariateIntegrand"]},{"name":"fun <T : Any> UnivariateIntegrator<T>.integrate(range: ClosedRange<Double>, featureBuilder: MutableList<IntegrandFeature>.() -> Unit = {}, function: (Double) -> T): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Any> UnivariateIntegrator<T>.integrate(range: ClosedRange<Double>, featureBuilder: MutableList<IntegrandFeature>.() -> Unit = {}, function: (Double) -> T): UnivariateIntegrand<T>","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Any> UnivariateIntegrator<T>.integrate(range: ClosedRange<Double>, vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Any> UnivariateIntegrator<T>.integrate(range: ClosedRange<Double>, vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Any> UnivariateIntegrator<T>.integrate(vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Any> UnivariateIntegrator<T>.integrate(vararg features: IntegrandFeature, function: (Double) -> T): UnivariateIntegrand<T>","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.asFunction(ring: C): (T) -> T?","description":"space.kscience.kmath.functions.asFunction","location":"kmath-functions/space.kscience.kmath.functions/as-function.html","searchKeys":["asFunction","fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.asFunction(ring: C): (T) -> T?","space.kscience.kmath.functions.asFunction"]},{"name":"fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.asFunction(ring: C, defaultValue: T): (T) -> T","description":"space.kscience.kmath.functions.asFunction","location":"kmath-functions/space.kscience.kmath.functions/as-function.html","searchKeys":["asFunction","fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.asFunction(ring: C, defaultValue: T): (T) -> T","space.kscience.kmath.functions.asFunction"]},{"name":"fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.value(ring: C, arg: T): T?","description":"space.kscience.kmath.functions.value","location":"kmath-functions/space.kscience.kmath.functions/value.html","searchKeys":["value","fun <T : Comparable<T>, C : Ring<T>> PiecewisePolynomial<T>.value(ring: C, arg: T): T?","space.kscience.kmath.functions.value"]},{"name":"fun <T : Comparable<T>> LinearInterpolator(algebra: Field<T>)","description":"space.kscience.kmath.interpolation.LinearInterpolator.LinearInterpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/-linear-interpolator.html","searchKeys":["LinearInterpolator","fun <T : Comparable<T>> LinearInterpolator(algebra: Field<T>)","space.kscience.kmath.interpolation.LinearInterpolator.LinearInterpolator"]},{"name":"fun <T : Comparable<T>> PiecewiseBuilder(delimiter: T)","description":"space.kscience.kmath.functions.PiecewiseBuilder.PiecewiseBuilder","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-builder/-piecewise-builder.html","searchKeys":["PiecewiseBuilder","fun <T : Comparable<T>> PiecewiseBuilder(delimiter: T)","space.kscience.kmath.functions.PiecewiseBuilder.PiecewiseBuilder"]},{"name":"fun <T : Comparable<T>> PiecewisePolynomial(pieces: Collection<Pair<ClosedRange<T>, Polynomial<T>>>): PiecewisePolynomial<T>","description":"space.kscience.kmath.functions.PiecewisePolynomial","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial.html","searchKeys":["PiecewisePolynomial","fun <T : Comparable<T>> PiecewisePolynomial(pieces: Collection<Pair<ClosedRange<T>, Polynomial<T>>>): PiecewisePolynomial<T>","space.kscience.kmath.functions.PiecewisePolynomial"]},{"name":"fun <T : Comparable<T>> PiecewisePolynomial(startingPoint: T, builder: PiecewiseBuilder<T>.() -> Unit): PiecewisePolynomial<T>","description":"space.kscience.kmath.functions.PiecewisePolynomial","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial.html","searchKeys":["PiecewisePolynomial","fun <T : Comparable<T>> PiecewisePolynomial(startingPoint: T, builder: PiecewiseBuilder<T>.() -> Unit): PiecewisePolynomial<T>","space.kscience.kmath.functions.PiecewisePolynomial"]},{"name":"fun <T : Comparable<T>> PiecewisePolynomial<T>.integrate(algebra: Field<T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Comparable<T>> PiecewisePolynomial<T>.integrate(algebra: Field<T>): PiecewisePolynomial<T>","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Comparable<T>> PiecewisePolynomial<T>.integrate(algebra: Field<T>, range: ClosedRange<T>): T","description":"space.kscience.kmath.integration.integrate","location":"kmath-functions/space.kscience.kmath.integration/integrate.html","searchKeys":["integrate","fun <T : Comparable<T>> PiecewisePolynomial<T>.integrate(algebra: Field<T>, range: ClosedRange<T>): T","space.kscience.kmath.integration.integrate"]},{"name":"fun <T : Comparable<T>> Polynomial<T>.integrate(algebra: Field<T>, range: ClosedRange<T>): T","description":"space.kscience.kmath.functions.integrate","location":"kmath-functions/space.kscience.kmath.functions/integrate.html","searchKeys":["integrate","fun <T : Comparable<T>> Polynomial<T>.integrate(algebra: Field<T>, range: ClosedRange<T>): T","space.kscience.kmath.functions.integrate"]},{"name":"fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(data: List<Pair<T, T>>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(data: List<Pair<T, T>>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.interpolatePolynomials"]},{"name":"fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(data: Map<T, T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(data: Map<T, T>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.interpolatePolynomials"]},{"name":"fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(x: Buffer<T>, y: Buffer<T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","fun <T : Comparable<T>> PolynomialInterpolator<T>.interpolatePolynomials(x: Buffer<T>, y: Buffer<T>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.interpolatePolynomials"]},{"name":"fun <T : Comparable<T>> SplineIntegrator(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>)","description":"space.kscience.kmath.integration.SplineIntegrator.SplineIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-spline-integrator/-spline-integrator.html","searchKeys":["SplineIntegrator","fun <T : Comparable<T>> SplineIntegrator(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>)","space.kscience.kmath.integration.SplineIntegrator.SplineIntegrator"]},{"name":"fun <T : Comparable<T>> SplineInterpolator(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>)","description":"space.kscience.kmath.interpolation.SplineInterpolator.SplineInterpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/-spline-interpolator.html","searchKeys":["SplineInterpolator","fun <T : Comparable<T>> SplineInterpolator(algebra: Field<T>, bufferFactory: MutableBufferFactory<T>)","space.kscience.kmath.interpolation.SplineInterpolator.SplineInterpolator"]},{"name":"fun <T, A : Field<T>, NumericAlgebra<T>> Polynomial<T>.integrate(algebra: A): Polynomial<T>","description":"space.kscience.kmath.functions.integrate","location":"kmath-functions/space.kscience.kmath.functions/integrate.html","searchKeys":["integrate","fun <T, A : Field<T>, NumericAlgebra<T>> Polynomial<T>.integrate(algebra: A): Polynomial<T>","space.kscience.kmath.functions.integrate"]},{"name":"fun <T, A : Ring<T>, NumericAlgebra<T>> Polynomial<T>.differentiate(algebra: A): Polynomial<T>","description":"space.kscience.kmath.functions.differentiate","location":"kmath-functions/space.kscience.kmath.functions/differentiate.html","searchKeys":["differentiate","fun <T, A : Ring<T>, NumericAlgebra<T>> Polynomial<T>.differentiate(algebra: A): Polynomial<T>","space.kscience.kmath.functions.differentiate"]},{"name":"fun <T, C : Ring<T>> Polynomial<T>.asFunction(ring: C): (T) -> T","description":"space.kscience.kmath.functions.asFunction","location":"kmath-functions/space.kscience.kmath.functions/as-function.html","searchKeys":["asFunction","fun <T, C : Ring<T>> Polynomial<T>.asFunction(ring: C): (T) -> T","space.kscience.kmath.functions.asFunction"]},{"name":"fun <T, C : Ring<T>> Polynomial<T>.value(ring: C, arg: T): T","description":"space.kscience.kmath.functions.value","location":"kmath-functions/space.kscience.kmath.functions/value.html","searchKeys":["value","fun <T, C : Ring<T>> Polynomial<T>.value(ring: C, arg: T): T","space.kscience.kmath.functions.value"]},{"name":"fun <T> Polynomial(vararg coefficients: T): Polynomial<T>","description":"space.kscience.kmath.functions.Polynomial","location":"kmath-functions/space.kscience.kmath.functions/-polynomial.html","searchKeys":["Polynomial","fun <T> Polynomial(vararg coefficients: T): Polynomial<T>","space.kscience.kmath.functions.Polynomial"]},{"name":"fun <out T : Any> IntegrandValue(value: T)","description":"space.kscience.kmath.integration.IntegrandValue.IntegrandValue","location":"kmath-functions/space.kscience.kmath.integration/-integrand-value/-integrand-value.html","searchKeys":["IntegrandValue","fun <out T : Any> IntegrandValue(value: T)","space.kscience.kmath.integration.IntegrandValue.IntegrandValue"]},{"name":"fun <out T> Polynomial(coefficients: List<T>)","description":"space.kscience.kmath.functions.Polynomial.Polynomial","location":"kmath-functions/space.kscience.kmath.functions/-polynomial/-polynomial.html","searchKeys":["Polynomial","fun <out T> Polynomial(coefficients: List<T>)","space.kscience.kmath.functions.Polynomial.Polynomial"]},{"name":"fun GaussIntegratorRuleFactory.build(numPoints: Int, range: ClosedRange<Double>): Pair<Buffer<Double>, Buffer<Double>>","description":"space.kscience.kmath.integration.build","location":"kmath-functions/space.kscience.kmath.integration/build.html","searchKeys":["build","fun GaussIntegratorRuleFactory.build(numPoints: Int, range: ClosedRange<Double>): Pair<Buffer<Double>, Buffer<Double>>","space.kscience.kmath.integration.build"]},{"name":"fun IntegrandAbsoluteAccuracy(accuracy: Double)","description":"space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.IntegrandAbsoluteAccuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/-integrand-absolute-accuracy.html","searchKeys":["IntegrandAbsoluteAccuracy","fun IntegrandAbsoluteAccuracy(accuracy: Double)","space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.IntegrandAbsoluteAccuracy"]},{"name":"fun IntegrandCallsPerformed(calls: Int)","description":"space.kscience.kmath.integration.IntegrandCallsPerformed.IntegrandCallsPerformed","location":"kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/-integrand-calls-performed.html","searchKeys":["IntegrandCallsPerformed","fun IntegrandCallsPerformed(calls: Int)","space.kscience.kmath.integration.IntegrandCallsPerformed.IntegrandCallsPerformed"]},{"name":"fun IntegrandIterationsRange(range: IntRange)","description":"space.kscience.kmath.integration.IntegrandIterationsRange.IntegrandIterationsRange","location":"kmath-functions/space.kscience.kmath.integration/-integrand-iterations-range/-integrand-iterations-range.html","searchKeys":["IntegrandIterationsRange","fun IntegrandIterationsRange(range: IntRange)","space.kscience.kmath.integration.IntegrandIterationsRange.IntegrandIterationsRange"]},{"name":"fun IntegrandMaxCalls(maxCalls: Int)","description":"space.kscience.kmath.integration.IntegrandMaxCalls.IntegrandMaxCalls","location":"kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/-integrand-max-calls.html","searchKeys":["IntegrandMaxCalls","fun IntegrandMaxCalls(maxCalls: Int)","space.kscience.kmath.integration.IntegrandMaxCalls.IntegrandMaxCalls"]},{"name":"fun IntegrandRelativeAccuracy(accuracy: Double)","description":"space.kscience.kmath.integration.IntegrandRelativeAccuracy.IntegrandRelativeAccuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/-integrand-relative-accuracy.html","searchKeys":["IntegrandRelativeAccuracy","fun IntegrandRelativeAccuracy(accuracy: Double)","space.kscience.kmath.integration.IntegrandRelativeAccuracy.IntegrandRelativeAccuracy"]},{"name":"fun IntegrationRange(range: ClosedRange<Double>)","description":"space.kscience.kmath.integration.IntegrationRange.IntegrationRange","location":"kmath-functions/space.kscience.kmath.integration/-integration-range/-integration-range.html","searchKeys":["IntegrationRange","fun IntegrationRange(range: ClosedRange<Double>)","space.kscience.kmath.integration.IntegrationRange.IntegrationRange"]},{"name":"fun Polynomial<Double>.value(arg: Double): Double","description":"space.kscience.kmath.functions.value","location":"kmath-functions/space.kscience.kmath.functions/value.html","searchKeys":["value","fun Polynomial<Double>.value(arg: Double): Double","space.kscience.kmath.functions.value"]},{"name":"fun Polynomial<T>.asFunction(): (T) -> T","description":"space.kscience.kmath.functions.PolynomialSpace.asFunction","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/as-function.html","searchKeys":["asFunction","fun Polynomial<T>.asFunction(): (T) -> T","space.kscience.kmath.functions.PolynomialSpace.asFunction"]},{"name":"fun UnivariateIntegrandRanges(ranges: List<Pair<ClosedRange<Double>, Int>>)","description":"space.kscience.kmath.integration.UnivariateIntegrandRanges.UnivariateIntegrandRanges","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/-univariate-integrand-ranges.html","searchKeys":["UnivariateIntegrandRanges","fun UnivariateIntegrandRanges(ranges: List<Pair<ClosedRange<Double>, Int>>)","space.kscience.kmath.integration.UnivariateIntegrandRanges.UnivariateIntegrandRanges"]},{"name":"fun UnivariateIntegrandRanges(vararg pairs: Pair<ClosedRange<Double>, Int>)","description":"space.kscience.kmath.integration.UnivariateIntegrandRanges.UnivariateIntegrandRanges","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/-univariate-integrand-ranges.html","searchKeys":["UnivariateIntegrandRanges","fun UnivariateIntegrandRanges(vararg pairs: Pair<ClosedRange<Double>, Int>)","space.kscience.kmath.integration.UnivariateIntegrandRanges.UnivariateIntegrandRanges"]},{"name":"fun UnivariateIntegrationNodes(nodes: Buffer<Double>)","description":"space.kscience.kmath.integration.UnivariateIntegrationNodes.UnivariateIntegrationNodes","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integration-nodes/-univariate-integration-nodes.html","searchKeys":["UnivariateIntegrationNodes","fun UnivariateIntegrationNodes(nodes: Buffer<Double>)","space.kscience.kmath.integration.UnivariateIntegrationNodes.UnivariateIntegrationNodes"]},{"name":"fun UnivariateIntegrationNodes(vararg nodes: Double)","description":"space.kscience.kmath.integration.UnivariateIntegrationNodes.UnivariateIntegrationNodes","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integration-nodes/-univariate-integration-nodes.html","searchKeys":["UnivariateIntegrationNodes","fun UnivariateIntegrationNodes(vararg nodes: Double)","space.kscience.kmath.integration.UnivariateIntegrationNodes.UnivariateIntegrationNodes"]},{"name":"fun build(): PiecewisePolynomial<T>","description":"space.kscience.kmath.functions.PiecewiseBuilder.build","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-builder/build.html","searchKeys":["build","fun build(): PiecewisePolynomial<T>","space.kscience.kmath.functions.PiecewiseBuilder.build"]},{"name":"fun double(numPoints: Int, range: ClosedRange<Double>): Pair<Buffer<Double>, Buffer<Double>>","description":"space.kscience.kmath.integration.GaussIntegratorRuleFactory.Companion.double","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/-companion/double.html","searchKeys":["double","fun double(numPoints: Int, range: ClosedRange<Double>): Pair<Buffer<Double>, Buffer<Double>>","space.kscience.kmath.integration.GaussIntegratorRuleFactory.Companion.double"]},{"name":"fun fun interface Interpolator<T, in X : T, Y : T>","description":"space.kscience.kmath.interpolation.Interpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-interpolator/index.html","searchKeys":["Interpolator","fun fun interface Interpolator<T, in X : T, Y : T>","space.kscience.kmath.interpolation.Interpolator"]},{"name":"fun fun interface Piecewise<in T, out R>","description":"space.kscience.kmath.functions.Piecewise","location":"kmath-functions/space.kscience.kmath.functions/-piecewise/index.html","searchKeys":["Piecewise","fun fun interface Piecewise<in T, out R>","space.kscience.kmath.functions.Piecewise"]},{"name":"fun putLeft(left: T, piece: Polynomial<T>)","description":"space.kscience.kmath.functions.PiecewiseBuilder.putLeft","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-builder/put-left.html","searchKeys":["putLeft","fun putLeft(left: T, piece: Polynomial<T>)","space.kscience.kmath.functions.PiecewiseBuilder.putLeft"]},{"name":"fun putRight(right: T, piece: Polynomial<T>)","description":"space.kscience.kmath.functions.PiecewiseBuilder.putRight","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-builder/put-right.html","searchKeys":["putRight","fun putRight(right: T, piece: Polynomial<T>)","space.kscience.kmath.functions.PiecewiseBuilder.putRight"]},{"name":"inline fun <T : IntegrandFeature> Integrand.getFeature(): T?","description":"space.kscience.kmath.integration.getFeature","location":"kmath-functions/space.kscience.kmath.integration/get-feature.html","searchKeys":["getFeature","inline fun <T : IntegrandFeature> Integrand.getFeature(): T?","space.kscience.kmath.integration.getFeature"]},{"name":"inline fun <T, C : Ring<T>, ScaleOperations<T>, R> C.polynomial(block: PolynomialSpace<T, C>.() -> R): R","description":"space.kscience.kmath.functions.polynomial","location":"kmath-functions/space.kscience.kmath.functions/polynomial.html","searchKeys":["polynomial","inline fun <T, C : Ring<T>, ScaleOperations<T>, R> C.polynomial(block: PolynomialSpace<T, C>.() -> R): R","space.kscience.kmath.functions.polynomial"]},{"name":"interface GaussIntegratorRuleFactory : IntegrandFeature","description":"space.kscience.kmath.integration.GaussIntegratorRuleFactory","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/index.html","searchKeys":["GaussIntegratorRuleFactory","interface GaussIntegratorRuleFactory : IntegrandFeature","space.kscience.kmath.integration.GaussIntegratorRuleFactory"]},{"name":"interface Integrand : Featured<IntegrandFeature> ","description":"space.kscience.kmath.integration.Integrand","location":"kmath-functions/space.kscience.kmath.integration/-integrand/index.html","searchKeys":["Integrand","interface Integrand : Featured<IntegrandFeature> ","space.kscience.kmath.integration.Integrand"]},{"name":"interface IntegrandFeature : Feature<IntegrandFeature> ","description":"space.kscience.kmath.integration.IntegrandFeature","location":"kmath-functions/space.kscience.kmath.integration/-integrand-feature/index.html","searchKeys":["IntegrandFeature","interface IntegrandFeature : Feature<IntegrandFeature> ","space.kscience.kmath.integration.IntegrandFeature"]},{"name":"interface Integrator<I : Integrand>","description":"space.kscience.kmath.integration.Integrator","location":"kmath-functions/space.kscience.kmath.integration/-integrator/index.html","searchKeys":["Integrator","interface Integrator<I : Integrand>","space.kscience.kmath.integration.Integrator"]},{"name":"interface PiecewisePolynomial<T : Comparable<T>> : Piecewise<T, Polynomial<T>> ","description":"space.kscience.kmath.functions.PiecewisePolynomial","location":"kmath-functions/space.kscience.kmath.functions/-piecewise-polynomial/index.html","searchKeys":["PiecewisePolynomial","interface PiecewisePolynomial<T : Comparable<T>> : Piecewise<T, Polynomial<T>> ","space.kscience.kmath.functions.PiecewisePolynomial"]},{"name":"interface PolynomialInterpolator<T : Comparable<T>> : Interpolator<T, T, T> ","description":"space.kscience.kmath.interpolation.PolynomialInterpolator","location":"kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/index.html","searchKeys":["PolynomialInterpolator","interface PolynomialInterpolator<T : Comparable<T>> : Interpolator<T, T, T> ","space.kscience.kmath.interpolation.PolynomialInterpolator"]},{"name":"object Companion","description":"space.kscience.kmath.integration.GaussIntegrator.Companion","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.integration.GaussIntegrator.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.integration.GaussIntegratorRuleFactory.Companion","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator-rule-factory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.integration.GaussIntegratorRuleFactory.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.interpolation.SplineInterpolator.Companion","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.interpolation.SplineInterpolator.Companion"]},{"name":"object DoubleSimpsonIntegrator : Integrator<UnivariateIntegrand<Double>> ","description":"space.kscience.kmath.integration.DoubleSimpsonIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-double-simpson-integrator/index.html","searchKeys":["DoubleSimpsonIntegrator","object DoubleSimpsonIntegrator : Integrator<UnivariateIntegrand<Double>> ","space.kscience.kmath.integration.DoubleSimpsonIntegrator"]},{"name":"object DoubleSplineIntegrator : Integrator<UnivariateIntegrand<Double>> ","description":"space.kscience.kmath.integration.DoubleSplineIntegrator","location":"kmath-functions/space.kscience.kmath.integration/-double-spline-integrator/index.html","searchKeys":["DoubleSplineIntegrator","object DoubleSplineIntegrator : Integrator<UnivariateIntegrand<Double>> ","space.kscience.kmath.integration.DoubleSplineIntegrator"]},{"name":"object GaussLegendreRuleFactory : GaussIntegratorRuleFactory","description":"space.kscience.kmath.integration.GaussLegendreRuleFactory","location":"kmath-functions/space.kscience.kmath.integration/-gauss-legendre-rule-factory/index.html","searchKeys":["GaussLegendreRuleFactory","object GaussLegendreRuleFactory : GaussIntegratorRuleFactory","space.kscience.kmath.integration.GaussLegendreRuleFactory"]},{"name":"open fun getDefaultValue(): T","description":"space.kscience.kmath.interpolation.PolynomialInterpolator.getDefaultValue","location":"kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/get-default-value.html","searchKeys":["getDefaultValue","open fun getDefaultValue(): T","space.kscience.kmath.interpolation.PolynomialInterpolator.getDefaultValue"]},{"name":"open operator override fun Polynomial<T>.unaryMinus(): Polynomial<T>","description":"space.kscience.kmath.functions.PolynomialSpace.unaryMinus","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Polynomial<T>.unaryMinus(): Polynomial<T>","space.kscience.kmath.functions.PolynomialSpace.unaryMinus"]},{"name":"open override fun <T : IntegrandFeature> getFeature(type: KClass<out T>): T?","description":"space.kscience.kmath.integration.Integrand.getFeature","location":"kmath-functions/space.kscience.kmath.integration/-integrand/get-feature.html","searchKeys":["getFeature","open override fun <T : IntegrandFeature> getFeature(type: KClass<out T>): T?","space.kscience.kmath.integration.Integrand.getFeature"]},{"name":"open override fun add(a: Polynomial<T>, b: Polynomial<T>): Polynomial<T>","description":"space.kscience.kmath.functions.PolynomialSpace.add","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/add.html","searchKeys":["add","open override fun add(a: Polynomial<T>, b: Polynomial<T>): Polynomial<T>","space.kscience.kmath.functions.PolynomialSpace.add"]},{"name":"open override fun build(numPoints: Int): Pair<Buffer<Double>, Buffer<Double>>","description":"space.kscience.kmath.integration.GaussLegendreRuleFactory.build","location":"kmath-functions/space.kscience.kmath.integration/-gauss-legendre-rule-factory/build.html","searchKeys":["build","open override fun build(numPoints: Int): Pair<Buffer<Double>, Buffer<Double>>","space.kscience.kmath.integration.GaussLegendreRuleFactory.build"]},{"name":"open override fun interpolate(points: XYColumnarData<T, T, T>): (T) -> T","description":"space.kscience.kmath.interpolation.PolynomialInterpolator.interpolate","location":"kmath-functions/space.kscience.kmath.interpolation/-polynomial-interpolator/interpolate.html","searchKeys":["interpolate","open override fun interpolate(points: XYColumnarData<T, T, T>): (T) -> T","space.kscience.kmath.interpolation.PolynomialInterpolator.interpolate"]},{"name":"open override fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.LinearInterpolator.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","open override fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.LinearInterpolator.interpolatePolynomials"]},{"name":"open override fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","description":"space.kscience.kmath.interpolation.SplineInterpolator.interpolatePolynomials","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/interpolate-polynomials.html","searchKeys":["interpolatePolynomials","open override fun interpolatePolynomials(points: XYColumnarData<T, T, T>): PiecewisePolynomial<T>","space.kscience.kmath.interpolation.SplineInterpolator.interpolatePolynomials"]},{"name":"open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","description":"space.kscience.kmath.integration.DoubleSimpsonIntegrator.process","location":"kmath-functions/space.kscience.kmath.integration/-double-simpson-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","space.kscience.kmath.integration.DoubleSimpsonIntegrator.process"]},{"name":"open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","description":"space.kscience.kmath.integration.DoubleSplineIntegrator.process","location":"kmath-functions/space.kscience.kmath.integration/-double-spline-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<Double>): UnivariateIntegrand<Double>","space.kscience.kmath.integration.DoubleSplineIntegrator.process"]},{"name":"open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.GaussIntegrator.process","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","space.kscience.kmath.integration.GaussIntegrator.process"]},{"name":"open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.SimpsonIntegrator.process","location":"kmath-functions/space.kscience.kmath.integration/-simpson-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","space.kscience.kmath.integration.SimpsonIntegrator.process"]},{"name":"open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.SplineIntegrator.process","location":"kmath-functions/space.kscience.kmath.integration/-spline-integrator/process.html","searchKeys":["process","open override fun process(integrand: UnivariateIntegrand<T>): UnivariateIntegrand<T>","space.kscience.kmath.integration.SplineIntegrator.process"]},{"name":"open override fun scale(a: Polynomial<T>, value: Double): Polynomial<T>","description":"space.kscience.kmath.functions.PolynomialSpace.scale","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/scale.html","searchKeys":["scale","open override fun scale(a: Polynomial<T>, value: Double): Polynomial<T>","space.kscience.kmath.functions.PolynomialSpace.scale"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.functions.Polynomial.toString","location":"kmath-functions/space.kscience.kmath.functions/-polynomial/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.functions.Polynomial.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.GaussLegendreRuleFactory.toString","location":"kmath-functions/space.kscience.kmath.integration/-gauss-legendre-rule-factory/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.GaussLegendreRuleFactory.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandCallsPerformed.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandCallsPerformed.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandIterationsRange.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-iterations-range/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandIterationsRange.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandMaxCalls.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandMaxCalls.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandRelativeAccuracy.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandRelativeAccuracy.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrandValue.toString","location":"kmath-functions/space.kscience.kmath.integration/-integrand-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrandValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.IntegrationRange.toString","location":"kmath-functions/space.kscience.kmath.integration/-integration-range/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.IntegrationRange.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.UnivariateIntegrandRanges.toString","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.UnivariateIntegrandRanges.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.integration.UnivariateIntegrationNodes.toString","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integration-nodes/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.integration.UnivariateIntegrationNodes.toString"]},{"name":"open override val algebra: Field<T>","description":"space.kscience.kmath.interpolation.LinearInterpolator.algebra","location":"kmath-functions/space.kscience.kmath.interpolation/-linear-interpolator/algebra.html","searchKeys":["algebra","open override val algebra: Field<T>","space.kscience.kmath.interpolation.LinearInterpolator.algebra"]},{"name":"open override val algebra: Field<T>","description":"space.kscience.kmath.interpolation.SplineInterpolator.algebra","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/algebra.html","searchKeys":["algebra","open override val algebra: Field<T>","space.kscience.kmath.interpolation.SplineInterpolator.algebra"]},{"name":"open override val features: FeatureSet<IntegrandFeature>","description":"space.kscience.kmath.integration.MultivariateIntegrand.features","location":"kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/features.html","searchKeys":["features","open override val features: FeatureSet<IntegrandFeature>","space.kscience.kmath.integration.MultivariateIntegrand.features"]},{"name":"open override val features: FeatureSet<IntegrandFeature>","description":"space.kscience.kmath.integration.UnivariateIntegrand.features","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand/features.html","searchKeys":["features","open override val features: FeatureSet<IntegrandFeature>","space.kscience.kmath.integration.UnivariateIntegrand.features"]},{"name":"open override val zero: Polynomial<T>","description":"space.kscience.kmath.functions.PolynomialSpace.zero","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/zero.html","searchKeys":["zero","open override val zero: Polynomial<T>","space.kscience.kmath.functions.PolynomialSpace.zero"]},{"name":"operator fun <F : IntegrandFeature> plus(feature: F): MultivariateIntegrand<T>","description":"space.kscience.kmath.integration.MultivariateIntegrand.plus","location":"kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/plus.html","searchKeys":["plus","operator fun <F : IntegrandFeature> plus(feature: F): MultivariateIntegrand<T>","space.kscience.kmath.integration.MultivariateIntegrand.plus"]},{"name":"operator fun <F : IntegrandFeature> plus(feature: F): UnivariateIntegrand<T>","description":"space.kscience.kmath.integration.UnivariateIntegrand.plus","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand/plus.html","searchKeys":["plus","operator fun <F : IntegrandFeature> plus(feature: F): UnivariateIntegrand<T>","space.kscience.kmath.integration.UnivariateIntegrand.plus"]},{"name":"operator fun Polynomial<T>.invoke(arg: T): T","description":"space.kscience.kmath.functions.PolynomialSpace.invoke","location":"kmath-functions/space.kscience.kmath.functions/-polynomial-space/invoke.html","searchKeys":["invoke","operator fun Polynomial<T>.invoke(arg: T): T","space.kscience.kmath.functions.PolynomialSpace.invoke"]},{"name":"val <T : Any> Field<T>.gaussIntegrator: GaussIntegrator<T>","description":"space.kscience.kmath.integration.gaussIntegrator","location":"kmath-functions/space.kscience.kmath.integration/gauss-integrator.html","searchKeys":["gaussIntegrator","val <T : Any> Field<T>.gaussIntegrator: GaussIntegrator<T>","space.kscience.kmath.integration.gaussIntegrator"]},{"name":"val <T : Any> Field<T>.simpsonIntegrator: SimpsonIntegrator<T>","description":"space.kscience.kmath.integration.simpsonIntegrator","location":"kmath-functions/space.kscience.kmath.integration/simpson-integrator.html","searchKeys":["simpsonIntegrator","val <T : Any> Field<T>.simpsonIntegrator: SimpsonIntegrator<T>","space.kscience.kmath.integration.simpsonIntegrator"]},{"name":"val <T : Any> MultivariateIntegrand<T>.value: T?","description":"space.kscience.kmath.integration.value","location":"kmath-functions/space.kscience.kmath.integration/value.html","searchKeys":["value","val <T : Any> MultivariateIntegrand<T>.value: T?","space.kscience.kmath.integration.value"]},{"name":"val <T : Any> UnivariateIntegrand<T>.value: T","description":"space.kscience.kmath.integration.value","location":"kmath-functions/space.kscience.kmath.integration/value.html","searchKeys":["value","val <T : Any> UnivariateIntegrand<T>.value: T","space.kscience.kmath.integration.value"]},{"name":"val <T : Any> UnivariateIntegrand<T>.valueOrNull: T?","description":"space.kscience.kmath.integration.valueOrNull","location":"kmath-functions/space.kscience.kmath.integration/value-or-null.html","searchKeys":["valueOrNull","val <T : Any> UnivariateIntegrand<T>.valueOrNull: T?","space.kscience.kmath.integration.valueOrNull"]},{"name":"val DoubleField.simpsonIntegrator: DoubleSimpsonIntegrator","description":"space.kscience.kmath.integration.simpsonIntegrator","location":"kmath-functions/space.kscience.kmath.integration/simpson-integrator.html","searchKeys":["simpsonIntegrator","val DoubleField.simpsonIntegrator: DoubleSimpsonIntegrator","space.kscience.kmath.integration.simpsonIntegrator"]},{"name":"val DoubleField.splineIntegrator: UnivariateIntegrator<Double>","description":"space.kscience.kmath.integration.splineIntegrator","location":"kmath-functions/space.kscience.kmath.integration/spline-integrator.html","searchKeys":["splineIntegrator","val DoubleField.splineIntegrator: UnivariateIntegrator<Double>","space.kscience.kmath.integration.splineIntegrator"]},{"name":"val Integrand.calls: Int","description":"space.kscience.kmath.integration.calls","location":"kmath-functions/space.kscience.kmath.integration/calls.html","searchKeys":["calls","val Integrand.calls: Int","space.kscience.kmath.integration.calls"]},{"name":"val accuracy: Double","description":"space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.accuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-absolute-accuracy/accuracy.html","searchKeys":["accuracy","val accuracy: Double","space.kscience.kmath.integration.IntegrandAbsoluteAccuracy.accuracy"]},{"name":"val accuracy: Double","description":"space.kscience.kmath.integration.IntegrandRelativeAccuracy.accuracy","location":"kmath-functions/space.kscience.kmath.integration/-integrand-relative-accuracy/accuracy.html","searchKeys":["accuracy","val accuracy: Double","space.kscience.kmath.integration.IntegrandRelativeAccuracy.accuracy"]},{"name":"val algebra: Field<T>","description":"space.kscience.kmath.integration.GaussIntegrator.algebra","location":"kmath-functions/space.kscience.kmath.integration/-gauss-integrator/algebra.html","searchKeys":["algebra","val algebra: Field<T>","space.kscience.kmath.integration.GaussIntegrator.algebra"]},{"name":"val algebra: Field<T>","description":"space.kscience.kmath.integration.SimpsonIntegrator.algebra","location":"kmath-functions/space.kscience.kmath.integration/-simpson-integrator/algebra.html","searchKeys":["algebra","val algebra: Field<T>","space.kscience.kmath.integration.SimpsonIntegrator.algebra"]},{"name":"val algebra: Field<T>","description":"space.kscience.kmath.integration.SplineIntegrator.algebra","location":"kmath-functions/space.kscience.kmath.integration/-spline-integrator/algebra.html","searchKeys":["algebra","val algebra: Field<T>","space.kscience.kmath.integration.SplineIntegrator.algebra"]},{"name":"val bufferFactory: MutableBufferFactory<T>","description":"space.kscience.kmath.integration.SplineIntegrator.bufferFactory","location":"kmath-functions/space.kscience.kmath.integration/-spline-integrator/buffer-factory.html","searchKeys":["bufferFactory","val bufferFactory: MutableBufferFactory<T>","space.kscience.kmath.integration.SplineIntegrator.bufferFactory"]},{"name":"val bufferFactory: MutableBufferFactory<T>","description":"space.kscience.kmath.interpolation.SplineInterpolator.bufferFactory","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/buffer-factory.html","searchKeys":["bufferFactory","val bufferFactory: MutableBufferFactory<T>","space.kscience.kmath.interpolation.SplineInterpolator.bufferFactory"]},{"name":"val calls: Int","description":"space.kscience.kmath.integration.IntegrandCallsPerformed.calls","location":"kmath-functions/space.kscience.kmath.integration/-integrand-calls-performed/calls.html","searchKeys":["calls","val calls: Int","space.kscience.kmath.integration.IntegrandCallsPerformed.calls"]},{"name":"val coefficients: List<T>","description":"space.kscience.kmath.functions.Polynomial.coefficients","location":"kmath-functions/space.kscience.kmath.functions/-polynomial/coefficients.html","searchKeys":["coefficients","val coefficients: List<T>","space.kscience.kmath.functions.Polynomial.coefficients"]},{"name":"val double: SplineInterpolator<Double>","description":"space.kscience.kmath.interpolation.SplineInterpolator.Companion.double","location":"kmath-functions/space.kscience.kmath.interpolation/-spline-interpolator/-companion/double.html","searchKeys":["double","val double: SplineInterpolator<Double>","space.kscience.kmath.interpolation.SplineInterpolator.Companion.double"]},{"name":"val function: (Double) -> T","description":"space.kscience.kmath.integration.UnivariateIntegrand.function","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand/function.html","searchKeys":["function","val function: (Double) -> T","space.kscience.kmath.integration.UnivariateIntegrand.function"]},{"name":"val function: (Point<T>) -> T","description":"space.kscience.kmath.integration.MultivariateIntegrand.function","location":"kmath-functions/space.kscience.kmath.integration/-multivariate-integrand/function.html","searchKeys":["function","val function: (Point<T>) -> T","space.kscience.kmath.integration.MultivariateIntegrand.function"]},{"name":"val maxCalls: Int","description":"space.kscience.kmath.integration.IntegrandMaxCalls.maxCalls","location":"kmath-functions/space.kscience.kmath.integration/-integrand-max-calls/max-calls.html","searchKeys":["maxCalls","val maxCalls: Int","space.kscience.kmath.integration.IntegrandMaxCalls.maxCalls"]},{"name":"val nodes: Buffer<Double>","description":"space.kscience.kmath.integration.UnivariateIntegrationNodes.nodes","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integration-nodes/nodes.html","searchKeys":["nodes","val nodes: Buffer<Double>","space.kscience.kmath.integration.UnivariateIntegrationNodes.nodes"]},{"name":"val range: ClosedRange<Double>","description":"space.kscience.kmath.integration.IntegrationRange.range","location":"kmath-functions/space.kscience.kmath.integration/-integration-range/range.html","searchKeys":["range","val range: ClosedRange<Double>","space.kscience.kmath.integration.IntegrationRange.range"]},{"name":"val range: IntRange","description":"space.kscience.kmath.integration.IntegrandIterationsRange.range","location":"kmath-functions/space.kscience.kmath.integration/-integrand-iterations-range/range.html","searchKeys":["range","val range: IntRange","space.kscience.kmath.integration.IntegrandIterationsRange.range"]},{"name":"val ranges: List<Pair<ClosedRange<Double>, Int>>","description":"space.kscience.kmath.integration.UnivariateIntegrandRanges.ranges","location":"kmath-functions/space.kscience.kmath.integration/-univariate-integrand-ranges/ranges.html","searchKeys":["ranges","val ranges: List<Pair<ClosedRange<Double>, Int>>","space.kscience.kmath.integration.UnivariateIntegrandRanges.ranges"]},{"name":"val value: T","description":"space.kscience.kmath.integration.IntegrandValue.value","location":"kmath-functions/space.kscience.kmath.integration/-integrand-value/value.html","searchKeys":["value","val value: T","space.kscience.kmath.integration.IntegrandValue.value"]},{"name":"abstract val dim: Int","description":"space.kscience.kmath.dimensions.Dimension.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/-dimension/dim.html","searchKeys":["dim","abstract val dim: Int","space.kscience.kmath.dimensions.Dimension.dim"]},{"name":"fun <D : Dimension> Dimension.Companion.resolve(type: KClass<D>): D","description":"space.kscience.kmath.dimensions.resolve","location":"kmath-dimensions/space.kscience.kmath.dimensions/resolve.html","searchKeys":["resolve","fun <D : Dimension> Dimension.Companion.resolve(type: KClass<D>): D","space.kscience.kmath.dimensions.resolve"]},{"name":"fun <D : Dimension> KClass<D>.dim(): Int","description":"space.kscience.kmath.dimensions.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/dim.html","searchKeys":["dim","fun <D : Dimension> KClass<D>.dim(): Int","space.kscience.kmath.dimensions.dim"]},{"name":"fun <T : Any, out A : Ring<T>> DMatrixContext(context: LinearSpace<T, A>)","description":"space.kscience.kmath.dimensions.DMatrixContext.DMatrixContext","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/-d-matrix-context.html","searchKeys":["DMatrixContext","fun <T : Any, out A : Ring<T>> DMatrixContext(context: LinearSpace<T, A>)","space.kscience.kmath.dimensions.DMatrixContext.DMatrixContext"]},{"name":"fun <T, D : Dimension> coerceUnsafe(point: Point<T>): DPoint<T, D>","description":"space.kscience.kmath.dimensions.DPoint.Companion.coerceUnsafe","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point/-companion/coerce-unsafe.html","searchKeys":["coerceUnsafe","fun <T, D : Dimension> coerceUnsafe(point: Point<T>): DPoint<T, D>","space.kscience.kmath.dimensions.DPoint.Companion.coerceUnsafe"]},{"name":"fun <T, R : Dimension, C : Dimension> coerceUnsafe(structure: Structure2D<T>): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrix.Companion.coerceUnsafe","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix/-companion/coerce-unsafe.html","searchKeys":["coerceUnsafe","fun <T, R : Dimension, C : Dimension> coerceUnsafe(structure: Structure2D<T>): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrix.Companion.coerceUnsafe"]},{"name":"fun <out T> DMatrixWrapper(structure: Structure2D<T>)","description":"space.kscience.kmath.dimensions.DMatrixWrapper.DMatrixWrapper","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/-d-matrix-wrapper.html","searchKeys":["DMatrixWrapper","fun <out T> DMatrixWrapper(structure: Structure2D<T>)","space.kscience.kmath.dimensions.DMatrixWrapper.DMatrixWrapper"]},{"name":"fun DPointWrapper(point: Point<T>)","description":"space.kscience.kmath.dimensions.DPointWrapper.DPointWrapper","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/-d-point-wrapper.html","searchKeys":["DPointWrapper","fun DPointWrapper(point: Point<T>)","space.kscience.kmath.dimensions.DPointWrapper.DPointWrapper"]},{"name":"fun Dimension.Companion.of(dim: Int): Dimension","description":"space.kscience.kmath.dimensions.of","location":"kmath-dimensions/space.kscience.kmath.dimensions/of.html","searchKeys":["of","fun Dimension.Companion.of(dim: Int): Dimension","space.kscience.kmath.dimensions.of"]},{"name":"infix inline fun <R : Dimension, C : Dimension> DMatrix<T, R, C>.dot(vector: DPoint<T, C>): DPoint<T, R>","description":"space.kscience.kmath.dimensions.DMatrixContext.dot","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/dot.html","searchKeys":["dot","infix inline fun <R : Dimension, C : Dimension> DMatrix<T, R, C>.dot(vector: DPoint<T, C>): DPoint<T, R>","space.kscience.kmath.dimensions.DMatrixContext.dot"]},{"name":"infix inline fun <R1 : Dimension, C1 : Dimension, C2 : Dimension> DMatrix<T, R1, C1>.dot(other: DMatrix<T, C1, C2>): DMatrix<T, R1, C2>","description":"space.kscience.kmath.dimensions.DMatrixContext.dot","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/dot.html","searchKeys":["dot","infix inline fun <R1 : Dimension, C1 : Dimension, C2 : Dimension> DMatrix<T, R1, C1>.dot(other: DMatrix<T, C1, C2>): DMatrix<T, R1, C2>","space.kscience.kmath.dimensions.DMatrixContext.dot"]},{"name":"inline fun <D : Dimension> DMatrixContext<Double, DoubleField>.one(): DMatrix<Double, D, D>","description":"space.kscience.kmath.dimensions.one","location":"kmath-dimensions/space.kscience.kmath.dimensions/one.html","searchKeys":["one","inline fun <D : Dimension> DMatrixContext<Double, DoubleField>.one(): DMatrix<Double, D, D>","space.kscience.kmath.dimensions.one"]},{"name":"inline fun <D : Dimension> Dimension.Companion.dim(): Int","description":"space.kscience.kmath.dimensions.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/dim.html","searchKeys":["dim","inline fun <D : Dimension> Dimension.Companion.dim(): Int","space.kscience.kmath.dimensions.dim"]},{"name":"inline fun <D : Dimension> point(noinline initializer: A.(Int) -> T): DPoint<T, D>","description":"space.kscience.kmath.dimensions.DMatrixContext.point","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/point.html","searchKeys":["point","inline fun <D : Dimension> point(noinline initializer: A.(Int) -> T): DPoint<T, D>","space.kscience.kmath.dimensions.DMatrixContext.point"]},{"name":"inline fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.transpose(): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrixContext.transpose","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/transpose.html","searchKeys":["transpose","inline fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.transpose(): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrixContext.transpose"]},{"name":"inline fun <R : Dimension, C : Dimension> DMatrixContext<Double, DoubleField>.zero(): DMatrix<Double, R, C>","description":"space.kscience.kmath.dimensions.zero","location":"kmath-dimensions/space.kscience.kmath.dimensions/zero.html","searchKeys":["zero","inline fun <R : Dimension, C : Dimension> DMatrixContext<Double, DoubleField>.zero(): DMatrix<Double, R, C>","space.kscience.kmath.dimensions.zero"]},{"name":"inline fun <R : Dimension, C : Dimension> Matrix<T>.coerce(): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrixContext.coerce","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/coerce.html","searchKeys":["coerce","inline fun <R : Dimension, C : Dimension> Matrix<T>.coerce(): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrixContext.coerce"]},{"name":"inline fun <R : Dimension, C : Dimension> produce(noinline initializer: A.(i: Int, j: Int) -> T): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrixContext.produce","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/produce.html","searchKeys":["produce","inline fun <R : Dimension, C : Dimension> produce(noinline initializer: A.(i: Int, j: Int) -> T): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrixContext.produce"]},{"name":"inline fun <T, D : Dimension> coerce(point: Point<T>): DPoint<T, D>","description":"space.kscience.kmath.dimensions.DPoint.Companion.coerce","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point/-companion/coerce.html","searchKeys":["coerce","inline fun <T, D : Dimension> coerce(point: Point<T>): DPoint<T, D>","space.kscience.kmath.dimensions.DPoint.Companion.coerce"]},{"name":"inline fun <T, R : Dimension, C : Dimension> coerce(structure: Structure2D<T>): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrix.Companion.coerce","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix/-companion/coerce.html","searchKeys":["coerce","inline fun <T, R : Dimension, C : Dimension> coerce(structure: Structure2D<T>): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrix.Companion.coerce"]},{"name":"inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.minus(other: DMatrix<T, C, R>): DMatrix<T, C, R>","description":"space.kscience.kmath.dimensions.DMatrixContext.minus","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/minus.html","searchKeys":["minus","inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.minus(other: DMatrix<T, C, R>): DMatrix<T, C, R>","space.kscience.kmath.dimensions.DMatrixContext.minus"]},{"name":"inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.plus(other: DMatrix<T, C, R>): DMatrix<T, C, R>","description":"space.kscience.kmath.dimensions.DMatrixContext.plus","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/plus.html","searchKeys":["plus","inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.plus(other: DMatrix<T, C, R>): DMatrix<T, C, R>","space.kscience.kmath.dimensions.DMatrixContext.plus"]},{"name":"inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.unaryMinus(): DMatrix<T, C, R>","description":"space.kscience.kmath.dimensions.DMatrixContext.unaryMinus","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/unary-minus.html","searchKeys":["unaryMinus","inline operator fun <R : Dimension, C : Dimension> DMatrix<T, C, R>.unaryMinus(): DMatrix<T, C, R>","space.kscience.kmath.dimensions.DMatrixContext.unaryMinus"]},{"name":"inline operator fun <R : Dimension, C : Dimension> DMatrix<T, R, C>.times(value: T): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrixContext.times","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/times.html","searchKeys":["times","inline operator fun <R : Dimension, C : Dimension> DMatrix<T, R, C>.times(value: T): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrixContext.times"]},{"name":"inline operator fun <R : Dimension, C : Dimension> T.times(m: DMatrix<T, R, C>): DMatrix<T, R, C>","description":"space.kscience.kmath.dimensions.DMatrixContext.times","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/times.html","searchKeys":["times","inline operator fun <R : Dimension, C : Dimension> T.times(m: DMatrix<T, R, C>): DMatrix<T, R, C>","space.kscience.kmath.dimensions.DMatrixContext.times"]},{"name":"interface DMatrix<out T, R : Dimension, C : Dimension> : Structure2D<T> ","description":"space.kscience.kmath.dimensions.DMatrix","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix/index.html","searchKeys":["DMatrix","interface DMatrix<out T, R : Dimension, C : Dimension> : Structure2D<T> ","space.kscience.kmath.dimensions.DMatrix"]},{"name":"interface DPoint<out T, D : Dimension> : Buffer<T> ","description":"space.kscience.kmath.dimensions.DPoint","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point/index.html","searchKeys":["DPoint","interface DPoint<out T, D : Dimension> : Buffer<T> ","space.kscience.kmath.dimensions.DPoint"]},{"name":"interface Dimension","description":"space.kscience.kmath.dimensions.Dimension","location":"kmath-dimensions/space.kscience.kmath.dimensions/-dimension/index.html","searchKeys":["Dimension","interface Dimension","space.kscience.kmath.dimensions.Dimension"]},{"name":"object Companion","description":"space.kscience.kmath.dimensions.DMatrix.Companion","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.dimensions.DMatrix.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.dimensions.DMatrixContext.Companion","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.dimensions.DMatrixContext.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.dimensions.DPoint.Companion","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.dimensions.DPoint.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.dimensions.Dimension.Companion","location":"kmath-dimensions/space.kscience.kmath.dimensions/-dimension/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.dimensions.Dimension.Companion"]},{"name":"object D1 : Dimension","description":"space.kscience.kmath.dimensions.D1","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d1/index.html","searchKeys":["D1","object D1 : Dimension","space.kscience.kmath.dimensions.D1"]},{"name":"object D2 : Dimension","description":"space.kscience.kmath.dimensions.D2","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d2/index.html","searchKeys":["D2","object D2 : Dimension","space.kscience.kmath.dimensions.D2"]},{"name":"object D3 : Dimension","description":"space.kscience.kmath.dimensions.D3","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d3/index.html","searchKeys":["D3","object D3 : Dimension","space.kscience.kmath.dimensions.D3"]},{"name":"open operator override fun get(i: Int, j: Int): T","description":"space.kscience.kmath.dimensions.DMatrixWrapper.get","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/get.html","searchKeys":["get","open operator override fun get(i: Int, j: Int): T","space.kscience.kmath.dimensions.DMatrixWrapper.get"]},{"name":"open operator override fun get(index: Int): T","description":"space.kscience.kmath.dimensions.DPointWrapper.get","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/get.html","searchKeys":["get","open operator override fun get(index: Int): T","space.kscience.kmath.dimensions.DPointWrapper.get"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"space.kscience.kmath.dimensions.DPointWrapper.iterator","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","space.kscience.kmath.dimensions.DPointWrapper.iterator"]},{"name":"open override val colNum: Int","description":"space.kscience.kmath.dimensions.DMatrixWrapper.colNum","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/col-num.html","searchKeys":["colNum","open override val colNum: Int","space.kscience.kmath.dimensions.DMatrixWrapper.colNum"]},{"name":"open override val dim: Int","description":"space.kscience.kmath.dimensions.D1.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d1/dim.html","searchKeys":["dim","open override val dim: Int","space.kscience.kmath.dimensions.D1.dim"]},{"name":"open override val dim: Int","description":"space.kscience.kmath.dimensions.D2.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d2/dim.html","searchKeys":["dim","open override val dim: Int","space.kscience.kmath.dimensions.D2.dim"]},{"name":"open override val dim: Int","description":"space.kscience.kmath.dimensions.D3.dim","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d3/dim.html","searchKeys":["dim","open override val dim: Int","space.kscience.kmath.dimensions.D3.dim"]},{"name":"open override val rowNum: Int","description":"space.kscience.kmath.dimensions.DMatrixWrapper.rowNum","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/row-num.html","searchKeys":["rowNum","open override val rowNum: Int","space.kscience.kmath.dimensions.DMatrixWrapper.rowNum"]},{"name":"open override val shape: IntArray","description":"space.kscience.kmath.dimensions.DMatrixWrapper.shape","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/shape.html","searchKeys":["shape","open override val shape: IntArray","space.kscience.kmath.dimensions.DMatrixWrapper.shape"]},{"name":"open override val size: Int","description":"space.kscience.kmath.dimensions.DPointWrapper.size","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.dimensions.DPointWrapper.size"]},{"name":"val context: LinearSpace<T, A>","description":"space.kscience.kmath.dimensions.DMatrixContext.context","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/context.html","searchKeys":["context","val context: LinearSpace<T, A>","space.kscience.kmath.dimensions.DMatrixContext.context"]},{"name":"val point: Point<T>","description":"space.kscience.kmath.dimensions.DPointWrapper.point","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/point.html","searchKeys":["point","val point: Point<T>","space.kscience.kmath.dimensions.DPointWrapper.point"]},{"name":"val real: DMatrixContext<Double, DoubleField>","description":"space.kscience.kmath.dimensions.DMatrixContext.Companion.real","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/-companion/real.html","searchKeys":["real","val real: DMatrixContext<Double, DoubleField>","space.kscience.kmath.dimensions.DMatrixContext.Companion.real"]},{"name":"value class DMatrixContext<T : Any, out A : Ring<T>>(context: LinearSpace<T, A>)","description":"space.kscience.kmath.dimensions.DMatrixContext","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-context/index.html","searchKeys":["DMatrixContext","value class DMatrixContext<T : Any, out A : Ring<T>>(context: LinearSpace<T, A>)","space.kscience.kmath.dimensions.DMatrixContext"]},{"name":"value class DMatrixWrapper<out T, R : Dimension, C : Dimension>(structure: Structure2D<T>) : DMatrix<T, R, C> ","description":"space.kscience.kmath.dimensions.DMatrixWrapper","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-matrix-wrapper/index.html","searchKeys":["DMatrixWrapper","value class DMatrixWrapper<out T, R : Dimension, C : Dimension>(structure: Structure2D<T>) : DMatrix<T, R, C> ","space.kscience.kmath.dimensions.DMatrixWrapper"]},{"name":"value class DPointWrapper<out T, D : Dimension>(point: Point<T>) : DPoint<T, D> ","description":"space.kscience.kmath.dimensions.DPointWrapper","location":"kmath-dimensions/space.kscience.kmath.dimensions/-d-point-wrapper/index.html","searchKeys":["DPointWrapper","value class DPointWrapper<out T, D : Dimension>(point: Point<T>) : DPoint<T, D> ","space.kscience.kmath.dimensions.DPointWrapper"]},{"name":"abstract fun add(delta: T)","description":"space.kscience.kmath.histogram.Counter.add","location":"kmath-histograms/space.kscience.kmath.histogram/-counter/add.html","searchKeys":["add","abstract fun add(delta: T)","space.kscience.kmath.histogram.Counter.add"]},{"name":"abstract fun getDomain(index: IntArray): Domain<T>?","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.getDomain","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/get-domain.html","searchKeys":["getDomain","abstract fun getDomain(index: IntArray): Domain<T>?","space.kscience.kmath.histogram.IndexedHistogramSpace.getDomain"]},{"name":"abstract fun getIndex(point: Point<T>): IntArray?","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.getIndex","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/get-index.html","searchKeys":["getIndex","abstract fun getIndex(point: Point<T>): IntArray?","space.kscience.kmath.histogram.IndexedHistogramSpace.getIndex"]},{"name":"abstract fun produce(builder: HistogramBuilder<T>.() -> Unit): IndexedHistogram<T, V>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.produce","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/produce.html","searchKeys":["produce","abstract fun produce(builder: HistogramBuilder<T>.() -> Unit): IndexedHistogram<T, V>","space.kscience.kmath.histogram.IndexedHistogramSpace.produce"]},{"name":"abstract fun produceBin(index: IntArray, value: V): Bin<T>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.produceBin","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/produce-bin.html","searchKeys":["produceBin","abstract fun produceBin(index: IntArray, value: V): Bin<T>","space.kscience.kmath.histogram.IndexedHistogramSpace.produceBin"]},{"name":"abstract fun putValue(at: Double, value: Double = 1.0)","description":"space.kscience.kmath.histogram.UnivariateHistogramBuilder.putValue","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram-builder/put-value.html","searchKeys":["putValue","abstract fun putValue(at: Double, value: Double = 1.0)","space.kscience.kmath.histogram.UnivariateHistogramBuilder.putValue"]},{"name":"abstract fun putValue(point: Point<out T>, value: Number)","description":"space.kscience.kmath.histogram.HistogramBuilder.putValue","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram-builder/put-value.html","searchKeys":["putValue","abstract fun putValue(point: Point<out T>, value: Number)","space.kscience.kmath.histogram.HistogramBuilder.putValue"]},{"name":"abstract operator fun get(point: Point<out T>): B?","description":"space.kscience.kmath.histogram.Histogram.get","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram/get.html","searchKeys":["get","abstract operator fun get(point: Point<out T>): B?","space.kscience.kmath.histogram.Histogram.get"]},{"name":"abstract operator fun get(value: Double): UnivariateBin?","description":"space.kscience.kmath.histogram.UnivariateHistogram.get","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/get.html","searchKeys":["get","abstract operator fun get(value: Double): UnivariateBin?","space.kscience.kmath.histogram.UnivariateHistogram.get"]},{"name":"abstract override fun putValue(point: Buffer<Double>, value: Number)","description":"space.kscience.kmath.histogram.UnivariateHistogramBuilder.putValue","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram-builder/put-value.html","searchKeys":["putValue","abstract override fun putValue(point: Buffer<Double>, value: Number)","space.kscience.kmath.histogram.UnivariateHistogramBuilder.putValue"]},{"name":"abstract val bins: Iterable<B>","description":"space.kscience.kmath.histogram.Histogram.bins","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram/bins.html","searchKeys":["bins","abstract val bins: Iterable<B>","space.kscience.kmath.histogram.Histogram.bins"]},{"name":"abstract val dimension: Int","description":"space.kscience.kmath.histogram.Histogram.dimension","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram/dimension.html","searchKeys":["dimension","abstract val dimension: Int","space.kscience.kmath.histogram.Histogram.dimension"]},{"name":"abstract val histogramValueSpace: FieldND<V, *>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.histogramValueSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/histogram-value-space.html","searchKeys":["histogramValueSpace","abstract val histogramValueSpace: FieldND<V, *>","space.kscience.kmath.histogram.IndexedHistogramSpace.histogramValueSpace"]},{"name":"abstract val strides: Strides","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.strides","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/strides.html","searchKeys":["strides","abstract val strides: Strides","space.kscience.kmath.histogram.IndexedHistogramSpace.strides"]},{"name":"abstract val value: Number","description":"space.kscience.kmath.histogram.Bin.value","location":"kmath-histograms/space.kscience.kmath.histogram/-bin/value.html","searchKeys":["value","abstract val value: Number","space.kscience.kmath.histogram.Bin.value"]},{"name":"abstract val value: T","description":"space.kscience.kmath.histogram.Counter.value","location":"kmath-histograms/space.kscience.kmath.histogram/-counter/value.html","searchKeys":["value","abstract val value: T","space.kscience.kmath.histogram.Counter.value"]},{"name":"class DoubleHistogramSpace(lower: Buffer<Double>, upper: Buffer<Double>, binNums: IntArray) : IndexedHistogramSpace<Double, Double> ","description":"space.kscience.kmath.histogram.DoubleHistogramSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/index.html","searchKeys":["DoubleHistogramSpace","class DoubleHistogramSpace(lower: Buffer<Double>, upper: Buffer<Double>, binNums: IntArray) : IndexedHistogramSpace<Double, Double> ","space.kscience.kmath.histogram.DoubleHistogramSpace"]},{"name":"class IndexedHistogram<T : Comparable<T>, V : Any>(context: IndexedHistogramSpace<T, V>, values: StructureND<V>) : Histogram<T, Bin<T>> ","description":"space.kscience.kmath.histogram.IndexedHistogram","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/index.html","searchKeys":["IndexedHistogram","class IndexedHistogram<T : Comparable<T>, V : Any>(context: IndexedHistogramSpace<T, V>, values: StructureND<V>) : Histogram<T, Bin<T>> ","space.kscience.kmath.histogram.IndexedHistogram"]},{"name":"class IntCounter : Counter<Int> ","description":"space.kscience.kmath.histogram.IntCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-int-counter/index.html","searchKeys":["IntCounter","class IntCounter : Counter<Int> ","space.kscience.kmath.histogram.IntCounter"]},{"name":"class LongCounter : Counter<Long> ","description":"space.kscience.kmath.histogram.LongCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-long-counter/index.html","searchKeys":["LongCounter","class LongCounter : Counter<Long> ","space.kscience.kmath.histogram.LongCounter"]},{"name":"class ObjectCounter<T : Any>(group: Ring<T>) : Counter<T> ","description":"space.kscience.kmath.histogram.ObjectCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-object-counter/index.html","searchKeys":["ObjectCounter","class ObjectCounter<T : Any>(group: Ring<T>) : Counter<T> ","space.kscience.kmath.histogram.ObjectCounter"]},{"name":"class TreeHistogram(binMap: TreeMap<Double, out UnivariateBin>) : UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogram","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram/index.html","searchKeys":["TreeHistogram","class TreeHistogram(binMap: TreeMap<Double, out UnivariateBin>) : UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogram"]},{"name":"class TreeHistogramSpace(binFactory: (Double) -> UnivariateDomain) : Group<UnivariateHistogram> , ScaleOperations<UnivariateHistogram> ","description":"space.kscience.kmath.histogram.TreeHistogramSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/index.html","searchKeys":["TreeHistogramSpace","class TreeHistogramSpace(binFactory: (Double) -> UnivariateDomain) : Group<UnivariateHistogram> , ScaleOperations<UnivariateHistogram> ","space.kscience.kmath.histogram.TreeHistogramSpace"]},{"name":"class UnivariateBin(domain: UnivariateDomain, value: Double, standardDeviation: Double) : Bin<Double> , ClosedFloatingPointRange<Double> ","description":"space.kscience.kmath.histogram.UnivariateBin","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/index.html","searchKeys":["UnivariateBin","class UnivariateBin(domain: UnivariateDomain, value: Double, standardDeviation: Double) : Bin<Double> , ClosedFloatingPointRange<Double> ","space.kscience.kmath.histogram.UnivariateBin"]},{"name":"data class DomainBin<in T : Comparable<T>>(domain: Domain<T>, value: Number) : Bin<T> , Domain<T> ","description":"space.kscience.kmath.histogram.DomainBin","location":"kmath-histograms/space.kscience.kmath.histogram/-domain-bin/index.html","searchKeys":["DomainBin","data class DomainBin<in T : Comparable<T>>(domain: Domain<T>, value: Number) : Bin<T> , Domain<T> ","space.kscience.kmath.histogram.DomainBin"]},{"name":"fun <T : Any, B : Bin<T>> HistogramBuilder<T>.put(point: Point<out T>)","description":"space.kscience.kmath.histogram.put","location":"kmath-histograms/space.kscience.kmath.histogram/put.html","searchKeys":["put","fun <T : Any, B : Bin<T>> HistogramBuilder<T>.put(point: Point<out T>)","space.kscience.kmath.histogram.put"]},{"name":"fun <T : Any> HistogramBuilder<T>.fill(block: suspend SequenceScope<Point<T>>.() -> Unit)","description":"space.kscience.kmath.histogram.fill","location":"kmath-histograms/space.kscience.kmath.histogram/fill.html","searchKeys":["fill","fun <T : Any> HistogramBuilder<T>.fill(block: suspend SequenceScope<Point<T>>.() -> Unit)","space.kscience.kmath.histogram.fill"]},{"name":"fun <T : Any> HistogramBuilder<T>.fill(sequence: Iterable<Point<T>>)","description":"space.kscience.kmath.histogram.fill","location":"kmath-histograms/space.kscience.kmath.histogram/fill.html","searchKeys":["fill","fun <T : Any> HistogramBuilder<T>.fill(sequence: Iterable<Point<T>>)","space.kscience.kmath.histogram.fill"]},{"name":"fun <T : Any> HistogramBuilder<T>.put(vararg point: T)","description":"space.kscience.kmath.histogram.put","location":"kmath-histograms/space.kscience.kmath.histogram/put.html","searchKeys":["put","fun <T : Any> HistogramBuilder<T>.put(vararg point: T)","space.kscience.kmath.histogram.put"]},{"name":"fun <T : Any> ObjectCounter(group: Ring<T>)","description":"space.kscience.kmath.histogram.ObjectCounter.ObjectCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-object-counter/-object-counter.html","searchKeys":["ObjectCounter","fun <T : Any> ObjectCounter(group: Ring<T>)","space.kscience.kmath.histogram.ObjectCounter.ObjectCounter"]},{"name":"fun <T : Comparable<T>, V : Any> IndexedHistogram(context: IndexedHistogramSpace<T, V>, values: StructureND<V>)","description":"space.kscience.kmath.histogram.IndexedHistogram.IndexedHistogram","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/-indexed-histogram.html","searchKeys":["IndexedHistogram","fun <T : Comparable<T>, V : Any> IndexedHistogram(context: IndexedHistogramSpace<T, V>, values: StructureND<V>)","space.kscience.kmath.histogram.IndexedHistogram.IndexedHistogram"]},{"name":"fun <in T : Comparable<T>> DomainBin(domain: Domain<T>, value: Number)","description":"space.kscience.kmath.histogram.DomainBin.DomainBin","location":"kmath-histograms/space.kscience.kmath.histogram/-domain-bin/-domain-bin.html","searchKeys":["DomainBin","fun <in T : Comparable<T>> DomainBin(domain: Domain<T>, value: Number)","space.kscience.kmath.histogram.DomainBin.DomainBin"]},{"name":"fun DoubleHistogramSpace(lower: Buffer<Double>, upper: Buffer<Double>, binNums: IntArray = IntArray(lower.size) { 20 })","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.DoubleHistogramSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/-double-histogram-space.html","searchKeys":["DoubleHistogramSpace","fun DoubleHistogramSpace(lower: Buffer<Double>, upper: Buffer<Double>, binNums: IntArray = IntArray(lower.size) { 20 })","space.kscience.kmath.histogram.DoubleHistogramSpace.DoubleHistogramSpace"]},{"name":"fun HistogramBuilder<Double>.put(vararg point: Double)","description":"space.kscience.kmath.histogram.put","location":"kmath-histograms/space.kscience.kmath.histogram/put.html","searchKeys":["put","fun HistogramBuilder<Double>.put(vararg point: Double)","space.kscience.kmath.histogram.put"]},{"name":"fun HistogramBuilder<Double>.put(vararg point: Number)","description":"space.kscience.kmath.histogram.put","location":"kmath-histograms/space.kscience.kmath.histogram/put.html","searchKeys":["put","fun HistogramBuilder<Double>.put(vararg point: Number)","space.kscience.kmath.histogram.put"]},{"name":"fun IntCounter()","description":"space.kscience.kmath.histogram.IntCounter.IntCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-int-counter/-int-counter.html","searchKeys":["IntCounter","fun IntCounter()","space.kscience.kmath.histogram.IntCounter.IntCounter"]},{"name":"fun LongCounter()","description":"space.kscience.kmath.histogram.LongCounter.LongCounter","location":"kmath-histograms/space.kscience.kmath.histogram/-long-counter/-long-counter.html","searchKeys":["LongCounter","fun LongCounter()","space.kscience.kmath.histogram.LongCounter.LongCounter"]},{"name":"fun TreeHistogram(binMap: TreeMap<Double, out UnivariateBin>)","description":"space.kscience.kmath.histogram.TreeHistogram.TreeHistogram","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram/-tree-histogram.html","searchKeys":["TreeHistogram","fun TreeHistogram(binMap: TreeMap<Double, out UnivariateBin>)","space.kscience.kmath.histogram.TreeHistogram.TreeHistogram"]},{"name":"fun TreeHistogramSpace(binFactory: (Double) -> UnivariateDomain)","description":"space.kscience.kmath.histogram.TreeHistogramSpace.TreeHistogramSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/-tree-histogram-space.html","searchKeys":["TreeHistogramSpace","fun TreeHistogramSpace(binFactory: (Double) -> UnivariateDomain)","space.kscience.kmath.histogram.TreeHistogramSpace.TreeHistogramSpace"]},{"name":"fun UnivariateBin(domain: UnivariateDomain, value: Double, standardDeviation: Double)","description":"space.kscience.kmath.histogram.UnivariateBin.UnivariateBin","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/-univariate-bin.html","searchKeys":["UnivariateBin","fun UnivariateBin(domain: UnivariateDomain, value: Double, standardDeviation: Double)","space.kscience.kmath.histogram.UnivariateBin.UnivariateBin"]},{"name":"fun UnivariateHistogramBuilder.fill(array: DoubleArray)","description":"space.kscience.kmath.histogram.fill","location":"kmath-histograms/space.kscience.kmath.histogram/fill.html","searchKeys":["fill","fun UnivariateHistogramBuilder.fill(array: DoubleArray)","space.kscience.kmath.histogram.fill"]},{"name":"fun UnivariateHistogramBuilder.fill(buffer: Buffer<Double>)","description":"space.kscience.kmath.histogram.fill","location":"kmath-histograms/space.kscience.kmath.histogram/fill.html","searchKeys":["fill","fun UnivariateHistogramBuilder.fill(buffer: Buffer<Double>)","space.kscience.kmath.histogram.fill"]},{"name":"fun UnivariateHistogramBuilder.fill(items: Iterable<Double>)","description":"space.kscience.kmath.histogram.fill","location":"kmath-histograms/space.kscience.kmath.histogram/fill.html","searchKeys":["fill","fun UnivariateHistogramBuilder.fill(items: Iterable<Double>)","space.kscience.kmath.histogram.fill"]},{"name":"fun custom(borders: DoubleArray): TreeHistogramSpace","description":"space.kscience.kmath.histogram.TreeHistogramSpace.Companion.custom","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/-companion/custom.html","searchKeys":["custom","fun custom(borders: DoubleArray): TreeHistogramSpace","space.kscience.kmath.histogram.TreeHistogramSpace.Companion.custom"]},{"name":"fun custom(borders: DoubleArray, builder: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","description":"space.kscience.kmath.histogram.UnivariateHistogram.Companion.custom","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/-companion/custom.html","searchKeys":["custom","fun custom(borders: DoubleArray, builder: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","space.kscience.kmath.histogram.UnivariateHistogram.Companion.custom"]},{"name":"fun fromRanges(vararg ranges: ClosedFloatingPointRange<Double>): DoubleHistogramSpace","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.Companion.fromRanges","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/-companion/from-ranges.html","searchKeys":["fromRanges","fun fromRanges(vararg ranges: ClosedFloatingPointRange<Double>): DoubleHistogramSpace","space.kscience.kmath.histogram.DoubleHistogramSpace.Companion.fromRanges"]},{"name":"fun fromRanges(vararg ranges: Pair<ClosedFloatingPointRange<Double>, Int>): DoubleHistogramSpace","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.Companion.fromRanges","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/-companion/from-ranges.html","searchKeys":["fromRanges","fun fromRanges(vararg ranges: Pair<ClosedFloatingPointRange<Double>, Int>): DoubleHistogramSpace","space.kscience.kmath.histogram.DoubleHistogramSpace.Companion.fromRanges"]},{"name":"fun fun interface HistogramBuilder<in T : Any>","description":"space.kscience.kmath.histogram.HistogramBuilder","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram-builder/index.html","searchKeys":["HistogramBuilder","fun fun interface HistogramBuilder<in T : Any>","space.kscience.kmath.histogram.HistogramBuilder"]},{"name":"fun real(): ObjectCounter<Double>","description":"space.kscience.kmath.histogram.Counter.Companion.real","location":"kmath-histograms/space.kscience.kmath.histogram/-counter/-companion/real.html","searchKeys":["real","fun real(): ObjectCounter<Double>","space.kscience.kmath.histogram.Counter.Companion.real"]},{"name":"fun uniform(binSize: Double, start: Double = 0.0): TreeHistogramSpace","description":"space.kscience.kmath.histogram.TreeHistogramSpace.Companion.uniform","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/-companion/uniform.html","searchKeys":["uniform","fun uniform(binSize: Double, start: Double = 0.0): TreeHistogramSpace","space.kscience.kmath.histogram.TreeHistogramSpace.Companion.uniform"]},{"name":"fun uniform(binSize: Double, start: Double = 0.0, builder: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","description":"space.kscience.kmath.histogram.UnivariateHistogram.Companion.uniform","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/-companion/uniform.html","searchKeys":["uniform","fun uniform(binSize: Double, start: Double = 0.0, builder: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","space.kscience.kmath.histogram.UnivariateHistogram.Companion.uniform"]},{"name":"inline fun fill(block: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogramSpace.fill","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/fill.html","searchKeys":["fill","inline fun fill(block: UnivariateHistogramBuilder.() -> Unit): UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogramSpace.fill"]},{"name":"interface Bin<in T : Any> : Domain<T> ","description":"space.kscience.kmath.histogram.Bin","location":"kmath-histograms/space.kscience.kmath.histogram/-bin/index.html","searchKeys":["Bin","interface Bin<in T : Any> : Domain<T> ","space.kscience.kmath.histogram.Bin"]},{"name":"interface Counter<T : Any>","description":"space.kscience.kmath.histogram.Counter","location":"kmath-histograms/space.kscience.kmath.histogram/-counter/index.html","searchKeys":["Counter","interface Counter<T : Any>","space.kscience.kmath.histogram.Counter"]},{"name":"interface Histogram<in T : Any, out B : Bin<T>>","description":"space.kscience.kmath.histogram.Histogram","location":"kmath-histograms/space.kscience.kmath.histogram/-histogram/index.html","searchKeys":["Histogram","interface Histogram<in T : Any, out B : Bin<T>>","space.kscience.kmath.histogram.Histogram"]},{"name":"interface IndexedHistogramSpace<T : Comparable<T>, V : Any> : Group<IndexedHistogram<T, V>> , ScaleOperations<IndexedHistogram<T, V>> ","description":"space.kscience.kmath.histogram.IndexedHistogramSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/index.html","searchKeys":["IndexedHistogramSpace","interface IndexedHistogramSpace<T : Comparable<T>, V : Any> : Group<IndexedHistogram<T, V>> , ScaleOperations<IndexedHistogram<T, V>> ","space.kscience.kmath.histogram.IndexedHistogramSpace"]},{"name":"interface UnivariateHistogram : Histogram<Double, UnivariateBin> ","description":"space.kscience.kmath.histogram.UnivariateHistogram","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/index.html","searchKeys":["UnivariateHistogram","interface UnivariateHistogram : Histogram<Double, UnivariateBin> ","space.kscience.kmath.histogram.UnivariateHistogram"]},{"name":"interface UnivariateHistogramBuilder : HistogramBuilder<Double> ","description":"space.kscience.kmath.histogram.UnivariateHistogramBuilder","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram-builder/index.html","searchKeys":["UnivariateHistogramBuilder","interface UnivariateHistogramBuilder : HistogramBuilder<Double> ","space.kscience.kmath.histogram.UnivariateHistogramBuilder"]},{"name":"object Companion","description":"space.kscience.kmath.histogram.Counter.Companion","location":"kmath-histograms/space.kscience.kmath.histogram/-counter/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.histogram.Counter.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.Companion","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.histogram.DoubleHistogramSpace.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.histogram.TreeHistogramSpace.Companion","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.histogram.TreeHistogramSpace.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.histogram.UnivariateHistogram.Companion","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.histogram.UnivariateHistogram.Companion"]},{"name":"open operator override fun IndexedHistogram<Double, Double>.unaryMinus(): IndexedHistogram<Double, Double>","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.unaryMinus","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun IndexedHistogram<Double, Double>.unaryMinus(): IndexedHistogram<Double, Double>","space.kscience.kmath.histogram.DoubleHistogramSpace.unaryMinus"]},{"name":"open operator override fun UnivariateHistogram.unaryMinus(): UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogramSpace.unaryMinus","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun UnivariateHistogram.unaryMinus(): UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogramSpace.unaryMinus"]},{"name":"open operator override fun contains(point: Buffer<Double>): Boolean","description":"space.kscience.kmath.histogram.UnivariateBin.contains","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/contains.html","searchKeys":["contains","open operator override fun contains(point: Buffer<Double>): Boolean","space.kscience.kmath.histogram.UnivariateBin.contains"]},{"name":"open operator override fun get(point: Buffer<Double>): UnivariateBin?","description":"space.kscience.kmath.histogram.UnivariateHistogram.get","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-histogram/get.html","searchKeys":["get","open operator override fun get(point: Buffer<Double>): UnivariateBin?","space.kscience.kmath.histogram.UnivariateHistogram.get"]},{"name":"open operator override fun get(point: Point<T>): Bin<T>?","description":"space.kscience.kmath.histogram.IndexedHistogram.get","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/get.html","searchKeys":["get","open operator override fun get(point: Point<T>): Bin<T>?","space.kscience.kmath.histogram.IndexedHistogram.get"]},{"name":"open operator override fun get(value: Double): UnivariateBin?","description":"space.kscience.kmath.histogram.TreeHistogram.get","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram/get.html","searchKeys":["get","open operator override fun get(value: Double): UnivariateBin?","space.kscience.kmath.histogram.TreeHistogram.get"]},{"name":"open override fun add(a: IndexedHistogram<T, V>, b: IndexedHistogram<T, V>): IndexedHistogram<T, V>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.add","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/add.html","searchKeys":["add","open override fun add(a: IndexedHistogram<T, V>, b: IndexedHistogram<T, V>): IndexedHistogram<T, V>","space.kscience.kmath.histogram.IndexedHistogramSpace.add"]},{"name":"open override fun add(a: UnivariateHistogram, b: UnivariateHistogram): UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogramSpace.add","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/add.html","searchKeys":["add","open override fun add(a: UnivariateHistogram, b: UnivariateHistogram): UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogramSpace.add"]},{"name":"open override fun add(delta: Int)","description":"space.kscience.kmath.histogram.IntCounter.add","location":"kmath-histograms/space.kscience.kmath.histogram/-int-counter/add.html","searchKeys":["add","open override fun add(delta: Int)","space.kscience.kmath.histogram.IntCounter.add"]},{"name":"open override fun add(delta: Long)","description":"space.kscience.kmath.histogram.LongCounter.add","location":"kmath-histograms/space.kscience.kmath.histogram/-long-counter/add.html","searchKeys":["add","open override fun add(delta: Long)","space.kscience.kmath.histogram.LongCounter.add"]},{"name":"open override fun add(delta: T)","description":"space.kscience.kmath.histogram.ObjectCounter.add","location":"kmath-histograms/space.kscience.kmath.histogram/-object-counter/add.html","searchKeys":["add","open override fun add(delta: T)","space.kscience.kmath.histogram.ObjectCounter.add"]},{"name":"open override fun getDomain(index: IntArray): Domain<Double>","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.getDomain","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/get-domain.html","searchKeys":["getDomain","open override fun getDomain(index: IntArray): Domain<Double>","space.kscience.kmath.histogram.DoubleHistogramSpace.getDomain"]},{"name":"open override fun getIndex(point: Buffer<Double>): IntArray","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.getIndex","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/get-index.html","searchKeys":["getIndex","open override fun getIndex(point: Buffer<Double>): IntArray","space.kscience.kmath.histogram.DoubleHistogramSpace.getIndex"]},{"name":"open override fun produce(builder: HistogramBuilder<Double>.() -> Unit): IndexedHistogram<Double, Double>","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.produce","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/produce.html","searchKeys":["produce","open override fun produce(builder: HistogramBuilder<Double>.() -> Unit): IndexedHistogram<Double, Double>","space.kscience.kmath.histogram.DoubleHistogramSpace.produce"]},{"name":"open override fun produceBin(index: IntArray, value: Double): Bin<Double>","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.produceBin","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/produce-bin.html","searchKeys":["produceBin","open override fun produceBin(index: IntArray, value: Double): Bin<Double>","space.kscience.kmath.histogram.DoubleHistogramSpace.produceBin"]},{"name":"open override fun scale(a: IndexedHistogram<T, V>, value: Double): IndexedHistogram<T, V>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.scale","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/scale.html","searchKeys":["scale","open override fun scale(a: IndexedHistogram<T, V>, value: Double): IndexedHistogram<T, V>","space.kscience.kmath.histogram.IndexedHistogramSpace.scale"]},{"name":"open override fun scale(a: UnivariateHistogram, value: Double): UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogramSpace.scale","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/scale.html","searchKeys":["scale","open override fun scale(a: UnivariateHistogram, value: Double): UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogramSpace.scale"]},{"name":"open override val bins: Collection<UnivariateBin>","description":"space.kscience.kmath.histogram.TreeHistogram.bins","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram/bins.html","searchKeys":["bins","open override val bins: Collection<UnivariateBin>","space.kscience.kmath.histogram.TreeHistogram.bins"]},{"name":"open override val bins: Iterable<Bin<T>>","description":"space.kscience.kmath.histogram.IndexedHistogram.bins","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/bins.html","searchKeys":["bins","open override val bins: Iterable<Bin<T>>","space.kscience.kmath.histogram.IndexedHistogram.bins"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.histogram.IndexedHistogram.dimension","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.histogram.IndexedHistogram.dimension"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.histogram.TreeHistogram.dimension","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.histogram.TreeHistogram.dimension"]},{"name":"open override val dimension: Int","description":"space.kscience.kmath.histogram.UnivariateBin.dimension","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/dimension.html","searchKeys":["dimension","open override val dimension: Int","space.kscience.kmath.histogram.UnivariateBin.dimension"]},{"name":"open override val histogramValueSpace: DoubleFieldND","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.histogramValueSpace","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/histogram-value-space.html","searchKeys":["histogramValueSpace","open override val histogramValueSpace: DoubleFieldND","space.kscience.kmath.histogram.DoubleHistogramSpace.histogramValueSpace"]},{"name":"open override val strides: Strides","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.strides","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/strides.html","searchKeys":["strides","open override val strides: Strides","space.kscience.kmath.histogram.DoubleHistogramSpace.strides"]},{"name":"open override val value: Double","description":"space.kscience.kmath.histogram.UnivariateBin.value","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/value.html","searchKeys":["value","open override val value: Double","space.kscience.kmath.histogram.UnivariateBin.value"]},{"name":"open override val value: Int","description":"space.kscience.kmath.histogram.IntCounter.value","location":"kmath-histograms/space.kscience.kmath.histogram/-int-counter/value.html","searchKeys":["value","open override val value: Int","space.kscience.kmath.histogram.IntCounter.value"]},{"name":"open override val value: Long","description":"space.kscience.kmath.histogram.LongCounter.value","location":"kmath-histograms/space.kscience.kmath.histogram/-long-counter/value.html","searchKeys":["value","open override val value: Long","space.kscience.kmath.histogram.LongCounter.value"]},{"name":"open override val value: Number","description":"space.kscience.kmath.histogram.DomainBin.value","location":"kmath-histograms/space.kscience.kmath.histogram/-domain-bin/value.html","searchKeys":["value","open override val value: Number","space.kscience.kmath.histogram.DomainBin.value"]},{"name":"open override val value: T","description":"space.kscience.kmath.histogram.ObjectCounter.value","location":"kmath-histograms/space.kscience.kmath.histogram/-object-counter/value.html","searchKeys":["value","open override val value: T","space.kscience.kmath.histogram.ObjectCounter.value"]},{"name":"open override val zero: IndexedHistogram<T, V>","description":"space.kscience.kmath.histogram.IndexedHistogramSpace.zero","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram-space/zero.html","searchKeys":["zero","open override val zero: IndexedHistogram<T, V>","space.kscience.kmath.histogram.IndexedHistogramSpace.zero"]},{"name":"open override val zero: UnivariateHistogram","description":"space.kscience.kmath.histogram.TreeHistogramSpace.zero","location":"kmath-histograms/space.kscience.kmath.histogram/-tree-histogram-space/zero.html","searchKeys":["zero","open override val zero: UnivariateHistogram","space.kscience.kmath.histogram.TreeHistogramSpace.zero"]},{"name":"val UnivariateDomain.center: Double","description":"space.kscience.kmath.histogram.center","location":"kmath-histograms/space.kscience.kmath.histogram/center.html","searchKeys":["center","val UnivariateDomain.center: Double","space.kscience.kmath.histogram.center"]},{"name":"val context: IndexedHistogramSpace<T, V>","description":"space.kscience.kmath.histogram.IndexedHistogram.context","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/context.html","searchKeys":["context","val context: IndexedHistogramSpace<T, V>","space.kscience.kmath.histogram.IndexedHistogram.context"]},{"name":"val dimension: Int","description":"space.kscience.kmath.histogram.DoubleHistogramSpace.dimension","location":"kmath-histograms/space.kscience.kmath.histogram/-double-histogram-space/dimension.html","searchKeys":["dimension","val dimension: Int","space.kscience.kmath.histogram.DoubleHistogramSpace.dimension"]},{"name":"val domain: Domain<T>","description":"space.kscience.kmath.histogram.DomainBin.domain","location":"kmath-histograms/space.kscience.kmath.histogram/-domain-bin/domain.html","searchKeys":["domain","val domain: Domain<T>","space.kscience.kmath.histogram.DomainBin.domain"]},{"name":"val domain: UnivariateDomain","description":"space.kscience.kmath.histogram.UnivariateBin.domain","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/domain.html","searchKeys":["domain","val domain: UnivariateDomain","space.kscience.kmath.histogram.UnivariateBin.domain"]},{"name":"val group: Ring<T>","description":"space.kscience.kmath.histogram.ObjectCounter.group","location":"kmath-histograms/space.kscience.kmath.histogram/-object-counter/group.html","searchKeys":["group","val group: Ring<T>","space.kscience.kmath.histogram.ObjectCounter.group"]},{"name":"val standardDeviation: Double","description":"space.kscience.kmath.histogram.UnivariateBin.standardDeviation","location":"kmath-histograms/space.kscience.kmath.histogram/-univariate-bin/standard-deviation.html","searchKeys":["standardDeviation","val standardDeviation: Double","space.kscience.kmath.histogram.UnivariateBin.standardDeviation"]},{"name":"val values: StructureND<V>","description":"space.kscience.kmath.histogram.IndexedHistogram.values","location":"kmath-histograms/space.kscience.kmath.histogram/-indexed-histogram/values.html","searchKeys":["values","val values: StructureND<V>","space.kscience.kmath.histogram.IndexedHistogram.values"]},{"name":"abstract fun V.distanceTo(other: V): Double","description":"space.kscience.kmath.geometry.GeometrySpace.distanceTo","location":"kmath-geometry/space.kscience.kmath.geometry/-geometry-space/distance-to.html","searchKeys":["distanceTo","abstract fun V.distanceTo(other: V): Double","space.kscience.kmath.geometry.GeometrySpace.distanceTo"]},{"name":"abstract infix fun V.dot(other: V): Double","description":"space.kscience.kmath.geometry.GeometrySpace.dot","location":"kmath-geometry/space.kscience.kmath.geometry/-geometry-space/dot.html","searchKeys":["dot","abstract infix fun V.dot(other: V): Double","space.kscience.kmath.geometry.GeometrySpace.dot"]},{"name":"abstract val x: Double","description":"space.kscience.kmath.geometry.Vector2D.x","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/x.html","searchKeys":["x","abstract val x: Double","space.kscience.kmath.geometry.Vector2D.x"]},{"name":"abstract val x: Double","description":"space.kscience.kmath.geometry.Vector3D.x","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/x.html","searchKeys":["x","abstract val x: Double","space.kscience.kmath.geometry.Vector3D.x"]},{"name":"abstract val y: Double","description":"space.kscience.kmath.geometry.Vector2D.y","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/y.html","searchKeys":["y","abstract val y: Double","space.kscience.kmath.geometry.Vector2D.y"]},{"name":"abstract val y: Double","description":"space.kscience.kmath.geometry.Vector3D.y","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/y.html","searchKeys":["y","abstract val y: Double","space.kscience.kmath.geometry.Vector3D.y"]},{"name":"abstract val z: Double","description":"space.kscience.kmath.geometry.Vector3D.z","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/z.html","searchKeys":["z","abstract val z: Double","space.kscience.kmath.geometry.Vector3D.z"]},{"name":"data class Line<out V : Vector>(base: V, direction: V)","description":"space.kscience.kmath.geometry.Line","location":"kmath-geometry/space.kscience.kmath.geometry/-line/index.html","searchKeys":["Line","data class Line<out V : Vector>(base: V, direction: V)","space.kscience.kmath.geometry.Line"]},{"name":"fun <V : Vector> GeometrySpace<V>.projectAlong(vector: V, normal: V, base: V): V","description":"space.kscience.kmath.geometry.projectAlong","location":"kmath-geometry/space.kscience.kmath.geometry/project-along.html","searchKeys":["projectAlong","fun <V : Vector> GeometrySpace<V>.projectAlong(vector: V, normal: V, base: V): V","space.kscience.kmath.geometry.projectAlong"]},{"name":"fun <V : Vector> GeometrySpace<V>.projectToLine(vector: V, line: Line<V>): V","description":"space.kscience.kmath.geometry.projectToLine","location":"kmath-geometry/space.kscience.kmath.geometry/project-to-line.html","searchKeys":["projectToLine","fun <V : Vector> GeometrySpace<V>.projectToLine(vector: V, line: Line<V>): V","space.kscience.kmath.geometry.projectToLine"]},{"name":"fun <out V : Vector> Line(base: V, direction: V)","description":"space.kscience.kmath.geometry.Line.Line","location":"kmath-geometry/space.kscience.kmath.geometry/-line/-line.html","searchKeys":["Line","fun <out V : Vector> Line(base: V, direction: V)","space.kscience.kmath.geometry.Line.Line"]},{"name":"fun Vector2D(x: Double, y: Double): Vector2D","description":"space.kscience.kmath.geometry.Vector2D","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d.html","searchKeys":["Vector2D","fun Vector2D(x: Double, y: Double): Vector2D","space.kscience.kmath.geometry.Vector2D"]},{"name":"fun Vector2D.norm(): Double","description":"space.kscience.kmath.geometry.Euclidean2DSpace.norm","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/norm.html","searchKeys":["norm","fun Vector2D.norm(): Double","space.kscience.kmath.geometry.Euclidean2DSpace.norm"]},{"name":"fun Vector3D(x: Double, y: Double, z: Double): Vector3D","description":"space.kscience.kmath.geometry.Vector3D","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d.html","searchKeys":["Vector3D","fun Vector3D(x: Double, y: Double, z: Double): Vector3D","space.kscience.kmath.geometry.Vector3D"]},{"name":"fun Vector3D.norm(): Double","description":"space.kscience.kmath.geometry.Euclidean3DSpace.norm","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/norm.html","searchKeys":["norm","fun Vector3D.norm(): Double","space.kscience.kmath.geometry.Euclidean3DSpace.norm"]},{"name":"interface GeometrySpace<V : Vector> : Group<V> , ScaleOperations<V> ","description":"space.kscience.kmath.geometry.GeometrySpace","location":"kmath-geometry/space.kscience.kmath.geometry/-geometry-space/index.html","searchKeys":["GeometrySpace","interface GeometrySpace<V : Vector> : Group<V> , ScaleOperations<V> ","space.kscience.kmath.geometry.GeometrySpace"]},{"name":"interface ReferenceFrame","description":"space.kscience.kmath.geometry.ReferenceFrame","location":"kmath-geometry/space.kscience.kmath.geometry/-reference-frame/index.html","searchKeys":["ReferenceFrame","interface ReferenceFrame","space.kscience.kmath.geometry.ReferenceFrame"]},{"name":"interface Vector","description":"space.kscience.kmath.geometry.Vector","location":"kmath-geometry/space.kscience.kmath.geometry/-vector/index.html","searchKeys":["Vector","interface Vector","space.kscience.kmath.geometry.Vector"]},{"name":"interface Vector2D : Buffer<Double> , Vector","description":"space.kscience.kmath.geometry.Vector2D","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/index.html","searchKeys":["Vector2D","interface Vector2D : Buffer<Double> , Vector","space.kscience.kmath.geometry.Vector2D"]},{"name":"interface Vector3D : Buffer<Double> , Vector","description":"space.kscience.kmath.geometry.Vector3D","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/index.html","searchKeys":["Vector3D","interface Vector3D : Buffer<Double> , Vector","space.kscience.kmath.geometry.Vector3D"]},{"name":"object Euclidean2DSpace : GeometrySpace<Vector2D> , ScaleOperations<Vector2D> ","description":"space.kscience.kmath.geometry.Euclidean2DSpace","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/index.html","searchKeys":["Euclidean2DSpace","object Euclidean2DSpace : GeometrySpace<Vector2D> , ScaleOperations<Vector2D> ","space.kscience.kmath.geometry.Euclidean2DSpace"]},{"name":"object Euclidean3DSpace : GeometrySpace<Vector3D> , ScaleOperations<Vector3D> ","description":"space.kscience.kmath.geometry.Euclidean3DSpace","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/index.html","searchKeys":["Euclidean3DSpace","object Euclidean3DSpace : GeometrySpace<Vector3D> , ScaleOperations<Vector3D> ","space.kscience.kmath.geometry.Euclidean3DSpace"]},{"name":"open infix override fun Vector2D.dot(other: Vector2D): Double","description":"space.kscience.kmath.geometry.Euclidean2DSpace.dot","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/dot.html","searchKeys":["dot","open infix override fun Vector2D.dot(other: Vector2D): Double","space.kscience.kmath.geometry.Euclidean2DSpace.dot"]},{"name":"open infix override fun Vector3D.dot(other: Vector3D): Double","description":"space.kscience.kmath.geometry.Euclidean3DSpace.dot","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/dot.html","searchKeys":["dot","open infix override fun Vector3D.dot(other: Vector3D): Double","space.kscience.kmath.geometry.Euclidean3DSpace.dot"]},{"name":"open operator override fun Vector2D.unaryMinus(): Vector2D","description":"space.kscience.kmath.geometry.Euclidean2DSpace.unaryMinus","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Vector2D.unaryMinus(): Vector2D","space.kscience.kmath.geometry.Euclidean2DSpace.unaryMinus"]},{"name":"open operator override fun Vector3D.unaryMinus(): Vector3D","description":"space.kscience.kmath.geometry.Euclidean3DSpace.unaryMinus","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Vector3D.unaryMinus(): Vector3D","space.kscience.kmath.geometry.Euclidean3DSpace.unaryMinus"]},{"name":"open operator override fun get(index: Int): Double","description":"space.kscience.kmath.geometry.Vector2D.get","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","space.kscience.kmath.geometry.Vector2D.get"]},{"name":"open operator override fun get(index: Int): Double","description":"space.kscience.kmath.geometry.Vector3D.get","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/get.html","searchKeys":["get","open operator override fun get(index: Int): Double","space.kscience.kmath.geometry.Vector3D.get"]},{"name":"open operator override fun iterator(): Iterator<Double>","description":"space.kscience.kmath.geometry.Vector2D.iterator","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double>","space.kscience.kmath.geometry.Vector2D.iterator"]},{"name":"open operator override fun iterator(): Iterator<Double>","description":"space.kscience.kmath.geometry.Vector3D.iterator","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double>","space.kscience.kmath.geometry.Vector3D.iterator"]},{"name":"open override fun Vector2D.distanceTo(other: Vector2D): Double","description":"space.kscience.kmath.geometry.Euclidean2DSpace.distanceTo","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/distance-to.html","searchKeys":["distanceTo","open override fun Vector2D.distanceTo(other: Vector2D): Double","space.kscience.kmath.geometry.Euclidean2DSpace.distanceTo"]},{"name":"open override fun Vector3D.distanceTo(other: Vector3D): Double","description":"space.kscience.kmath.geometry.Euclidean3DSpace.distanceTo","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/distance-to.html","searchKeys":["distanceTo","open override fun Vector3D.distanceTo(other: Vector3D): Double","space.kscience.kmath.geometry.Euclidean3DSpace.distanceTo"]},{"name":"open override fun add(a: Vector2D, b: Vector2D): Vector2D","description":"space.kscience.kmath.geometry.Euclidean2DSpace.add","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/add.html","searchKeys":["add","open override fun add(a: Vector2D, b: Vector2D): Vector2D","space.kscience.kmath.geometry.Euclidean2DSpace.add"]},{"name":"open override fun add(a: Vector3D, b: Vector3D): Vector3D","description":"space.kscience.kmath.geometry.Euclidean3DSpace.add","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/add.html","searchKeys":["add","open override fun add(a: Vector3D, b: Vector3D): Vector3D","space.kscience.kmath.geometry.Euclidean3DSpace.add"]},{"name":"open override fun scale(a: Vector2D, value: Double): Vector2D","description":"space.kscience.kmath.geometry.Euclidean2DSpace.scale","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/scale.html","searchKeys":["scale","open override fun scale(a: Vector2D, value: Double): Vector2D","space.kscience.kmath.geometry.Euclidean2DSpace.scale"]},{"name":"open override fun scale(a: Vector3D, value: Double): Vector3D","description":"space.kscience.kmath.geometry.Euclidean3DSpace.scale","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/scale.html","searchKeys":["scale","open override fun scale(a: Vector3D, value: Double): Vector3D","space.kscience.kmath.geometry.Euclidean3DSpace.scale"]},{"name":"open override val size: Int","description":"space.kscience.kmath.geometry.Vector2D.size","location":"kmath-geometry/space.kscience.kmath.geometry/-vector2-d/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.geometry.Vector2D.size"]},{"name":"open override val size: Int","description":"space.kscience.kmath.geometry.Vector3D.size","location":"kmath-geometry/space.kscience.kmath.geometry/-vector3-d/size.html","searchKeys":["size","open override val size: Int","space.kscience.kmath.geometry.Vector3D.size"]},{"name":"open override val zero: Vector2D","description":"space.kscience.kmath.geometry.Euclidean2DSpace.zero","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean2-d-space/zero.html","searchKeys":["zero","open override val zero: Vector2D","space.kscience.kmath.geometry.Euclidean2DSpace.zero"]},{"name":"open override val zero: Vector3D","description":"space.kscience.kmath.geometry.Euclidean3DSpace.zero","location":"kmath-geometry/space.kscience.kmath.geometry/-euclidean3-d-space/zero.html","searchKeys":["zero","open override val zero: Vector3D","space.kscience.kmath.geometry.Euclidean3DSpace.zero"]},{"name":"val Vector2D.r: Double","description":"space.kscience.kmath.geometry.r","location":"kmath-geometry/space.kscience.kmath.geometry/r.html","searchKeys":["r","val Vector2D.r: Double","space.kscience.kmath.geometry.r"]},{"name":"val Vector3D.r: Double","description":"space.kscience.kmath.geometry.r","location":"kmath-geometry/space.kscience.kmath.geometry/r.html","searchKeys":["r","val Vector3D.r: Double","space.kscience.kmath.geometry.r"]},{"name":"val base: V","description":"space.kscience.kmath.geometry.Line.base","location":"kmath-geometry/space.kscience.kmath.geometry/-line/base.html","searchKeys":["base","val base: V","space.kscience.kmath.geometry.Line.base"]},{"name":"val direction: V","description":"space.kscience.kmath.geometry.Line.direction","location":"kmath-geometry/space.kscience.kmath.geometry/-line/direction.html","searchKeys":["direction","val direction: V","space.kscience.kmath.geometry.Line.direction"]},{"name":"MAXIMIZE()","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-a-x-i-m-i-z-e/index.html","searchKeys":["MAXIMIZE","MAXIMIZE()","space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE"]},{"name":"MINIMIZE()","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-i-n-i-m-i-z-e/index.html","searchKeys":["MINIMIZE","MINIMIZE()","space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE"]},{"name":"abstract class OptimizationBuilder<T, R : OptimizationProblem<T>>","description":"space.kscience.kmath.optimization.OptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/index.html","searchKeys":["OptimizationBuilder","abstract class OptimizationBuilder<T, R : OptimizationProblem<T>>","space.kscience.kmath.optimization.OptimizationBuilder"]},{"name":"abstract fun build(): R","description":"space.kscience.kmath.optimization.OptimizationBuilder.build","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/build.html","searchKeys":["build","abstract fun build(): R","space.kscience.kmath.optimization.OptimizationBuilder.build"]},{"name":"abstract fun distance(problem: XYFit, index: Int): DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.PointToCurveDistance.distance","location":"kmath-optimization/space.kscience.kmath.optimization/-point-to-curve-distance/distance.html","searchKeys":["distance","abstract fun distance(problem: XYFit, index: Int): DifferentiableExpression<Double>","space.kscience.kmath.optimization.PointToCurveDistance.distance"]},{"name":"abstract fun weight(problem: XYFit, index: Int): DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.PointWeight.weight","location":"kmath-optimization/space.kscience.kmath.optimization/-point-weight/weight.html","searchKeys":["weight","abstract fun weight(problem: XYFit, index: Int): DifferentiableExpression<Double>","space.kscience.kmath.optimization.PointWeight.weight"]},{"name":"abstract override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationFeature.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-feature/to-string.html","searchKeys":["toString","abstract override fun toString(): String","space.kscience.kmath.optimization.OptimizationFeature.toString"]},{"name":"abstract suspend fun optimize(problem: P): P","description":"space.kscience.kmath.optimization.Optimizer.optimize","location":"kmath-optimization/space.kscience.kmath.optimization/-optimizer/optimize.html","searchKeys":["optimize","abstract suspend fun optimize(problem: P): P","space.kscience.kmath.optimization.Optimizer.optimize"]},{"name":"abstract val features: FeatureSet<OptimizationFeature>","description":"space.kscience.kmath.optimization.OptimizationProblem.features","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-problem/features.html","searchKeys":["features","abstract val features: FeatureSet<OptimizationFeature>","space.kscience.kmath.optimization.OptimizationProblem.features"]},{"name":"class FunctionOptimization<T>(features: FeatureSet<OptimizationFeature>, expression: DifferentiableExpression<T>) : OptimizationProblem<T> ","description":"space.kscience.kmath.optimization.FunctionOptimization","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/index.html","searchKeys":["FunctionOptimization","class FunctionOptimization<T>(features: FeatureSet<OptimizationFeature>, expression: DifferentiableExpression<T>) : OptimizationProblem<T> ","space.kscience.kmath.optimization.FunctionOptimization"]},{"name":"class FunctionOptimizationBuilder<T>(expression: DifferentiableExpression<T>) : OptimizationBuilder<T, FunctionOptimization<T>> ","description":"space.kscience.kmath.optimization.FunctionOptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-builder/index.html","searchKeys":["FunctionOptimizationBuilder","class FunctionOptimizationBuilder<T>(expression: DifferentiableExpression<T>) : OptimizationBuilder<T, FunctionOptimization<T>> ","space.kscience.kmath.optimization.FunctionOptimizationBuilder"]},{"name":"class OptimizationCovariance<T>(covariance: Matrix<T>) : OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationCovariance","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-covariance/index.html","searchKeys":["OptimizationCovariance","class OptimizationCovariance<T>(covariance: Matrix<T>) : OptimizationFeature","space.kscience.kmath.optimization.OptimizationCovariance"]},{"name":"class OptimizationLog(loggable: Loggable) : Loggable, OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationLog","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-log/index.html","searchKeys":["OptimizationLog","class OptimizationLog(loggable: Loggable) : Loggable, OptimizationFeature","space.kscience.kmath.optimization.OptimizationLog"]},{"name":"class OptimizationParameters(symbols: List<Symbol>) : OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationParameters","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-parameters/index.html","searchKeys":["OptimizationParameters","class OptimizationParameters(symbols: List<Symbol>) : OptimizationFeature","space.kscience.kmath.optimization.OptimizationParameters"]},{"name":"class OptimizationValue<T>(value: T) : OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationValue","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-value/index.html","searchKeys":["OptimizationValue","class OptimizationValue<T>(value: T) : OptimizationFeature","space.kscience.kmath.optimization.OptimizationValue"]},{"name":"class QowRuns(runs: Int) : OptimizationFeature","description":"space.kscience.kmath.optimization.QowRuns","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-runs/index.html","searchKeys":["QowRuns","class QowRuns(runs: Int) : OptimizationFeature","space.kscience.kmath.optimization.QowRuns"]},{"name":"class XYFit(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, features: FeatureSet<OptimizationFeature>, pointToCurveDistance: PointToCurveDistance, pointWeight: PointWeight, xSymbol: Symbol) : OptimizationProblem<Double> ","description":"space.kscience.kmath.optimization.XYFit","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/index.html","searchKeys":["XYFit","class XYFit(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, features: FeatureSet<OptimizationFeature>, pointToCurveDistance: PointToCurveDistance, pointWeight: PointWeight, xSymbol: Symbol) : OptimizationProblem<Double> ","space.kscience.kmath.optimization.XYFit"]},{"name":"class XYOptimizationBuilder(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>) : OptimizationBuilder<Double, XYFit> ","description":"space.kscience.kmath.optimization.XYOptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/index.html","searchKeys":["XYOptimizationBuilder","class XYOptimizationBuilder(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>) : OptimizationBuilder<Double, XYFit> ","space.kscience.kmath.optimization.XYOptimizationBuilder"]},{"name":"enum FunctionOptimizationTarget : Enum<FunctionOptimizationTarget> , OptimizationFeature","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/index.html","searchKeys":["FunctionOptimizationTarget","enum FunctionOptimizationTarget : Enum<FunctionOptimizationTarget> , OptimizationFeature","space.kscience.kmath.optimization.FunctionOptimizationTarget"]},{"name":"fun <T> FunctionOptimization(expression: DifferentiableExpression<T>, builder: FunctionOptimizationBuilder<T>.() -> Unit): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.FunctionOptimization","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization.html","searchKeys":["FunctionOptimization","fun <T> FunctionOptimization(expression: DifferentiableExpression<T>, builder: FunctionOptimizationBuilder<T>.() -> Unit): FunctionOptimization<T>","space.kscience.kmath.optimization.FunctionOptimization"]},{"name":"fun <T> FunctionOptimization(features: FeatureSet<OptimizationFeature>, expression: DifferentiableExpression<T>)","description":"space.kscience.kmath.optimization.FunctionOptimization.FunctionOptimization","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/-function-optimization.html","searchKeys":["FunctionOptimization","fun <T> FunctionOptimization(features: FeatureSet<OptimizationFeature>, expression: DifferentiableExpression<T>)","space.kscience.kmath.optimization.FunctionOptimization.FunctionOptimization"]},{"name":"fun <T> FunctionOptimization<T>.withFeatures(vararg newFeature: OptimizationFeature): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.withFeatures","location":"kmath-optimization/space.kscience.kmath.optimization/with-features.html","searchKeys":["withFeatures","fun <T> FunctionOptimization<T>.withFeatures(vararg newFeature: OptimizationFeature): FunctionOptimization<T>","space.kscience.kmath.optimization.withFeatures"]},{"name":"fun <T> FunctionOptimizationBuilder(expression: DifferentiableExpression<T>)","description":"space.kscience.kmath.optimization.FunctionOptimizationBuilder.FunctionOptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-builder/-function-optimization-builder.html","searchKeys":["FunctionOptimizationBuilder","fun <T> FunctionOptimizationBuilder(expression: DifferentiableExpression<T>)","space.kscience.kmath.optimization.FunctionOptimizationBuilder.FunctionOptimizationBuilder"]},{"name":"fun <T> OptimizationBuilder<T, *>.startAt(startingPoint: Map<Symbol, T>)","description":"space.kscience.kmath.optimization.startAt","location":"kmath-optimization/space.kscience.kmath.optimization/start-at.html","searchKeys":["startAt","fun <T> OptimizationBuilder<T, *>.startAt(startingPoint: Map<Symbol, T>)","space.kscience.kmath.optimization.startAt"]},{"name":"fun <T> OptimizationResult(point: Map<Symbol, T>)","description":"space.kscience.kmath.optimization.OptimizationResult.OptimizationResult","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-result/-optimization-result.html","searchKeys":["OptimizationResult","fun <T> OptimizationResult(point: Map<Symbol, T>)","space.kscience.kmath.optimization.OptimizationResult.OptimizationResult"]},{"name":"fun <T> OptimizationStartPoint(point: Map<Symbol, T>)","description":"space.kscience.kmath.optimization.OptimizationStartPoint.OptimizationStartPoint","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-start-point/-optimization-start-point.html","searchKeys":["OptimizationStartPoint","fun <T> OptimizationStartPoint(point: Map<Symbol, T>)","space.kscience.kmath.optimization.OptimizationStartPoint.OptimizationStartPoint"]},{"name":"fun <T> OptimizationValue(value: T)","description":"space.kscience.kmath.optimization.OptimizationValue.OptimizationValue","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-value/-optimization-value.html","searchKeys":["OptimizationValue","fun <T> OptimizationValue(value: T)","space.kscience.kmath.optimization.OptimizationValue.OptimizationValue"]},{"name":"fun OptimizationBuilder()","description":"space.kscience.kmath.optimization.OptimizationBuilder.OptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/-optimization-builder.html","searchKeys":["OptimizationBuilder","fun OptimizationBuilder()","space.kscience.kmath.optimization.OptimizationBuilder.OptimizationBuilder"]},{"name":"fun OptimizationCovariance(covariance: Matrix<T>)","description":"space.kscience.kmath.optimization.OptimizationCovariance.OptimizationCovariance","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-covariance/-optimization-covariance.html","searchKeys":["OptimizationCovariance","fun OptimizationCovariance(covariance: Matrix<T>)","space.kscience.kmath.optimization.OptimizationCovariance.OptimizationCovariance"]},{"name":"fun OptimizationLog(loggable: Loggable)","description":"space.kscience.kmath.optimization.OptimizationLog.OptimizationLog","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-log/-optimization-log.html","searchKeys":["OptimizationLog","fun OptimizationLog(loggable: Loggable)","space.kscience.kmath.optimization.OptimizationLog.OptimizationLog"]},{"name":"fun OptimizationParameters(symbols: List<Symbol>)","description":"space.kscience.kmath.optimization.OptimizationParameters.OptimizationParameters","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-parameters/-optimization-parameters.html","searchKeys":["OptimizationParameters","fun OptimizationParameters(symbols: List<Symbol>)","space.kscience.kmath.optimization.OptimizationParameters.OptimizationParameters"]},{"name":"fun OptimizationParameters(vararg symbols: Symbol)","description":"space.kscience.kmath.optimization.OptimizationParameters.OptimizationParameters","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-parameters/-optimization-parameters.html","searchKeys":["OptimizationParameters","fun OptimizationParameters(vararg symbols: Symbol)","space.kscience.kmath.optimization.OptimizationParameters.OptimizationParameters"]},{"name":"fun QowRuns(runs: Int)","description":"space.kscience.kmath.optimization.QowRuns.QowRuns","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-runs/-qow-runs.html","searchKeys":["QowRuns","fun QowRuns(runs: Int)","space.kscience.kmath.optimization.QowRuns.QowRuns"]},{"name":"fun XYFit(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, features: FeatureSet<OptimizationFeature>, pointToCurveDistance: PointToCurveDistance = PointToCurveDistance.byY, pointWeight: PointWeight = PointWeight.byYSigma, xSymbol: Symbol = Symbol.x)","description":"space.kscience.kmath.optimization.XYFit.XYFit","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/-x-y-fit.html","searchKeys":["XYFit","fun XYFit(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, features: FeatureSet<OptimizationFeature>, pointToCurveDistance: PointToCurveDistance = PointToCurveDistance.byY, pointWeight: PointWeight = PointWeight.byYSigma, xSymbol: Symbol = Symbol.x)","space.kscience.kmath.optimization.XYFit.XYFit"]},{"name":"fun XYFit.withFeature(vararg features: OptimizationFeature): XYFit","description":"space.kscience.kmath.optimization.withFeature","location":"kmath-optimization/space.kscience.kmath.optimization/with-feature.html","searchKeys":["withFeature","fun XYFit.withFeature(vararg features: OptimizationFeature): XYFit","space.kscience.kmath.optimization.withFeature"]},{"name":"fun XYOptimization(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, builder: XYOptimizationBuilder.() -> Unit): XYFit","description":"space.kscience.kmath.optimization.XYOptimization","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization.html","searchKeys":["XYOptimization","fun XYOptimization(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, builder: XYOptimizationBuilder.() -> Unit): XYFit","space.kscience.kmath.optimization.XYOptimization"]},{"name":"fun XYOptimizationBuilder(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>)","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.XYOptimizationBuilder","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/-x-y-optimization-builder.html","searchKeys":["XYOptimizationBuilder","fun XYOptimizationBuilder(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>)","space.kscience.kmath.optimization.XYOptimizationBuilder.XYOptimizationBuilder"]},{"name":"fun addFeature(feature: OptimizationFeature)","description":"space.kscience.kmath.optimization.OptimizationBuilder.addFeature","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/add-feature.html","searchKeys":["addFeature","fun addFeature(feature: OptimizationFeature)","space.kscience.kmath.optimization.OptimizationBuilder.addFeature"]},{"name":"fun bySigma(sigmaSymbol: Symbol): PointWeight","description":"space.kscience.kmath.optimization.PointWeight.Companion.bySigma","location":"kmath-optimization/space.kscience.kmath.optimization/-point-weight/-companion/by-sigma.html","searchKeys":["bySigma","fun bySigma(sigmaSymbol: Symbol): PointWeight","space.kscience.kmath.optimization.PointWeight.Companion.bySigma"]},{"name":"fun distance(index: Int): DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.XYFit.distance","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/distance.html","searchKeys":["distance","fun distance(index: Int): DifferentiableExpression<Double>","space.kscience.kmath.optimization.XYFit.distance"]},{"name":"fun weight(index: Int): DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.XYFit.weight","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/weight.html","searchKeys":["weight","fun weight(index: Int): DifferentiableExpression<Double>","space.kscience.kmath.optimization.XYFit.weight"]},{"name":"inline fun <F : OptimizationFeature> OptimizationProblem<*>.getFeature(): F?","description":"space.kscience.kmath.optimization.getFeature","location":"kmath-optimization/space.kscience.kmath.optimization/get-feature.html","searchKeys":["getFeature","inline fun <F : OptimizationFeature> OptimizationProblem<*>.getFeature(): F?","space.kscience.kmath.optimization.getFeature"]},{"name":"inline fun <T : OptimizationFeature> updateFeature(update: (T?) -> T)","description":"space.kscience.kmath.optimization.OptimizationBuilder.updateFeature","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/update-feature.html","searchKeys":["updateFeature","inline fun <T : OptimizationFeature> updateFeature(update: (T?) -> T)","space.kscience.kmath.optimization.OptimizationBuilder.updateFeature"]},{"name":"interface OptimizationFeature : Feature<OptimizationFeature> ","description":"space.kscience.kmath.optimization.OptimizationFeature","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-feature/index.html","searchKeys":["OptimizationFeature","interface OptimizationFeature : Feature<OptimizationFeature> ","space.kscience.kmath.optimization.OptimizationFeature"]},{"name":"interface OptimizationPrior<T> : OptimizationFeature, DifferentiableExpression<T> ","description":"space.kscience.kmath.optimization.OptimizationPrior","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-prior/index.html","searchKeys":["OptimizationPrior","interface OptimizationPrior<T> : OptimizationFeature, DifferentiableExpression<T> ","space.kscience.kmath.optimization.OptimizationPrior"]},{"name":"interface OptimizationProblem<T> : Featured<OptimizationFeature> ","description":"space.kscience.kmath.optimization.OptimizationProblem","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-problem/index.html","searchKeys":["OptimizationProblem","interface OptimizationProblem<T> : Featured<OptimizationFeature> ","space.kscience.kmath.optimization.OptimizationProblem"]},{"name":"interface Optimizer<T, P : OptimizationProblem<T>>","description":"space.kscience.kmath.optimization.Optimizer","location":"kmath-optimization/space.kscience.kmath.optimization/-optimizer/index.html","searchKeys":["Optimizer","interface Optimizer<T, P : OptimizationProblem<T>>","space.kscience.kmath.optimization.Optimizer"]},{"name":"interface PointToCurveDistance : OptimizationFeature","description":"space.kscience.kmath.optimization.PointToCurveDistance","location":"kmath-optimization/space.kscience.kmath.optimization/-point-to-curve-distance/index.html","searchKeys":["PointToCurveDistance","interface PointToCurveDistance : OptimizationFeature","space.kscience.kmath.optimization.PointToCurveDistance"]},{"name":"interface PointWeight : OptimizationFeature","description":"space.kscience.kmath.optimization.PointWeight","location":"kmath-optimization/space.kscience.kmath.optimization/-point-weight/index.html","searchKeys":["PointWeight","interface PointWeight : OptimizationFeature","space.kscience.kmath.optimization.PointWeight"]},{"name":"object Companion","description":"space.kscience.kmath.optimization.PointToCurveDistance.Companion","location":"kmath-optimization/space.kscience.kmath.optimization/-point-to-curve-distance/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.optimization.PointToCurveDistance.Companion"]},{"name":"object Companion","description":"space.kscience.kmath.optimization.PointWeight.Companion","location":"kmath-optimization/space.kscience.kmath.optimization/-point-weight/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.kmath.optimization.PointWeight.Companion"]},{"name":"object QowOptimizer : Optimizer<Double, XYFit> ","description":"space.kscience.kmath.optimization.QowOptimizer","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-optimizer/index.html","searchKeys":["QowOptimizer","object QowOptimizer : Optimizer<Double, XYFit> ","space.kscience.kmath.optimization.QowOptimizer"]},{"name":"open class OptimizationResult<T>(point: Map<Symbol, T>) : OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationResult","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-result/index.html","searchKeys":["OptimizationResult","open class OptimizationResult<T>(point: Map<Symbol, T>) : OptimizationFeature","space.kscience.kmath.optimization.OptimizationResult"]},{"name":"open class OptimizationStartPoint<T>(point: Map<Symbol, T>) : OptimizationFeature","description":"space.kscience.kmath.optimization.OptimizationStartPoint","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-start-point/index.html","searchKeys":["OptimizationStartPoint","open class OptimizationStartPoint<T>(point: Map<Symbol, T>) : OptimizationFeature","space.kscience.kmath.optimization.OptimizationStartPoint"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.kmath.optimization.FunctionOptimization.equals","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.kmath.optimization.FunctionOptimization.equals"]},{"name":"open override fun <F : OptimizationFeature> getFeature(type: KClass<out F>): F?","description":"space.kscience.kmath.optimization.OptimizationProblem.getFeature","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-problem/get-feature.html","searchKeys":["getFeature","open override fun <F : OptimizationFeature> getFeature(type: KClass<out F>): F?","space.kscience.kmath.optimization.OptimizationProblem.getFeature"]},{"name":"open override fun build(): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.FunctionOptimizationBuilder.build","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-builder/build.html","searchKeys":["build","open override fun build(): FunctionOptimization<T>","space.kscience.kmath.optimization.FunctionOptimizationBuilder.build"]},{"name":"open override fun build(): XYFit","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.build","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/build.html","searchKeys":["build","open override fun build(): XYFit","space.kscience.kmath.optimization.XYOptimizationBuilder.build"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.kmath.optimization.FunctionOptimization.hashCode","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.kmath.optimization.FunctionOptimization.hashCode"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.FunctionOptimization.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.FunctionOptimization.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationCovariance.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-covariance/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationCovariance.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationLog.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-log/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationLog.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationParameters.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-parameters/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationParameters.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationResult.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-result/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationResult.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationStartPoint.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-start-point/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationStartPoint.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.OptimizationValue.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.OptimizationValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.kmath.optimization.QowRuns.toString","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-runs/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.kmath.optimization.QowRuns.toString"]},{"name":"open override val features: FeatureSet<OptimizationFeature>","description":"space.kscience.kmath.optimization.FunctionOptimization.features","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/features.html","searchKeys":["features","open override val features: FeatureSet<OptimizationFeature>","space.kscience.kmath.optimization.FunctionOptimization.features"]},{"name":"open override val features: FeatureSet<OptimizationFeature>","description":"space.kscience.kmath.optimization.XYFit.features","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/features.html","searchKeys":["features","open override val features: FeatureSet<OptimizationFeature>","space.kscience.kmath.optimization.XYFit.features"]},{"name":"open override val key: FeatureKey<OptimizationFeature>","description":"space.kscience.kmath.optimization.OptimizationPrior.key","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-prior/key.html","searchKeys":["key","open override val key: FeatureKey<OptimizationFeature>","space.kscience.kmath.optimization.OptimizationPrior.key"]},{"name":"open suspend override fun optimize(problem: XYFit): XYFit","description":"space.kscience.kmath.optimization.QowOptimizer.optimize","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-optimizer/optimize.html","searchKeys":["optimize","open suspend override fun optimize(problem: XYFit): XYFit","space.kscience.kmath.optimization.QowOptimizer.optimize"]},{"name":"open val key: FeatureKey<OptimizationFeature>","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.key","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-a-x-i-m-i-z-e/key.html","searchKeys":["key","open val key: FeatureKey<OptimizationFeature>","space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.key"]},{"name":"open val key: FeatureKey<OptimizationFeature>","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.key","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-i-n-i-m-i-z-e/key.html","searchKeys":["key","open val key: FeatureKey<OptimizationFeature>","space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.key"]},{"name":"suspend fun <I : Any, A : ExtendedField<I>, ExpressionAlgebra<Double, I>> XYColumnarData<Double, Double, Double>.fitWith(optimizer: Optimizer<Double, XYFit>, processor: AutoDiffProcessor<Double, I, A>, startingPoint: Map<Symbol, Double>, vararg features: OptimizationFeature = emptyArray(), xSymbol: Symbol = Symbol.x, pointToCurveDistance: PointToCurveDistance = PointToCurveDistance.byY, pointWeight: PointWeight = PointWeight.byYSigma, model: A.(I) -> I): XYFit","description":"space.kscience.kmath.optimization.fitWith","location":"kmath-optimization/space.kscience.kmath.optimization/fit-with.html","searchKeys":["fitWith","suspend fun <I : Any, A : ExtendedField<I>, ExpressionAlgebra<Double, I>> XYColumnarData<Double, Double, Double>.fitWith(optimizer: Optimizer<Double, XYFit>, processor: AutoDiffProcessor<Double, I, A>, startingPoint: Map<Symbol, Double>, vararg features: OptimizationFeature = emptyArray(), xSymbol: Symbol = Symbol.x, pointToCurveDistance: PointToCurveDistance = PointToCurveDistance.byY, pointWeight: PointWeight = PointWeight.byYSigma, model: A.(I) -> I): XYFit","space.kscience.kmath.optimization.fitWith"]},{"name":"suspend fun <T : Any> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, startingPoint: Map<Symbol, T>, vararg features: OptimizationFeature): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.optimizeWith","location":"kmath-optimization/space.kscience.kmath.optimization/optimize-with.html","searchKeys":["optimizeWith","suspend fun <T : Any> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, startingPoint: Map<Symbol, T>, vararg features: OptimizationFeature): FunctionOptimization<T>","space.kscience.kmath.optimization.optimizeWith"]},{"name":"suspend fun <T> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, startingPoint: Map<Symbol, T>, builder: FunctionOptimizationBuilder<T>.() -> Unit = {}): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.optimizeWith","location":"kmath-optimization/space.kscience.kmath.optimization/optimize-with.html","searchKeys":["optimizeWith","suspend fun <T> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, startingPoint: Map<Symbol, T>, builder: FunctionOptimizationBuilder<T>.() -> Unit = {}): FunctionOptimization<T>","space.kscience.kmath.optimization.optimizeWith"]},{"name":"suspend fun <T> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, vararg startingPoint: Pair<Symbol, T>, builder: FunctionOptimizationBuilder<T>.() -> Unit = {}): FunctionOptimization<T>","description":"space.kscience.kmath.optimization.optimizeWith","location":"kmath-optimization/space.kscience.kmath.optimization/optimize-with.html","searchKeys":["optimizeWith","suspend fun <T> DifferentiableExpression<T>.optimizeWith(optimizer: Optimizer<T, FunctionOptimization<T>>, vararg startingPoint: Pair<Symbol, T>, builder: FunctionOptimizationBuilder<T>.() -> Unit = {}): FunctionOptimization<T>","space.kscience.kmath.optimization.optimizeWith"]},{"name":"suspend fun Optimizer<Double, FunctionOptimization<Double>>.maximumLogLikelihood(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, builder: XYOptimizationBuilder.() -> Unit): XYFit","description":"space.kscience.kmath.optimization.maximumLogLikelihood","location":"kmath-optimization/space.kscience.kmath.optimization/maximum-log-likelihood.html","searchKeys":["maximumLogLikelihood","suspend fun Optimizer<Double, FunctionOptimization<Double>>.maximumLogLikelihood(data: XYColumnarData<Double, Double, Double>, model: DifferentiableExpression<Double>, builder: XYOptimizationBuilder.() -> Unit): XYFit","space.kscience.kmath.optimization.maximumLogLikelihood"]},{"name":"suspend fun Optimizer<Double, FunctionOptimization<Double>>.maximumLogLikelihood(problem: XYFit): XYFit","description":"space.kscience.kmath.optimization.maximumLogLikelihood","location":"kmath-optimization/space.kscience.kmath.optimization/maximum-log-likelihood.html","searchKeys":["maximumLogLikelihood","suspend fun Optimizer<Double, FunctionOptimization<Double>>.maximumLogLikelihood(problem: XYFit): XYFit","space.kscience.kmath.optimization.maximumLogLikelihood"]},{"name":"val <T> FunctionOptimization<T>.resultValue: T","description":"space.kscience.kmath.optimization.resultValue","location":"kmath-optimization/space.kscience.kmath.optimization/result-value.html","searchKeys":["resultValue","val <T> FunctionOptimization<T>.resultValue: T","space.kscience.kmath.optimization.resultValue"]},{"name":"val <T> FunctionOptimization<T>.resultValueOrNull: T?","description":"space.kscience.kmath.optimization.resultValueOrNull","location":"kmath-optimization/space.kscience.kmath.optimization/result-value-or-null.html","searchKeys":["resultValueOrNull","val <T> FunctionOptimization<T>.resultValueOrNull: T?","space.kscience.kmath.optimization.resultValueOrNull"]},{"name":"val <T> OptimizationProblem<T>.resultPoint: Map<Symbol, T>","description":"space.kscience.kmath.optimization.resultPoint","location":"kmath-optimization/space.kscience.kmath.optimization/result-point.html","searchKeys":["resultPoint","val <T> OptimizationProblem<T>.resultPoint: Map<Symbol, T>","space.kscience.kmath.optimization.resultPoint"]},{"name":"val <T> OptimizationProblem<T>.resultPointOrNull: Map<Symbol, T>?","description":"space.kscience.kmath.optimization.resultPointOrNull","location":"kmath-optimization/space.kscience.kmath.optimization/result-point-or-null.html","searchKeys":["resultPointOrNull","val <T> OptimizationProblem<T>.resultPointOrNull: Map<Symbol, T>?","space.kscience.kmath.optimization.resultPointOrNull"]},{"name":"val <T> OptimizationProblem<T>.startPoint: Map<Symbol, T>","description":"space.kscience.kmath.optimization.startPoint","location":"kmath-optimization/space.kscience.kmath.optimization/start-point.html","searchKeys":["startPoint","val <T> OptimizationProblem<T>.startPoint: Map<Symbol, T>","space.kscience.kmath.optimization.startPoint"]},{"name":"val XYFit.chiSquaredOrNull: Double?","description":"space.kscience.kmath.optimization.chiSquaredOrNull","location":"kmath-optimization/space.kscience.kmath.optimization/chi-squared-or-null.html","searchKeys":["chiSquaredOrNull","val XYFit.chiSquaredOrNull: Double?","space.kscience.kmath.optimization.chiSquaredOrNull"]},{"name":"val byY: PointToCurveDistance","description":"space.kscience.kmath.optimization.PointToCurveDistance.Companion.byY","location":"kmath-optimization/space.kscience.kmath.optimization/-point-to-curve-distance/-companion/by-y.html","searchKeys":["byY","val byY: PointToCurveDistance","space.kscience.kmath.optimization.PointToCurveDistance.Companion.byY"]},{"name":"val byYSigma: PointWeight","description":"space.kscience.kmath.optimization.PointWeight.Companion.byYSigma","location":"kmath-optimization/space.kscience.kmath.optimization/-point-weight/-companion/by-y-sigma.html","searchKeys":["byYSigma","val byYSigma: PointWeight","space.kscience.kmath.optimization.PointWeight.Companion.byYSigma"]},{"name":"val covariance: Matrix<T>","description":"space.kscience.kmath.optimization.OptimizationCovariance.covariance","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-covariance/covariance.html","searchKeys":["covariance","val covariance: Matrix<T>","space.kscience.kmath.optimization.OptimizationCovariance.covariance"]},{"name":"val data: XYColumnarData<Double, Double, Double>","description":"space.kscience.kmath.optimization.XYFit.data","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/data.html","searchKeys":["data","val data: XYColumnarData<Double, Double, Double>","space.kscience.kmath.optimization.XYFit.data"]},{"name":"val data: XYColumnarData<Double, Double, Double>","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.data","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/data.html","searchKeys":["data","val data: XYColumnarData<Double, Double, Double>","space.kscience.kmath.optimization.XYOptimizationBuilder.data"]},{"name":"val expression: DifferentiableExpression<T>","description":"space.kscience.kmath.optimization.FunctionOptimization.expression","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization/expression.html","searchKeys":["expression","val expression: DifferentiableExpression<T>","space.kscience.kmath.optimization.FunctionOptimization.expression"]},{"name":"val features: MutableList<OptimizationFeature>","description":"space.kscience.kmath.optimization.OptimizationBuilder.features","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-builder/features.html","searchKeys":["features","val features: MutableList<OptimizationFeature>","space.kscience.kmath.optimization.OptimizationBuilder.features"]},{"name":"val model: DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.XYFit.model","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/model.html","searchKeys":["model","val model: DifferentiableExpression<Double>","space.kscience.kmath.optimization.XYFit.model"]},{"name":"val model: DifferentiableExpression<Double>","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.model","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/model.html","searchKeys":["model","val model: DifferentiableExpression<Double>","space.kscience.kmath.optimization.XYOptimizationBuilder.model"]},{"name":"val name: String","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.name","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-a-x-i-m-i-z-e/name.html","searchKeys":["name","val name: String","space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.name"]},{"name":"val name: String","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.name","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-i-n-i-m-i-z-e/name.html","searchKeys":["name","val name: String","space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.name"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.ordinal","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-a-x-i-m-i-z-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.optimization.FunctionOptimizationTarget.MAXIMIZE.ordinal"]},{"name":"val ordinal: Int","description":"space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.ordinal","location":"kmath-optimization/space.kscience.kmath.optimization/-function-optimization-target/-m-i-n-i-m-i-z-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","space.kscience.kmath.optimization.FunctionOptimizationTarget.MINIMIZE.ordinal"]},{"name":"val point: Map<Symbol, T>","description":"space.kscience.kmath.optimization.OptimizationResult.point","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-result/point.html","searchKeys":["point","val point: Map<Symbol, T>","space.kscience.kmath.optimization.OptimizationResult.point"]},{"name":"val point: Map<Symbol, T>","description":"space.kscience.kmath.optimization.OptimizationStartPoint.point","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-start-point/point.html","searchKeys":["point","val point: Map<Symbol, T>","space.kscience.kmath.optimization.OptimizationStartPoint.point"]},{"name":"val runs: Int","description":"space.kscience.kmath.optimization.QowRuns.runs","location":"kmath-optimization/space.kscience.kmath.optimization/-qow-runs/runs.html","searchKeys":["runs","val runs: Int","space.kscience.kmath.optimization.QowRuns.runs"]},{"name":"val symbols: List<Symbol>","description":"space.kscience.kmath.optimization.OptimizationParameters.symbols","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-parameters/symbols.html","searchKeys":["symbols","val symbols: List<Symbol>","space.kscience.kmath.optimization.OptimizationParameters.symbols"]},{"name":"val value: T","description":"space.kscience.kmath.optimization.OptimizationValue.value","location":"kmath-optimization/space.kscience.kmath.optimization/-optimization-value/value.html","searchKeys":["value","val value: T","space.kscience.kmath.optimization.OptimizationValue.value"]},{"name":"val xSymbol: Symbol","description":"space.kscience.kmath.optimization.XYFit.xSymbol","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-fit/x-symbol.html","searchKeys":["xSymbol","val xSymbol: Symbol","space.kscience.kmath.optimization.XYFit.xSymbol"]},{"name":"var pointToCurveDistance: PointToCurveDistance","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.pointToCurveDistance","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/point-to-curve-distance.html","searchKeys":["pointToCurveDistance","var pointToCurveDistance: PointToCurveDistance","space.kscience.kmath.optimization.XYOptimizationBuilder.pointToCurveDistance"]},{"name":"var pointWeight: PointWeight","description":"space.kscience.kmath.optimization.XYOptimizationBuilder.pointWeight","location":"kmath-optimization/space.kscience.kmath.optimization/-x-y-optimization-builder/point-weight.html","searchKeys":["pointWeight","var pointWeight: PointWeight","space.kscience.kmath.optimization.XYOptimizationBuilder.pointWeight"]}]